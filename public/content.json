{"pages":[{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://removeif.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://removeif.github.io 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"音乐歌单收藏","text":"温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，布局参照网友博客所作，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 ->点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"","text":"碎碎念 一些我自己的自言自语，对自己的谴责，对他人的批判… 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ clientID: 'd6ee81786970e2398257', clientSecret: '7108f908bdd0b4524e7411ef878b6a9b7374c0aa', id: '666666', repo: 'blog', owner: 'jaakko0625', admin: \"jaakko0625\", createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"},{"title":"","text":"个人简介: “想清楚自己真正想要的是什么“ 个人信息： “一个很忙的年轻人“ 计划 2022-GOALS 建立一个自己的Blog 完成Flutter课程 完成客户端制作 花时间阅读超过3本书 当前进度 [1/3] 《梦里花落知多少》 – 三毛 《撒哈拉的故事》 – 三毛 [1/3] 《稻草人手记》 – 三毛 年底之前拿到驾照 当前进度 [1/4] 【科目一】 已预约 时间轴记录","link":"/about/index.html"},{"title":"","text":"🎈🎈个人摄影集🎈🎈 20220525 happy birthday to yours 20220527 rainday 20220530 ShenZhenWan Brige 20220530 Still Rain 20220625 Camping 20220704 July Film 图片来自个人拍摄后期处理，如需转发请留言告知。","link":"/album/index.html"}],"posts":[{"title":"Typora流程图代码实例","text":"Typora流程图示例：横向流程图 123456graph LRA[方形] --&gt;B(圆角) B --&gt; C{条件a} C --&gt;|a=1| D[结果1] C --&gt;|a=2| E[结果2] F[横向流程图] 竖向流程图 123456graph TDA[方形] --&gt; B(圆角) B --&gt; C{条件a} C --&gt; |a=1| D[结果1] C --&gt; |a=2| E[结果2] F[竖向流程图] 暂时只用到这两种 其他类型的用到时候再更新吧！","link":"/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/"},{"title":"flutter study day 1 : 学习了Dart语言的基础知识","text":"最近打算用flutter将服务进行中心化于是便有了使用flutter开发的想法 之前就接触了flutter 但是时间关系 一直没有深入了解也只是停留在了Dart语言的基础上就没有继续了对于安卓开发/IOS开发也只是一知半解我相信这将会是一项很有挑战性的项目今天学习完了flutter的Dart语言基础知识结合了之前学过的Java基础知识发现两者之间并没有多大的不同之处所以理解起来并不算难 本打算学习完了基础知识之后动手模仿写一下flutter的简单的组件但是我发现我的flutter环境消失了 xcode这些基础的开发工具都需要重新安装 那么安装好了之后今天就结束了 明天再开始新的征程吧","link":"/2022/04/23/flutter-study-day-1-%E5%AD%A6%E4%B9%A0%E4%BA%86Dart%E8%AF%AD%E8%A8%80%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"title":"flutter study day 2 我的第一个flutter应用","text":"day 2 我的第一个flutter应用今天花了几个小时时间终于将flutter环境处理好了于是开始动手写我的一个flutter项目参照flutter中文官网 首先在android studio创建项目create new flutter project -&gt; flutter -&gt; 填写fluttersdk地址 -&gt; 填写项目名字 -&gt; next -&gt; finish 创建完成 修改main.dartimport 'package:flutter/material.dart'; //引入flutter下的material包 void main() { runApp(const MyApp()); } //声明入口文件 //创建myapp类并继承自StatlessWidget组件 class MyApp extends StatelessWidget { const MyApp({Key? key}) : super(key: key); //进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。 //重写部件 build @override Widget build(BuildContext context) { //传入参数BuildContext context return MaterialApp(//返回 重写后的app title: 'Welcome to Flutter', home: Scaffold( appBar: AppBar(//App顶栏： title: const Text('my_app'),//标题：文本（&quot;my_app&quot;） ), body: const Center(//修改body元素：常量 居中 child: Text('Hello World'),//子元素：文本(&quot;Hello World&quot;) ), ), ); } } 实现如下效果： 导入包包介绍：english_words包含数千个最常用的英文单词以及一些实用功能。在项目目录执行: flutter pub add english_words android studio打开pubspec.yml会提示pub get类似nodejs的npm install安装依赖 导入打开main.dart import 'package:english_words/english_words.dart'; //导入english_words包 未使用的包呈现灰色字体 **调用pair_words ** //重写部件 build @override Widget build(BuildContext context) { //传入参数BuildContext context final word_Pair = WordPair.random();//声明变量 word Pair = wordpaird的random函数随机生成英文 return MaterialApp(//返回 重写后的app title: 'Welcome to Flutter', home: Scaffold( appBar: AppBar(//App顶栏： title: const Text('my_app'),//标题：文本（&quot;my_app&quot;） ), body: Center(//修改body元素：居中显示 child: Text(word_Pair.asPascalCase),//文本(word_paird的随机英文并使用pascalcase进行大驼峰命名法重命名) ), ), ); } 实现如下效果： 添加一个statefull widgetdart.main末尾添加以下代码 //新建类randomwords 继承自statefullwidget class RandomWords extends StatefulWidget { const RandomWords({ Key? key }) : super(key: key); //函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。 //重写_RandomWordState类的createState函数 = _RandomWordsState()函数； @override _RandomWordsState createState() =&gt; _RandomWordsState(); } //新建类——randomwordsstate 继承自 state&lt;泛型 RandomWords&gt; class _RandomWordsState extends State&lt;RandomWords&gt; { //重写 build函数 @override Widget build(BuildContext context) { final wordPair = WordPair.random();//wordPair = 随机生成英文单词 return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法 } } 创建一个无限滚动的 ListView修改dart.main向 _RandomWordsState 类中添加一个 _suggestions 列表以保存建议的单词对，同时，添加一个 _biggerFont 变量来增大字体大小 class _RandomWordsState extends State&lt;RandomWords&gt; { final _suggestions = &lt;WordPair&gt;[];//新增数组_suggestions数据 泛型为WordPair final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0） // ··· } 向 _RandomWordsState 类的 build 方法添加 ListView.builder 在 _RandomWordsState 中的 itemBuilder 里添加 ListTile 函数 class _RandomWordsState extends State&lt;RandomWords&gt; { final _suggestions = &lt;WordPair&gt;[];//新增数组_suggestions数据 泛型为WordPair final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0） //重写 build函数 @override Widget build(BuildContext context) { final wordPair = WordPair.random();//wordPair = 随机生成英文单词 // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法 return ListView.builder(//返回列表显示 padding: const EdgeInsets.all(16.0),//边距16.0 //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距 itemBuilder: /*1*/ (context, i){//参数：连接,迭代器i（从0开始);每调用一次会自增 //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。 //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数 if (i.isOdd) return const Divider();/*2*/ //如果 i增加了：返回divider /* Divider是一个分割线控件 height：是控件的高，并不是线的高度，绘制的线居中。 thickness：线的高度。 indent：分割线前面空白区域。 endIndent：分割线后面空白区域。 默认为浅灰色分隔线 */ final index = i ~/ 2; /*3*/ //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。 if (index &gt;= _suggestions.length){//如果 索引小于等于 _suggestions的长度 _suggestions.addAll(generateWordPairs().take(10));/*4*/ //生成10个单词并增加到_suggestions数据内 } return ListTile(//返回列表 title: Text(//标题为文本 _suggestions[index].asPascalCase, //_suggestions[索引].大驼峰命名 style: _biggerFont, //样式为 定义好的 16.0 ) ); }, ); } } //新建类randomwords 继承自statefullwidget class RandomWords extends StatefulWidget { const RandomWords({ Key? key }) : super(key: key); //函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。 //重写_RandomWordState类的createState函数 = _RandomWordsState()函数； @override _RandomWordsState createState() =&gt; _RandomWordsState(); } 更新 _RandomWordsState 的 build() 方法以使用_buildSuggestions() //新建类——randomwordsstate 继承自 state&lt;泛型 RandomWords&gt; class _RandomWordsState extends State&lt;RandomWords&gt; { final _suggestions = &lt;WordPair&gt;[];//新增数组_suggestions数据 泛型为WordPair final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0） //重写 build函数 @override Widget build(BuildContext context) { // final wordPair = WordPair.random();//wordPair = 随机生成英文单词 // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法 return Scaffold( appBar: AppBar( title: const Text('Startup Name Generator'), ), body: ListView.builder(//返回列表显示 padding: const EdgeInsets.all(16.0),//边距16.0 //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距 itemBuilder: /*1*/ (context, i){//参数：连接,迭代器i（从0开始);每调用一次会自增 //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。 //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数 if (i.isOdd) return const Divider();/*2*/ //如果 i增加了：返回divider /* Divider是一个分割线控件 height：是控件的高，并不是线的高度，绘制的线居中。 thickness：线的高度。 indent：分割线前面空白区域。 endIndent：分割线后面空白区域。 默认为浅灰色分隔线 */ final index = i ~/ 2; /*3*/ //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。 if (index &gt;= _suggestions.length){//如果 索引小于等于 _suggestions的长度 _suggestions.addAll(generateWordPairs().take(10));/*4*/ //生成10个单词并增加到_suggestions数据内 } return ListTile(//返回列表 title: Text(//标题为文本 _suggestions[index].asPascalCase, //_suggestions[索引].大驼峰命名 style: _biggerFont, //样式为 定义好的 16.0 ) ); }, ), ); } } 更新 MyApp 的 build() 方法，修改 title 的值来改变标题，修改 home 的值为 RandomWords widget//创建myapp类并继承自StatlessWidget组件 class MyApp extends StatelessWidget { const MyApp({Key? key}) : super(key: key); //进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。 //重写部件 build @override Widget build(BuildContext context) { //传入参数BuildContext context return const MaterialApp(//返回 重写后的app title: 'Startup Name Generator', home: RandomWords(), ); } } 最终效果如下：","link":"/2022/04/24/flutter-study-day-2-%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAflutter%E5%BA%94%E7%94%A8/"},{"title":"flutter study day 3 认识StatelessWidget基本组件","text":"Stateless Widget的基本组件Stateless Widget的特点：特点：不依赖自身状态，不必渲染自己 Contrainer 容器 约束子节点，居中，内边距、宽高、颜色、背景、装饰器Text 文本 显示文本 使用方法：Text(“文本内容”), Icon 图标 icon库里面有多个flutter原生图标可以调用 使用方法：Icons(Icons.android,Colors.color.blue,) 将会显示一个绿色的安卓图标 CloseButton 关闭按钮 动作按钮 CloseButton(点击后将触发什么…), BackButton 返回按钮 动作按钮 BackButton(点击后将触发什么…), Chip 材料设计 Chip(), 有多个属性，可以设置avatar：图标 设置padding边距 margin边距 插入text文字内容等 Divider 分隔线 Divider(), 多个属性 可以设置容器高度、侧边距 分隔线显色等 Card 卡片 Card(), 多个属性，可设置color颜色、elevator内间距、margin外边距、child子元素设置padding、显示文本等 AlertDialog 弹框 AlertDialog(), title: Text(“设置弹窗标题”), content(‘设置弹窗内容’)， 代码示例： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263import 'package:flutter/material.dart';class LessGroupPage extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( title: 'Stateless基础组件', theme: ThemeData( primarySwatch: Colors.blue, ), home: Scaffold( appBar: AppBar( title: const Text(&quot;Stateless基础组件&quot;),//标题 ), body: Container(//容器组件 decoration: const BoxDecoration(color: Colors.white10),//装饰器 alignment: Alignment.center,//居中显示 child: Column( children: const &lt;Widget&gt;[ Text(//文本组件 &quot;Text&quot;, style: TextStyle(fontSize: 25),//显示文本，字体大小25 ), Icon(//图标组件 Icons.android,//安卓图标 size: 50,//大小50 color: Colors.green,//图标颜色绿色 ), CloseButton(),//关闭按钮 BackButton(),//返回按钮 Chip(//内容元素组件 avatar: Icon(Icons.apple),//元素图标 苹果 label: Text(&quot;hello World!&quot;),//元素内文本 ), Divider(//分隔线 height: 20,//容器高度 indent: 10,//左侧间距 color: Colors.grey,//分隔线颜色黑色 ), Card(//卡片组件 color: Colors.blue,//卡片颜色蓝色 elevation: 5,//内边距 5 margin: EdgeInsets.all(15),//所有外边距15 child: Padding(//添加一个子元素 Padding padding: EdgeInsets.all(8.0),//设置所有外边距 8 child: Text(//显示文本 'fuck me!', ), ), ), AlertDialog(//弹窗组件 title: Text('基础组件之AlertDialog弹窗'),//弹窗标题 content: Text('good job!'),//弹窗内容 ) ], ), ), ), ); }} 编译后样例：","link":"/2022/04/25/flutter-study-day-3-%E8%AE%A4%E8%AF%86StatelessWidget%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/"},{"title":"flutter study day 4 认识StatelessFul基本组件","text":"StatelessFul基本组件可以改变页面状态 这是statelesswidget无状态的组件做不到的 MaterialApp 材料设计的App组件 通常放在根节点 title:标题 theme:主题 home：整个页面 Scaffold flutter封装的带有AppBar&amp;底部导航栏&amp;侧边栏等效果的组件 BottomNavigationBar底部导航栏 至少接收两个item(icon默认图标状态,activeicon激活图标状态) FloatingActionButton 悬浮按钮 实现效果 RefreshIndicator 下拉刷新组件 必须配合列表使用 Image 图片组件 实现效果 TextField 输入框组件 (可用作登录注册页面) 实现效果 PageView页面预览 实现效果（可左右华东切换） 可用作首页通知公告栏 完整代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115import 'package:flutter/material.dart';class StatefulGroup extends StatefulWidget { @override State&lt;StatefulGroup&gt; createState() =&gt; _StatefulGroupState();}class _StatefulGroupState extends State&lt;StatefulGroup&gt; { int _currentIndex = 0;//初始化当前选中页面 默认为0 @override Widget build(BuildContext context) { return MaterialApp( title: 'Stateful基础组件', theme: ThemeData( primarySwatch: Colors.blue, ), home: Scaffold( appBar: AppBar( title: const Text(&quot;Stateful基础组件&quot;),//标题 ), //底部导航栏 bottomNavigationBar: BottomNavigationBar( currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值 onTap: (index){//接收一个index，点击的时候会自动切换到该索引 setState(() {//使用setState改变初始化的当前索引的值 _currentIndex = index; }); }, items: const [ //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个 BottomNavigationBarItem(//第一个item icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态 activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态 label: '首页'//第一个item的显示名称 ), BottomNavigationBarItem(//第二个item icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态 activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态 label: '列表'//第二个item的显示名称 ), ],), floatingActionButton: const FloatingActionButton( onPressed: null, child: Text('点我'), ), body: _currentIndex==0 ? RefreshIndicator( child: ListView( children: &lt;Widget&gt;[ Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容 decoration: const BoxDecoration(color: Colors.white10),//装饰器 alignment: Alignment.center,//居中显示 child: Column( children: &lt;Widget&gt;[ Image.network(//插入网络图片 'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg', //设置图片url height: 300,//高 width: 250,//宽 ),//加载网络图片 const TextField(//文本输入框 decoration: InputDecoration( contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0 hintText: '请输入',//hintText提示文案 hintStyle: TextStyle( fontSize: 20, ),//设置提示文案的样式 ),//使用decoration装饰器 定义文本输入框样式 ), //PageView页面预览的使用 //使用Container约束大小 Container( height: 100, margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10 //设置装饰器 decoration: BoxDecoration(color: Colors.lightBlueAccent),//BoxDecoration设置装饰器背景 //child节点设置pageview child: PageView( children: &lt;Widget&gt;[ _item('Page1',Colors.purple),//接收两个参数（标题，颜色） _item('Page2',Colors.yellow),//接收两个参数（标题，颜色） _item('Page3',Colors.green),//接收两个参数（标题，颜色） ], ), ), ], ), ), ], ), onRefresh: _handleRefresh) : Text('列表'),//_currentIndex==0?如果不等于0 显示:后面的内容 ), ); } Future&lt;Null&gt; _handleRefresh() async{ //asyc设置异步运行 await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒 return null;//返回一个空值 }}_item(String title, Color color) { return Container(//返回一个Container装饰器包裹住 alignment: Alignment.center,//设置居中方式 居中 decoration: BoxDecoration( color: color,//装饰器背景色等于传入的color参数 ),//设置装饰器样式 child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),), );}","link":"/2022/04/27/flutter-study-day-4-%E8%AE%A4%E8%AF%86StatelessFul%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/"},{"title":"flutter study day 6 part 2 检测用户手势以及处理事件","text":"1.检测用户手势 创建GesturePage类 1234class GusturePage extends StatefulWidget { @override State&lt;GusturePage&gt; createState() =&gt; _GusturePageState();} 2.return MaterialApp页面 正常设置AppBar FractionallySizedBox:设置空间大小 widthFatory:设置占用比例 通过Stack与Column布局 设置GestureDetector监听器 监听所有的点按操作,使用自定义方法_printMsg 添加一个容器Container设为点击目标 设置大小 文字 以及 样式 最后为输出每次操作对应的点按方式 实现效果 点按后的效果 2.点击事件 在Stack内调用Positioned类生成一个球 初始化X轴与Y轴 添加子元素：调用GestureDetector手势监听器 设置点击事件触发方法改变球的X&amp;Y轴 使用自定义方法_doMove(e)方法 添加子元素：Container容器 设定容器长宽 设定容器的装饰器：颜色amber黄 容器的边角为直径的一半以此形成圆形的球 实现效果 长按球进行移动 代码示例： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687import 'package:flutter/material.dart';class GusturePage extends StatefulWidget { @override State&lt;GusturePage&gt; createState() =&gt; _GusturePageState();}class _GusturePageState extends State&lt;GusturePage&gt; { String printString = '';// double moveX=0, moveY=0; @override Widget build(BuildContext context) { return MaterialApp(//使用MaterialApp包裹 theme: ThemeData(//主题库 primarySwatch: Colors.blue,//设置主题颜色 蓝色 ), home: Scaffold(//使用scaffold包裹 appBar: AppBar( title: Text(&quot;如何检测用户手势以及处理点击事件？&quot;),//设置标题 leading: GestureDetector(//设置顶栏左侧按钮 onTap: (){//点击事件 Navigator.pop(context);//pop离开某个页面 }, child: Icon(Icons.arrow_back),//leading左侧按钮的图标 arrow_back(返回) ), ), body: FractionallySizedBox(//FractionallySizedBox控件会根据现有空间，来调整child的尺寸 widthFactor: 1,//占满屏幕 child: Stack(//层叠布局 children: &lt;Widget&gt;[ Column(//使Widget里面的组件能够上下排列 children: &lt;Widget&gt;[ GestureDetector(//flutter内所有的手势都会委托给GestureDetector处理 onTap: () =&gt; _printMsg(&quot;点击&quot;),//单击事件 触发自定义方法 打印文字 onDoubleTap: () =&gt; _printMsg(&quot;双击&quot;),//双击事件 触发自定义方法 打印文字 onLongPress: () =&gt; _printMsg(&quot;长按&quot;),//长按事件 触发自定义方法 打印文字 onTapCancel: () =&gt; _printMsg(&quot;取消&quot;),//取消事件 触发自定义方法 打印文字 onTapUp: (e) =&gt; _printMsg(&quot;手指松开&quot;),//手指松开事件 触发自定义方法 打印文字 onTapDown: (e) =&gt; _printMsg(&quot;手指按下&quot;),//手指按下事件 触发自定义方法 打印文字 child: Container(//添加容器 padding: EdgeInsets.all(60),//设置全部边距为60 decoration: BoxDecoration(color: Colors.blue,),//设置装饰器 child: const Text('点我',style: TextStyle( fontSize: 36, color: Colors.white, )), ), ), Text(printString), ], ), Positioned(//创建一个跟随用户手势的小球 left: moveX,//设定X轴 top: moveY, //设定Y轴 child: GestureDetector(//手势监听器 onPanUpdate:(e) =&gt; _doMove(e),//跟随触控更新 child: Container( width: 72,//宽72 height: 72,//长72 decoration: BoxDecoration(//装饰器 color:Colors.amber,//颜色 amber黄 borderRadius: BorderRadius.circular(36),//圆角等于直径的一般 形成圆形 ), ), ), ), ], ), ), ), ); } _printMsg(String msg) {//自定义_printMsg方法，接收一个字符串 setState((){ printString += ' ,$msg';//字符串拼接 }); } _doMove(DragUpdateDetails e) {//球移动的方法 setState(() { moveY += e.delta.dy;//更新每次移动的位置Y moveX += e.delta.dx;//更新每次移动的位置X }); }}","link":"/2022/05/09/flutter-study-day-6-part-2-%E6%A3%80%E6%B5%8B%E7%94%A8%E6%88%B7%E6%89%8B%E5%8A%BF%E4%BB%A5%E5%8F%8A%E5%A4%84%E7%90%86%E4%BA%8B%E4%BB%B6/"},{"title":"flutter study day 5 了解flutter布局开发以及常用组件","text":"flutter布局开发常用组件布局相关三大控件Container约束子节点，居中，内边距、宽高、颜色、背景、装饰器 RenderObjectWidget分为单节点与多节点 SingleChildRenderObjectWidget-单节点布局组件 Opacity-透明度 实现效果 ClipOval-裁剪圆形 实现效果 ClipRect-裁剪方形 实现效果 PhysicalModel-显示不同形状 使用PhysicalModel包裹需要裁剪的子节点加以修饰 实现效果 Align-Center-居中 …… Padding-内边距设置 SizeBox-约束布局大小 FractionallySizeBox-约束水平方向-垂直方向 实现效果 MuitiChildRenderObjectWidget-多节点布局组件 Stack-层叠布局组件 实现效果 Flex 布局组件 Column-从上到下X轴 Row-从左向右Y轴 Warp-从左到右（会自动换行） 实现效果 Flow-很少用 ParentDataWidgetPositioned绝对定位布局 固定view位置通常与stack搭配使用 实现效果 Flexible-Expanded 流式布局可以展开布局大小的组件 实现效果 代码示例：import 'package:flutter/material.dart';//使用flutter布局组件class FlutterLayoutPage extends StatefulWidget { @override State&lt;FlutterLayoutPage&gt; createState() =&gt; _FlutterLayoutPage();}class _FlutterLayoutPage extends State&lt;FlutterLayoutPage&gt; { int _currentIndex = 0;//初始化当前选中页面 默认为0 @override Widget build(BuildContext context) { return MaterialApp( title: 'Stateful基础组件', theme: ThemeData( primarySwatch: Colors.blue, ), home: Scaffold( appBar: AppBar( title: const Text(&quot;Stateful基础组件&quot;),//标题 ), //底部导航栏 bottomNavigationBar: BottomNavigationBar( currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值 onTap: (index){//接收一个index，点击的时候会自动切换到该索引 setState(() {//使用setState改变初始化的当前索引的值 _currentIndex = index; }); }, items: const [ //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个 BottomNavigationBarItem(//第一个item icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态 activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态 label: '首页'//第一个item的显示名称 ), BottomNavigationBarItem(//第二个item icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态 activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态 label: '列表'//第二个item的显示名称 ), ],), floatingActionButton: const FloatingActionButton( onPressed: null, child: Text('点我'), ), body: _currentIndex==0 ? RefreshIndicator( child: ListView( children: &lt;Widget&gt;[ Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容 decoration: const BoxDecoration(color: Colors.white10),//装饰器 alignment: Alignment.center,//居中显示 child: Column(//上下排列组件 children: &lt;Widget&gt;[//子节点组件 Row(//从左到右布局 children: &lt;Widget&gt;[//Row的子节点 ClipOval(//裁剪圆形 child: SizedBox(//约束子节点大小 width: 100,//宽100 height: 100,//高100 child: Image.network('https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg'), //显示网络图片 ), ), Padding( padding: EdgeInsets.all(10),//设置所有边距为10 child: ClipRect(//裁剪成方形 child: Opacity(//为子节点设置透明度 opacity: 0.5,//50%透明度 child: Image.network( 'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg', width: 100, height: 100, ), ), ), ), ], ), // Image.network(//插入网络图片 // 'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg', // //设置图片url // height: 300,//高 // width: 250,//宽 // ),//加载网络图片 const TextField(//文本输入框 decoration: InputDecoration( contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0 hintText: '请输入',//hintText提示文案 hintStyle: TextStyle( fontSize: 20, ),//设置提示文案的样式 ),//使用decoration装饰器 定义文本输入框样式 ), //PageView页面预览的使用 //使用Container约束大小 Container( height: 100, margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10 child: PhysicalModel(//显示不同形状组件 color: Colors.transparent,//透明显示颜色 透明 borderRadius: BorderRadius.circular(20),//裁剪成圆角半径 clipBehavior: Clip.antiAlias,//抗锯齿 child: PageView( children: &lt;Widget&gt;[ _item('Page1',Colors.purple),//接收两个参数（标题，颜色） _item('Page2',Colors.yellow),//接收两个参数（标题，颜色） _item('Page3',Colors.green),//接收两个参数（标题，颜色） ], ), ), ), ], ), ), Column(//增加一行布局 children: &lt;Widget&gt;[//添加子节点 FractionallySizedBox(//约束水平方向-垂直方向组件 widthFactor: 1,//默认宽度为1 child: Container(//设置子节点容器 decoration: BoxDecoration(color: Colors.greenAccent),//设置容器背景颜色 child: Text('宽度撑满'),//设置容器内子节点 ), ), ], ), Stack(//实现叠加效果组件 children: &lt;Widget&gt;[//添加子节点 Image.network( 'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg', width: 100, height: 100, ),//子节点组件1 Positioned(//定位布局 right: 0, bottom: 0, //如上写法：Positioned设置定位在做下方 child: Image.network( 'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg', width: 100, height: 100, )//子节点组件2 ), ], ), Wrap(//从左到右排列 自动换行 spacing: 6,//水平j安居 runSpacing: 10,//垂直间距 children: &lt;Widget&gt;[ _chip('flutter'),//调用_chip方法（传入label） _chip('i'), _chip('love'), _chip('you'), _chip('too much!'), ], ) ], ), onRefresh: _handleRefresh) : Column( children: &lt;Widget&gt;[ Text('列表'),//第一行显示内容 Expanded( child: Container(//设置Container的decoration装饰器 decoration: BoxDecoration(color: Colors.greenAccent), //使用BoxDecoration约束背景颜色 child: Text('拉伸高度填满'), //第二行显示内容 使用Expanded后第二行延伸Y轴进行填满 ), ) ], )//_currentIndex==0?如果不等于0 显示:后面的内容 ), ); } Future&lt;Null&gt; _handleRefresh() async{ //asyc设置异步运行 await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒 return null;//返回一个空值 }}_chip(String label) {//创建_chip方法，接收参数label return Chip(label: Text(label),//返回格式化后的label avatar: CircleAvatar(//添加圆角头像 backgroundColor: Colors.blue.shade900,//设置透明度900 child: Text ( label.substring(0,1),//取label的第一个字符 style: const TextStyle(fontSize: 10,),//样式：文本样式（字体大小10） ), ), );}_item(String title, Color color) { return Container(//返回一个Container装饰器包裹住 alignment: Alignment.center,//设置居中方式 居中 decoration: BoxDecoration( color: color,//装饰器背景色等于传入的color参数 ),//设置装饰器样式 child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),), );}","link":"/2022/04/28/flutter-study-day-5-%E4%BA%86%E8%A7%A3flutter%E5%B8%83%E5%B1%80%E5%BC%80%E5%8F%91%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/"},{"title":"flutter study day 6 创建和使用flutter路由与导航","text":"示例： 在app首页添加路由 **在MyApp的MaterialApp内添加routes：** 别名:(BuilderContext context)=&gt;需要指向的页面 **创建RouteNavigator组件** **重写_NavigatorState组件** bool byName = false; //添加一个布尔值变量byName默认值为false return Container **_item方法** **实现效果** 点击后跳转到对应的页面 **左上角的返回按钮需要手动在对应页面内添加一个Navigator.pop方法（跳出指定页面）** 每一个页面都需要添加此按钮才能参与返回上一页否则只能沿左侧右滑返回上一页 **示例代码：** 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081import 'package:flutter/material.dart';import 'package:study_project1/statfull_grooup_page.dart';import './less_group_page.dart';import 'flutter_layout_page.dart';void main() { runApp(MyApp());}class MyApp extends StatelessWidget { const MyApp({Key? key}) : super(key: key); @override Widget build(BuildContext context) { return MaterialApp( title: 'Flutter Demo', theme: ThemeData( primarySwatch: Colors.blue, ), home: Scaffold(//实现一个页面 appBar: AppBar(//顶部栏 title: Text('如何创建和使用路由与导航'),//标题 ), body: RouteNavigator(),//页面：使用路由组件 ), routes: &lt;String,WidgetBuilder&gt;{//创建路由：接收两个参数Stirng&amp;WidgetBuilder 'less': (BuildContext context)=&gt;LessGroupPage(),//指向LessGroupPage 'ful': (BuildContext context)=&gt;StatefulGroup(),//指向StatefulGroup 'layout': (BuildContext context)=&gt;FlutterLayoutPage(),//指向FlutterLayoutPage } ); }}class RouteNavigator extends StatefulWidget { @override _RouteNavigatorState createState() =&gt; _RouteNavigatorState();}class _RouteNavigatorState extends State&lt;RouteNavigator&gt; { bool byName = false; @override Widget build(BuildContext context) { return Container(//容器 child: Column(//布局 children: &lt;Widget&gt;[ SwitchListTile(//添加一个开关组件 title: Text('${byName?'':'不'}通过路由名跳转'),//显示是否通过路由名跳转 value: byName,//byName控制true或false onChanged: (value){//传入byName的值 setState(() { byName = value; }); }), _item('StatelessWidget基础组件',LessGroupPage(),'less'),//第一个路由按钮 _item('StatefullWidget基础组件',StatefulGroup(),'ful'),//第二个路由按钮 _item('Layout基础组件',FlutterLayoutPage(),'layout'),//第三个路由按钮 //_item为自定义方法，接收三个参数：title，页面，路由名称 ], ) ); } _item(String tittle, page, String routeName) {//自定义item方法 接收三个参数 return Container(//返回一个ring器 child: RaisedButton(//点击按钮 onPressed: (){ if(byName) {//如果包含byName Navigator.pushNamed(context, routeName);//跳转到对应的页面 } else {//不包含byName Navigator.push(//跳转到传入的page页面 context, MaterialPageRoute(builder: (context) =&gt; page)); } }, child: Text(tittle),//容器标题为传入的标题 ), ); }}","link":"/2022/05/09/flutter-study-day-6-%E5%88%9B%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8flutter%E8%B7%AF%E7%94%B1%E4%B8%8E%E5%AF%BC%E8%88%AA/"},{"title":"flutter study day 7 导入和使用flutter资源","text":"导入在pubspec.yaml中删除assets的注释以及填写资源文件路径已经文件名 使用 以下为图片资源的用例 通过AssetImage组件使用图片路径进行调用图片 实现效果 代码示例： 123456789101112131415161718192021222324252627282930313233343536373839import 'package:flutter/material.dart';class ResPage extends StatefulWidget { @override State&lt;ResPage&gt; createState() =&gt; _Respage();}class _Respage extends State&lt;ResPage&gt; { @override Widget build(BuildContext context) { return Scaffold(//页面组件:包含导航 菜单 底部导航 悬浮按钮 主体内容 appBar: AppBar(//appbar 顶部导航 title: Text('如何导入和使用flutter资源文件？'),//顶部标题 leading: GestureDetector(//设定标题最左边的监听器 onTap: () {//按钮方法 Navigator.pop(context);//触发离开当前页面 }, child: Icon(Icons.arrow_back),//按钮图标 返回键 ), ), body: Center(//主体内容：居中布局 child: Column(//使用column按顺序排列组件 mainAxisAlignment: MainAxisAlignment.center,//居中显示 children: const &lt;Widget&gt;[ Image(//使用图片组件 width: 350,//定义宽度 height: 550,//高度 image: AssetImage('images/night.jpg'),//通过路径图片显示图片 ) ], ), ), ); }}","link":"/2022/05/11/flutter-study-day-7-%E5%AF%BC%E5%85%A5%E5%92%8C%E4%BD%BF%E7%94%A8flutter%E8%B5%84%E6%BA%90/"},{"title":"vsco+hexo+github创建博客","text":"通过Vsco+Hexo+Github创建个人博客=============================环境准备 本地mac = node12 + vscode + hexo + icaruslinux服务端 = ndoe12 + npm + pm2 + crontabgithub创建项目储存博客内容使用GithubDesktop打开项目 本地环境搭建node使用了pkg方式安装https://nodejs.org/download/release/v12.22.7/ 安装 hexo-clinpm i -g hexo-cli执行以下命令初始化hexohexo init 编辑 _config.yml title: Jaakko的365天 #网站标题 subtitle: '' description: '' keywords: null #搜索关键字 author: Jaakko #作者名称 language: zh-CN #显示语言 执行以下命令拉起hexohexo s 安装 icarus主题npm install hexo-theme-icarushexo config theme icarus 上述环境搭建好后使用GitHubDesktop将内容Push到github linux安装好环境后使用pm2后台挂起hexorun_pm2.js //run const { exec } = require('child_process') exec('hexo server',(error, stdout, stderr) =&gt; { if(error){ console.log('exec error: ${error}') return } console.log('stdout: ${stdout}'); console.log('stderr: ${stderr}'); }) pm2 start run_pm2.js pm2挂载hexopm2 startup 开机自启动 linux使用crontab定时git pull nano /etc/crontab */10 * * * * root /root/blog/auto_git_pull.sh &gt;&gt; /root/blog.log 2&gt;&amp;1 /etc/init.d/crontab restart auto_git_pull.sh #!/bin/bash cd /root/blog/ git pull linux服务端部署完毕 mac本地hexo创建文章hexo new “我的第一篇博客”编写文章push到github自动同步到网站","link":"/2022/04/20/vsco-hexo-github%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"title":"梦里花落知多少-三毛:克里斯","text":"克里斯不得不说 这是一篇很吸引我的文章 这本《梦里花落知多少》是我想要了解三毛而看的第一本书，而在克里斯这个章节中使我更加了解到Echo。 关于克里斯的叙述： 克里斯是心理学毕业后再纳粹政府工作，在工作期间迫于研究而对一个俘虏进行了一项心理实验，实验中将俘虏关在一个隔音的小黑屋子里，没有光线、没有时间观念、没有人与他交谈、不定时送餐，最终的结果当然是被关的人疯掉了。这使得克里斯非常的愧疚，觉得这些都是自己欠下的，要用一声的清贫生活来偿还。克里斯与Echo的相遇：相遇是在一家影印馆内，排队期间老板因为一件小事要暂时离开，Echo只能在原地等待并帮老板看管机器，排在Echo后面的是克里斯，克里斯先找了Echo说话，问了一些关于中国的传统，Echo对于这些却也只是听闻不曾深入了解过。奇怪的是克里斯竟然知道Echo的名字，并且向Echo介绍了自己也是一名作家，有一个关于心理学的书已50w+的销量（只是为了增加销量而刻意刻上去的，实际销量1000也没有）。 两位郭姓未婚老年人姐妹：Echo由于用眼过度导致眼睛无法专注看任何东西，克里斯写过一本《关于治疗眼睛的方法》，邀请Echo观看此书，由于Echo眼睛不便阅读便要求克里斯念给她听，但是需要配合运动治疗克里斯邀请了Echo到他的家中做客并治疗眼睛，克里斯家中有两位老人只会荷兰语印尼华侨，在治疗眼睛的时候Echo也简述了关于她个人的生平，以及了解到了克里斯家中的状况以及Echo是唯一一个到过克里斯住所的人。 克里斯肺病：克里斯在家中病倒，由于克里斯没有其他的朋友，老人打电话给Echo让她赶紧过来看看，Echo将克里斯送到医院，并为克里斯承担了昂贵的一天两百美金的住院费，也在克里斯住院期间了解到了克里斯是在一家餐馆做卸冰背冰的工作，非常辛苦，收入也是非常微薄，这也是导致了克里斯肺病的根本原因，在克里斯病好了以后Echo也只是去过几次，后面甚至是再也不去了，也许是担心交谈中谈到金钱导致各自尴尬吧。 一切又回到了最初相识的时候样子，只不过是多了一分克里斯对于Echo的愧疚。","link":"/2022/04/27/%E6%A2%A6%E9%87%8C%E8%8A%B1%E8%90%BD%E7%9F%A5%E5%A4%9A%E5%B0%91-%E4%B8%89%E6%AF%9B-%E5%85%8B%E9%87%8C%E6%96%AF/"},{"title":"梦里花落知多少-三毛:荒山之夜","text":"荒山之夜Echo的好友拉蒙爱上了一位正在念高中的女学生 拉蒙问了一个问题，Echo回答的很好 “做木匠是低贱的工作吗？” “不，不是的” “那为什么读书人经常看不起我们这些木匠呢？”“那是因为他们没有把书念好，脑筋念笨了呢！” 当Echo因为胃痛想要在夜里独自下山时 拉蒙想要送她下山，却被拒绝 他说：“Echo，你是骄傲的，你一向性格温和，其实是固执而拒人千里的”","link":"/2022/04/26/%E6%A2%A6%E9%87%8C%E8%8A%B1%E8%90%BD%E7%9F%A5%E5%A4%9A%E5%B0%91-%E4%B8%89%E6%AF%9B-%E8%8D%92%E5%B1%B1%E4%B9%8B%E5%A4%9C/"},{"title":"申请一年野卡域名证书","text":"首先由于Let’S申请的免费泛域证书有效期只有三个月每三个月就要重新生成证书并替换证书文件不像单域名一样可以无限renew并且不用替换证书文件 然后我在购买SSL的网站转了一圈发现 购买价格最低在40美金一年平均价格在350美金 名牌商家的价格甚至超过600美金所以 我找到了一个低成本（30元）申请一年泛域名证书方法在节礼给大家分享一下流程大概是下面这样 1.申请一个域名邮箱(admin@domain.ltd) 2.生成CSR + Private Key 3.使用Token + CSR 申请Alpha泛域 4.在邮箱内确认开通泛域信息 5.合并中间证书 域名邮箱申请CSR生成地址SSL申请地址Token购买地址 证书合并方式：新建一个空白文档(cert.pem) 粘贴邮件尾部的证书 粘贴Alpha中间证书‘—–BEGIN CERTIFICATE—–MIIETTCCAzWgAwIBAgILBAAAAAABRE7wNjEwDQYJKoZIhvcNAQELBQAwVzELMAkGA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jvb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw0xNDAyMjAxMDAwMDBaFw0yNDAyMjAxMDAwMDBaMEwxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMSIwIAYDVQQDExlBbHBoYVNTTCBDQSAtIFNIQTI1NiAtIEcyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2gHs5OxzYPt+j2q3xhfjkmQy1KwA2aIPue3ua4qGypJn2XTXXUcCPI9A1p5tFM3D2ik5pw8FCmiiZhoexLKLdljlq10dj0CzOYvvHoN9ItDjqQAu7FPPYhmFRChMwCfLew7sEGQAEKQFzKByvkFsMVtI5LHsuSPrVU3QfWJKpbSlpFmFxSWRpv6mCZ8GEG2PgQxkQF5zAJrgLmWYVBAAcJjI4e00X9icxw3A1iNZRfz+VXqG7pRgIvGu0eZVRvaZxRsIdF+ssGSEj4k4HKGnkCFPAm694GFn1PhChw8K98kEbSqpL+9Cpd/do1PbmB6B+Zpye1reTz5/olig4hetZwIDAQABo4IBIzCCAR8wDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPXN1TwIUPlqTzq3l9pWg+Zp0mj3MEUGA1UdIAQ+MDwwOgYEVR0gADAyMDAGCCsGAQUFBwIBFiRodHRwczovL3d3dy5hbHBoYXNzbC5jb20vcmVwb3NpdG9yeS8wMwYDVR0fBCwwKjAooCagJIYiaHR0cDovL2NybC5nbG9iYWxzaWduLm5ldC9yb290LmNybDA9BggrBgEFBQcBAQQxMC8wLQYIKwYBBQUHMAGGIWh0dHA6Ly9vY3NwLmdsb2JhbHNpZ24uY29tL3Jvb3RyMTAfBgNVHSMEGDAWgBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0BAQsFAAOCAQEAYEBoFkfnFo3bXKFWKsv0XJuwHqJL9csCP/gLofKnQtS3TOvjZoDzJUN4LhsXVgdSGMvRqOzm+3M+pGKMgLTSxRJzo9P6Aji+Yz2EuJnB8br3n8NA0VgYU8Fi3a8YQn80TsVD1XGwMADH45CuP1eGl87qDBKOInDjZqdUfy4oy9RU0LMeYmcI+Sfhy+NmuCQbiWqJRGXy2UzSWByMTsCVodTvZy84IOgu/5ZR8LrYPZJwR2UcnnNytGAMXOLRc3bgr07i5TelRS+KIz6HxzDmMTh89N1SyvNTBCVXVmaU6Avu5gMUTu79bZRknl7OedSyps9AsUSoPocZXun4IRZZUw== —–END CERTIFICATE—–’ 以上[1+2]合并成cert.pem 另外新建一个空白文档(cert.key)粘贴在第二步生成Private Key 将以上两个证书密钥部署到服务器即可完成证书申请到部署全部步骤","link":"/2022/04/22/%E7%94%B3%E8%AF%B7%E4%B8%80%E5%B9%B4%E9%87%8E%E5%8D%A1%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/"},{"title":"重庆:因为一个人 记住一座城","text":"Day1: 漾 · LiveHouse一个偶尔会很嘈杂的地方，一个很多俊男靓女的地方，一个很多网红推荐的听歌喝酒玩游戏的地方，这里也是我们相见的地方。要说实话的话，这里确实没什么好玩的，除了其中那么一两个驻唱的唱功还可以，氛围一般。 Slowly当天我们预约的位置需要在九点半之前到，否则位置就要被取消，所以我们赶在九点钟就到了现场，一开始等人齐还没有喝酒，正式开始喝的话应该是要从十点钟算起，喝了一个小时，还没看到你人来，我开始担心了：她该不会放我们鸽子了吧？所幸大概是十一点半左右，你终于来了，我着急的心终于放了下来，虽然你的长相很普通，但是你的笑容很甜，当时的我还没有这么想，现在想起来也只能回味了。 Intro或许是因为只有我坐在你旁边，而且酒吧的音响很大声，所以你只能找我说话，你向我把周围所有人都稍微打听了一遍，然后向每个人都敬了一杯酒。我感到意外，这就是重庆人打招呼的方式吗。你问我多大，我说我00的，你说你也是，但我一眼就看出来了你不是，后面你也坦诚了其实你是99的。在玩游戏的时候通过交流中我也简单的了解到虽然你的外表娇小，但是你性格的另一面是个内心强大的人，有着面对一切的勇气。 Day1:End到了晚上大概是一点多，大家都喝的差不多了，也就各自打车回家了。 Day2:Begin回到酒店后，我知道第二天我们还会出来见面，或许这就是心灵感应吧，第二天你真的出现了。跟我们一起吃了晚饭后逛了一会决定去重庆长江大桥的桥底下，也就是洪崖洞的对岸拍一些照片。在等待她们拍照的时候重庆的特色一个是在景点内一些小贩会过来喊一圈她们想要像你出售的特色小吃。然后你突然问我你想吃冰棍吗，我说不吃。我就猜到其实你想吃随即就问道：你想吃吗?你说出了内心的想法，其实你不想一个人吃，那我作为一个男子汉当然是要满足身边女性的所有诉求的，好在小贩子还没有走远，追过去还来得及。我立即跑过去要了两根老冰棍，真的很冰，随即我想到的是你穿的这么少，会不会冷，所幸我带了一件薄外套，冷的话你也可以随时找我借。在桥底往上看是重庆的长江大桥，往对岸看就是著名的风貌街道的洪崖洞，洪崖洞背后的就是一栋一栋的高楼，去过的应该都不由得感叹一声重庆的夜景真的很美，不过重要的不是夜景有多美，而是一起看夜景的人是谁吧。 Night在桥底上来之后打了两辆车到了一条路边有几家摆摊的地方，本意是想要到一家特色烧烤的连锁店吃串串的，但是好像大家都不是很想吃串串，就点了一人一碗在重庆吃的最多的东西”冰汤圆”。然后找了一家看起来应该很好吃的烧烤档坐下喝酒吃烧烤。也是在这间烧烤档你给我留下了最深的影像，不知道是不是因为坐在你对面的是我，所以你总是看着我，看着我时也总是带着你那很愉悦的看起来很甜美的微笑，你的笑容大概就是我这次旅行的最大收获了，谢谢你，陈小姐。酒后当然也就各自散去了，虽然第二天还要赶早上八点的飞机，但也还是喝的差点就不省人事了。 Traval:END因为要赶早上八点的飞机，所以在凌晨五点半就要起床洗漱收拾东西，起床后我感到很空虚，心里好像少了什么东西，像是失恋了一样，每当重要的人要离开的时候这种感觉就会涌上心头，所幸在坐出租车到机场的路上正是太阳升起的时候，稍微治愈了我。下午一点回到了住所，感情愈发强烈，陈小姐在不知不觉中就成为了我心里的那个重要的人，但是我们终究也只能是擦肩而过的成为彼此的路人了，我相信这个世界上是存在心灵感应的，当我内心中的感情涌上心头的时候，你那边应该也是吧。从重庆回来之后我发现时间过得很慢，慢到我能自我意识到我失去了你，慢到我没法专注于眼前的工作，慢到每时每刻我都会想起你那甜美的笑容，慢到我想马上坐上飞机回到重庆去见你。这篇文章也是趁着感情还没有完全消失之前，虽然没法把她永远留下来，但我可以将这美好的景色留下来，每当看到的时候都能想起她。 热情相拥的相识过后竟是落寞的悲欢离合，谁又会只满足于当下的快乐呢？","link":"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/"},{"title":"解决hexo图片插入不显示问题","text":"说明： 在这之前使用hexo写东西上传照片总是不太方便，所以今天查了一下hexo图片上传以及显示的解决方案。 在hexo目录执行 npm install hexo-asset-img --save 修改_config.yml将post_asset_folder: false 修改为true post_asset_folder: true 通过hexo n “文档文章”新建文章会在source的post下自动生成一个 文章.md 以及一个文章同名目录那么文章同名目录下就可以存放我们需要引用的图片了调用方法： ![](文章目录/your_img.jpg) 经测试：通过以上方式插入图片，在VSCODE的Preview能够正常显示图片在网站的文章内会自动转换成：格式这样即不影响我们编辑文章也不影响文章图片正常显示我们需要的做的就只是正常生成文章将需要的图片上传到目录中正常插入图片 如果使用typora只需要设置文章根目录，上传图片可以直接拖拽或者粘贴会更加便捷。 今天的技术分享到此结束！！","link":"/2022/04/25/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"title":"雨天","text":"2022年5月12日 天气 暴雨雨是凌晨3点开始下的 我的生物钟是每天晚上的3点钟入睡 早上10点醒因为下雨 听着雨滴打在窗口的声音入睡是一件很惬意的事情睡醒的时候 雨还在下 听起来很悲伤 2022年5月13日 天气 阴天转特大暴雨下午一点到了常去的咖啡馆 当时还没下雨 下午3点开始下大雨了晚上7点准备回家了 但是外面雨还是很大 那就再等一等吧 结果八点了 雨势并没有减小 那就冒着大雨撑伞回家吧 不出意料当我到家的时候 我的宽松牛仔裤已经湿了一小半 QwQ 2022年5月14日 天气 阴天偶尔小雨今天已经没有下雨了 也就只有偶尔会下那么几分钟的小雨今天出门比较晚 下午3点钟才到咖啡室 也不知道是什么偷走了我的时间7点了 还是没有下雨 也是时候回家了","link":"/2022/05/13/%E9%9B%A8%E5%A4%A9/"},{"title":"flutter study day 8 flutter打开第三方应用","text":"url_launcher插件：用于打开第三方app 使用方式： 导入在pubspec.yaml的dependencies中添加依赖 执行 flutter pub get获取依赖包 或者直接在android studio中get dependencies 导入包文件在页面中使用import导入包文件import ‘package:url_launcher/url_launcher.dart’; 使用包文件 定义一个按钮 通过_launchUrl()自定义方法调用 _luanchUrl官方代码修改示例： 1234final Uri _url = Uri.parse('https://colacloud.online');_launchUrl() async { if (!await launchUrl(_url)) throw '无法打开 $_url'; } 实现效果： 点击后会在app内部拉起浏览器并打开指定网站","link":"/2022/05/14/flutter-study-day-8-flutter%E6%89%93%E5%BC%80%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8/"},{"title":"flutter study day 10 part 3 如何自定义字体","text":"字体注册 字体下载官网： ///字体下载地址：https://fonts.google.com/specimen/Rubik+Mono+One?selection.family=Rubik+Mono+One ///更多参考：https://flutter.dev/docs/cookbook/design/fonts 2. 在项目目录创建font文件夹，将字体文件拷贝至该目录。 1234567修改pubspec.yml 底部添加字段fonts: - family: Koulen-Regular fonts: - asset: font/Koulen-Regular.ttf运行flutter pubget 使用字体 全局应用：在MaterialApp&gt;theme&gt;ThemeData 加入字段：fontFamliy: ‘Koulen-Regular’;//全局生效 页面内所有文字都应用该字体 实现效果： 局部应用：Text(‘11’, style: TextStyle( fontFamliy:'Koulen-Regular')) 实现效果：","link":"/2022/05/18/flutter-study-day-10-part-3-%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93/"},{"title":"flutter study day 10 part 2 修改flutter应用主题","text":"使用StatefulWidget进行修改，因为StateLessWidget不具备对组件进行动态修改的能力。 Material &gt; theme: ThemeData 夜间模式： brightness: Brightness.dark,//添加到ThemeData内，页面就会变成夜间模式 使用后页面变成夜间模式 通过私有变量进行动态修改日间/页面模式： Brightness _brightness = Brightness.light;//初始化主题模式 默认日间模式 brightness的值交给setState控制 brightness: _brightness,//动态切换 以此实现可控制效果","link":"/2022/05/18/flutter-study-day-10-part-2-%E4%BF%AE%E6%94%B9flutter%E5%BA%94%E7%94%A8%E4%B8%BB%E9%A2%98/"},{"title":"flutter study day 10 获取flutter应用的生命周期","text":"使用WidgetsBindingObserver检测用户操作 123456789WidgetsBindingObserver :监测页面生命周期组件添加 with WidgetsBindingObserver {//重写initState @override WidgetsBinding.instance.addObserver(this);//添加观察者 super.initState();} didChangeAppLifecycleState()接收两个参数：页面State组件 state state存储了app应用的当前状态 通过监测用户操作执行相关命令 123456789101112131415161718192021@override void didChangeAppLifecycleState(AppLifecycleState state) { //父类调用 super.didChangeAppLifecycleState(state); //可有可无 因为本身就没有任何内容 //打印当前state状态 print('state状态 ：$state'); //判断当前状态 执行操作 //生命周期变化时回调 // resumed:应用可见并可响应用户操作 // inactive:用户可见，但不可响应用户操作 // paused:已经暂停了，用户不可见、不可操作 if (state == AppLifecycleState.paused) { print('已经暂停了，用户不可见、不可操作:App进入后台'); } else if (state == AppLifecycleState.resumed) { print('应用可见并可响应用户操作：App进去前台'); } else if (state == AppLifecycleState.inactive) { //不常用 print('应用处于被打断状态'); } }","link":"/2022/05/18/flutter-study-day-10-%E8%8E%B7%E5%8F%96flutter%E5%BA%94%E7%94%A8%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"},{"title":"flutter study day 11 part 1 拍照app开发:image_picker依赖","text":"需求：点击拍照按钮-》弹出选项（拍照/照片图库） 点击拍照图库：可以选择照片， 点击拍照：调用相机自带功能 app内部页面内显示/删除：已经添加的照片 照片布局：自动换行 1.导包 image_picker: ^0.8.5+3 2.修改IOS的runner/info.plist 按照插件说明修改添加权限说明 NSCameraUsageDescription Used to demonstrate image picker plugin NSMicrophoneUsageDescription Used to capture audio for image picker plugin NSPhotoLibraryUsageDescription Used to demonstrate image picker plugin UIBackgroundModes remote-notification 3.按照插件提供的代码进行测试相机功能 IOS模拟机无相机功能，仅测试相册获取照片","link":"/2022/05/19/flutter-study-day-11-part-1-%E6%8B%8D%E7%85%A7app%E5%BC%80%E5%8F%91-image-picker%E4%BE%9D%E8%B5%96/"},{"title":"flutter study day 11 part 2 拍照app开发:获取图片与展示图片","text":"需求：点击拍照按钮-》弹出选项（拍照/照片图库） 点击拍照图库：可以选择照片， 点击拍照：调用相机自带功能 app内部页面内显示/删除：已经添加的照片 照片布局：自动换行 1.设置页面布局 12345678910111213141516171819202122232425@override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text('【实战尝鲜】拍照APP开发'), leading: GestureDetector( onTap: () { Navigator.pop(context);//离开当前页面 }, child: const Icon(Icons.arrow_back),//返回按钮图标 ), ), body: Center(//页面居中布局 child: Wrap(//flex平滑布局 spacing: 5,//X轴间距 runSpacing: 5,//Y轴jian距 children: _genImages(),//子节点：获取照片 ), ), floatingActionButton: FloatingActionButton( onPressed: _pickImage, tooltip: '选择图片', child: const Icon(Icons.add_a_photo), ), ); 2.编辑_pickImage函数方法 showModalBottomSheet：一个由下往上弹框 接收两个参数：context builder() 1234567891011121314_pickImage() {//选择照片的方法 showModalBottomSheet( context: context, builder: (context) =&gt; Container(//设置容器储存按钮 height: 160,//设置容器高度 child: Column(//组件上下排列 children: &lt;Widget&gt;[ //排列一下两个组件 _item('拍照',true), _item('照片图库',false), ], ), )); } 3.自定义_item方法 1234567891011121314//自定义item方法 接收两个参数：标题 &amp; 是否获取图片 _item(String title, bool isTakePhoto) { return GestureDetector(//设置按钮监听器 child: ListTile(//子节点：排列列表 leading: Icon( isTakePhoto ? Icons.camera_alt : Icons.photo_library //展示按钮图标 ), title: Text(title),//展示对应item的文字标题 onTap: () =&gt; getImage(isTakePhoto),//点击后执行拍照 或 图库 ), ); } 4.设置选择照片后平滑排列照片并自动换行以及删除选中照片 1234567891011121314151617181920212223242526272829303132333435363738394041424344//设置选择照片后平滑排列照片并自动换行以及删除选中照片 _genImages(){ //该返回选中的照片 return _images.map((file){ return Stack(//让照片进行层叠布局排列 children: &lt;Widget&gt;[//排列子组件 ClipRRect(//让每一张照片进行圆角处理 borderRadius: BorderRadius.circular(5),//设置圆角边距5px child: Image.file( File(file.path),//文件路径 height: 160,//设置高度 width: 90,//设置宽度 fit: BoxFit.fill,//填满容器 ), ), Positioned(//设置定位按钮 right: 5,//右5 top: 5,//上5 //右上角 child: GestureDetector(//设置按钮监听器 //设置点击按钮 onTap: () { setState((){//点击按钮执行的动作 _images.remove(file);//删除指定的文件/图片 }); }, child: ClipOval(//设置一个圆角的删除按钮 child: Container(//使用容器包裹 padding: const EdgeInsets.all(3),//四周围间距3 //设置装饰器 decoration: const BoxDecoration(color: Colors.black26),//半透明颜色 child: const Icon( Icons.close,//图标 关闭图标 size: 18,//图标大小 color: Colors.white,//图标颜色 白色 ), ), ), ), ), ], ); }).toList();//将map转换为列表排列 } 最终实现效果：","link":"/2022/05/19/flutter-study-day-11-part-2-%E6%8B%8D%E7%85%A7app%E5%BC%80%E5%8F%91-%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%B8%8E%E5%B1%95%E7%A4%BA%E5%9B%BE%E7%89%87/"},{"title":"flutter study day 11 part 3 基础知识总结","text":"1.如何搭建&amp;运行flutter项目2.使用包&amp;插件3.statelesswidget基础组件4.statefulwidget基础组件5.使用flutter进行布局开发6.创建使用flutter路由&amp;导航7.检测用户手势&amp;处理点击事件8.导入使用flutter资源文件9.打开第三方应用10.实战开发拍照功能","link":"/2022/05/19/flutter-study-day-11-part-3-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"},{"title":"flutter study day 12 part 1 关于图片控件的基础知识","text":"Image widget Flutter中用来展示图片的widget 如果需要使图片根据屏幕分辨率自动适配需要使用AssetImaget指定图像，并确保Image widget存在MaterialApp或MediaQuery下方 如何加载网络图片？ Image.network( ‘url’ ) 如何加载静态图片？ pubspec.yml 写入图片src Image.asset( ‘src’ ) 如何加载本地图片？ pubspec.yml 添加path_provider插件 导入头文件（插件包） 调用FlutterBuilder()函数加载图片 123456789101112131415import 'dart:io';import 'package:path_provider/path_provider.dart';//Image.file(File('/sdcard/Download/Stack.png')),FutureBuilder(future: _getLocalFile(&quot;Download/Stack.png&quot;), builder: (BuildContext context, AsyncSnapshot&lt;File&gt; snapshot) { return snapshot.data != null ? Image.file(snapshot.data) : Container(); }))//获取SDCard的路径： Future&lt;File&gt; _getLocalFile(String filename) async { String dir = (await getExternalStorageDirectory()).path; File f = new File('$dir/$filename'); return f; } 如何设置Placeholder？ 安装Transparent_Image插件 在组件中导入插件包 使用FadeInImage.assetNetworl placeholder:kTransparentImage 透明图层，在图片加载前会现在placeholder - 加载本地资源中自定义的placeholder - 安装插件包 - 导入插件包 - placeholder加载本地资源图片 如何配置图片缓存？ 图片只需要加载过一次之后第二次即使无网络也能够加载图片 安装cache_network_image插件 导入插件包 12345child: CachedNetworkImage( placeholder: (context, url) =&gt; new CircularProgressIndicator(), imageUrl: 'https://picsum.photos/250?image=9', ), 如何加载自定义Icon？ material.dart的Material_fonts函数库中有大量的flutter官方图标可以直接调用 构造自定义图标函数 const IconData( this.codePoint,//必填参数，fonticon对应的16进制Unicode { this.fontFamily,//字体库系列 this.fontPackage,//字体在那个包中，不填仅在自己程序包中查找 this.matchTextDirection: false,图标是否按照图标绘制方向显示 }); - 配置字体与自定义Icon字体一致 1234fonts: - family: devio fonts: - asset: fonts/devio.ttf - 使用 12345678child: new Icon( new IconData( 0xf5566,//图标代码 fontFamily: &quot;devio&quot;//图标字体 ), size: 100.0,//图标大小 color: Colors.blueAccent,//图标颜色)","link":"/2022/05/20/flutter-study-day-12-part-1-%E5%85%B3%E4%BA%8E%E5%9B%BE%E7%89%87%E6%8E%A7%E4%BB%B6%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"title":"flutter study day 13 动画Animation-理论知识","text":"动画Animation使用户界面更直观、流畅 补间Tween：定义了开始与结束点、时间线与时间和速度的曲线。由框架计算从开始过度到结束。 基于物理的动画：基于物理的动画中，运动被模拟为与真实世界的行为相似，投掷一颗球从地上弹起与用绳子帮助一个球自由落下的方式是不同的。 使用基础类添加widget动画： Animation：核心类，指导动画的值Animation,此外还会生成、。Animation有状态，可以通过value获取动画的当前值Animation本身和UI渲染没有关系 CurvedAnimation：Animation的子类，将过程抽象为非线性曲线 AnimationController：Animation的子类，管理Animation。forward()：启动动画reverse({double frome})：倒放动画reset()：重置动画播放位置stop({bool canceled = true})：停止动画创建Controller需要传递vsync参数，存在vsync则会防止屏幕外动画消耗不必要资源，可以将statful作为vsync的值 Tween：执行动画的对象使用的数据范围之间的生成值(例如：[0, 255])。 例 生成一个数据范围：final Tween doubleTween = new Tween(begin: -200, end:0);（此范围值不是必须的，可以是Colors中的颜色 例：Colors.transparent, Colors.black54）","link":"/2022/05/23/flutter-study-day-13-%E5%8A%A8%E7%94%BBAnimation-%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"},{"title":"flutter study day 9 了解页面生命周期","text":"flutter的LessWidget只有createElement与build 两个声明周期，无需深入理解。 stattefulwidget生命周期方法按照时期不通分为三组：1.初始化时期 cretateState、initState 2.更新周期 didChangeDependencies、build、didUpdateWidget 3.销毁周期 deactivate、dispose initState() 构建Statefulwidget时会立即调用，并且这个方法必须被覆盖(必须重写) didChangeDependencies()当依赖的state对象改变时会被调用 在第一次构建widget时在initstate()之后会立即调用 如果statefulwidget以来已inheritedwidget改变时会再次调用 inheritedwidget可以搞笑将数据在widget树中向下传递 build()必须实现的方法，实现你想要呈现的页面内容 会在didChangeDependencies()之后立即调用 当setState调用后也会再次调用该方法 didUpdateWidget()不常用，当父组件需要重新绘制时才会调用 该方法会携带一个oldWidget参数，可以与widget进行对比以便执行额外的逻辑 deactivate()不常用，当组件被溢出时调用在dispose之前调用 dispose()常用，组件被销毁时 通常在该方法中执行一些资源的释放工作，比如监听器卸载，channel的销毁等 可用于取消注册销毁保存的内容","link":"/2022/05/17/flutter-study-day-9-%E4%BA%86%E8%A7%A3%E9%A1%B5%E9%9D%A2%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"},{"title":"20220726","text":"好不容易有了出行游玩的想法就被悄无声息的疫情打乱了所有的计划，近日也像是发了疯似的拼命花钱，我也不知是怎的，这种感觉是好的，但却是会上瘾的，很早之前的就听说过那么一句名言 “由俭入奢易，由奢入俭难”，也许这次的疫情是对我的一次劝告，或许不是，但我想我也应该要节制一点。这两年来所有的情绪都来源于一些似有似无的明恋、暗恋、又或是一见钟情，但却没有一个成功案例，是巨蟹座的宿命，还是命运对我的折磨，谁也说不清楚。","link":"/2022/07/26/20220726/"},{"title":"220602奇闻异录","text":"今天还是一如既往的像个废物一样早上九点起床无所事事的刷手机、整理房间、给猫猫铲屎、10点多出门买早餐接着去咖啡店继续无所事事，由于最近发生了太多事情，根本无心做任何除了必须要做的事以外的事，也许这是我懒惰的接口，或者是真实发生的，或许各占一半也说不定。说说今天的奇闻异录吧在我面前的是一个25岁的粗糙的看起来很憨厚的人，在这里简称他为“Q”，在这之前已经见过Q无数次了，Q给我的映像就是一个与任何高级技术不沾边幅的中年人，每天在咖啡馆看着他想要学习的技术教学视频以此提升自己 and 他高大的身材以及像刘翔一样的脸孔却又不带笑容 每次在咖啡馆内都会一个人不止10次的发出奇怪的叫声，例如：突然的“啊 ..（听不懂他的语言）”，让我每次遇到Q都觉得很反感，那今天发生了什么呢？在一个和善的下午，周围都很安静，我正在练习科目一考题，大概练习了一百多题，我可以很专注，错题非常少，突然 我面前5米那张桌的人接到了一个视频邀请，他开始自我介绍了起来，Q:你好，我是…，毕业于…学校，学习的专业是…，也就比我职高刚毕业时找工作的自我介绍要好一点吧。因为Q的音量非常大，大概整个咖啡室的人都能听到他讲话，也许这就是自信的力量吧，让我加深了对他的厌恶感，我个人非常不喜欢噪音，到了外头点了根烟，我以为Q的面试会很快，一根烟的时间回到位置上，他还在面试，刚开始我有点觉得不爽，接着但是面试内容稍微引起了我的注意，是跟区块链、以太坊、钱包管理系统构造开发相关的东西，因为我对此也有一些了解，引起了我的兴趣，他介绍的很完善，自己有哪些优势，目前行业存在哪些痛点，怎么样去解决它，我能够带来什么？目的很明确，内心非常想要拿到这份offer，这也解开了我几个月来的谜题：“他每天都在做些什么”，“他为什么每天都在咖啡馆看学习”，“他怎么不去上班”，“为什么他老是发出奇怪的声音？”。原来他每天都在非常努力的学习技能，他在这个领域是一个探索者，带着自己藏宝图不断的向前，每当找到什么的时候，会非常惊喜，已至于发出奇怪的声音，将找到的东西积累收藏起来研究透彻，再将它转换为自己的东西。或许对方的HR对他是有兴趣的，但其实他的面试是不太顺利的，因为在面试的最后他都不知道自己在面试的是哪个公司，他投了很多简历，只知道有一个公司让他去面试。现在在我面前的依然是Q，虽然改变了我对他的看法，但他还是那个粗糙憨厚的Q。","link":"/2022/06/02/220602%E5%A5%87%E9%97%BB%E5%BC%82%E5%BD%95/"},{"title":"edc:用十倍苦心 做突出一个","text":"edc陈冠希曾经说过：“用十倍苦心 做突出一个”陈冠希也许不是一个成功的艺人但他确实是一个成功的商人不回头看自己曾经的失败而是用自己当下拥有的去创造自己的厂牌最后获得成功 这点很令人敬佩我现在的想法很简单要么做到极致 要么就不要开始做哪怕跌倒全身是伤 也不缺乏重头再来的勇气这个月的成绩相对来说还算是成功的我的商业策略得到了实现半卖半送揽收顾客 下个月持续河流效应虽说中间出现了一点小插曲 但是影响不大good lucky for me.","link":"/2022/07/20/edc-%E7%94%A8%E5%8D%81%E5%80%8D%E8%8B%A6%E5%BF%83-%E5%81%9A%E7%AA%81%E5%87%BA%E4%B8%80%E4%B8%AA/"},{"title":"feel cold","text":"我觉得很冷又一次为自己错误买单又一次感受到坏心眼的陷阱人性像是一面充满雾气的镜子你看不清 也摸不透我不知道我这一生还要犯下多少错误但是好像每一次都是沉重的它会让我失眠 焦虑 胆怯 孤立每个人都要为自己的无知买单虽然有时候运气好 可以免单 但也只是偶尔","link":"/2022/07/29/feel-cold/"},{"title":"july","text":"6月的受到的打击已经很大了没想到更惨的7月在等着我客户流失率至少达到了70%挽救几乎是做不到了剩下的交给时间吧","link":"/2022/07/05/july/"},{"title":"no tittle","text":"2017年的6月 在我即将17岁的时候我得到了很好很好的生日礼物 比如：“被父亲抛弃的感觉”“就业失败感觉”“三天只吃两顿饭的感觉”“猪脚饭吃腻了却舍不得花钱吃其他东西的感觉”“因为赌博输掉了身上所有的钱的感觉”“因为熬夜吃甜食吃高热量食物吃油腻的猪脚饭导致脸上长了很多痘痘、暗疮走在路上都觉得自卑的感觉”我曾经这样对自己说：“我已经没有什么可以失去的了。”也许当时的我已经和魔鬼做了交易现在看来我失去的东西一目了然我所得到的也是当时我所渴望的五年过去了 所有画面都还是那么清晰的映射在我的脑海里所有的一切都要感谢我的好父亲 赐予了我多么珍贵的礼物我所给予的回报相信你也已经收到了我所体会到的也许是你曾经体会过的现在你体会到的是你不曾体会过的这份感觉会一直陪伴着你 直到你死去的那一天","link":"/2022/06/27/no-tittle/"},{"title":"什么是我最想要的","text":"我现在正站在地球的中点问我自己我该往那边走我该去探险吗？还是留在原地娱乐至死？我想我心中早已有了答案只不过是我的不舍留住了我以至于常常会产生一些迷茫的想法又或者是做一些愚蠢的事情或许这次是真的疼了 我也想好了总要向前看 向前走 不再留恋了什么是我最想要的？是至死不渝的爱情是华丽的超级跑车是冠冕堂皇的房子是不愿低头的自尊是背负家族的使命是特立独行的人格这些都不是我最想要的是一群朋友娱乐活动从不让我缺席每月偶尔三两次的饭局在欢声笑语中迷失自我这是我最想要的","link":"/2022/08/02/%E4%BB%80%E4%B9%88%E6%98%AF%E6%88%91%E6%9C%80%E6%83%B3%E8%A6%81%E7%9A%84/"},{"title":"八月倒霉蛋","text":"今天上午的行程是要到高铁站坐地铁会一趟老家但是屋漏偏逢连夜雨偏偏碰上下雨天塞车导致没有在预算的时间到达高铁站记得上次发生类似的事情还是在蛇口坐船一个人出行就总是把时间算的刚刚好从来没有想过自己会发生意外但是意外发生不会提前一天告诉我而是在过程中让我体会那种紧张感在这之前也想过很多次要改这个毛病但一次次的教训也没有让我得到改正下次一定要改 [奋斗emoji]中间的小插曲：在距离发车前20分钟我在高铁站附近800米的地方堵了13分钟下车时已是距离发车剩余7分钟司机对我说：可以赶上的 跑快点就行了不知道他这么说的时候心理会不会内疚反正我的差评是已经给出去了第二个小插曲：在进不去高铁站之后在人工窗口被告知无法退票、改签沮丧的离开高铁站准备打车到咖啡馆但是一连几个司机像是s了马似的第一个司机：听到是附近的地点 拒绝让我乘车第二个司机：很和善 但是也没有让我乘车的意思第三个司机：像个哑巴 没有理会我然后安保小哥在一旁看不下去了，他说：“你打的士应该是你选择地点 而不是让他们去选择乘客。“我觉得他说的没错，但我还是摇了摇头说：“既然他不愿意去，那我也不能强求，还是算了吧。”最后我到了附近的公交站台打了网约车顺利的到了目的地这也映射了我对爱情的观点我觉得她很好，但是她觉得我不好，所以我放弃了因为我向来都是尊重他人的意见，不会强迫他人做某事这是优点 也是缺点","link":"/2022/08/04/%E5%85%AB%E6%9C%88%E5%80%92%E9%9C%89%E8%9B%8B/"},{"title":"凛冬已至","text":"最近的几天都没有动态，难题一个接一个的出现，这也许是对我懒惰的惩罚，对于我傲慢的批斗，收入降幅70%，成本输出近上月的三倍，难过的是，现实并没能压垮我，经过日夜兼程的努力已经逐步恢复中，虽然不可能达到之前的水平了，但是50%感觉还可以抢救一下。动态发完啦，继续努力吧！","link":"/2022/06/06/%E5%87%9B%E5%86%AC%E5%B7%B2%E8%87%B3/"},{"title":"失之东隅，收之桑榆","text":"这是一个悲伤的故事如果我愿意去掉外界因素的干扰早点花钱去解决现有的问题也就不会出现现在的状况了现在是花了很多钱解决了问题但是却丢失了80%的客户积累了那么久 说没就没了 但是我不能因此而表现的悲伤如果一个人所能够拥有的财富是取决于对这个世界的认知那么我觉得 我失去的 是我应该失去的 正是因为我对于这个事件的处理方式的不了解而导致了这场灾难 现在我经历了并处理了虽然失去了但是我想我得到的是更珍贵的东西","link":"/2022/07/08/%E5%A4%B1%E4%B9%8B%E4%B8%9C%E9%9A%85%EF%BC%8C%E6%94%B6%E4%B9%8B%E6%A1%91%E6%A6%86/"},{"title":"开启我的胶片之旅","text":"看了两周的器材决定了最终的配置尼康F3机身 + 尼康ai 50mm 1.4 + dw3腰平取景额外购买了一个小广角尼康35mm 2.8备用镜头以及11卷练手胶片 全套除了交卷以外加起来也才5k不到是我上一台富士XT4数码相机全套的价格4分之1不到的价钱不过后续的胶片冲洗扫描的药水和仪器还没买预算是1.5k这样就可以买到了今天设备几乎可以到齐了，明天终于可以开拍啦！","link":"/2022/07/13/%E5%BC%80%E5%90%AF%E6%88%91%E7%9A%84%E8%83%B6%E7%89%87%E4%B9%8B%E6%97%85/"},{"title":"情绪来了","text":"2022-05-24 朋友生日聚会 酒吧喝酒 2022-05-25 扶醉成烂泥的女孩回酒店 没醉 安然睡去 安然醒来 脱离酒友组织 决定不再参与了 等待着什么 但没来 2022-05-26 下午5:00 下班回家看了王家卫的【堕落天使1995】 晚上8:00 吃饭 晚上9:00 等待着什么 晚上10:00 等待着什么 晚上10:30 不等了吧 累了 晚上11:00 把抖音卸载了 有点浪费时间 2022-05-27 凌晨1:00 游戏卸载了吧 等不到了 凌晨1:10 有点儿伤心伴随着困意 决定关灯入睡 凌晨1:40 伤心扩大 睡意全无 起床练科目一 凌晨2:30 睡意来了 那就睡觉吧 凌晨3:00 我失眠了 凌晨3:02 打开投影 播放王家卫的 【花样年华】 凌晨4:30 影片结束 困了 睡前再做点什么 凌晨4:48 退出群聊 彻底结束吧 凌晨4:50 下雨了 我有点开心 因为很好入眠","link":"/2022/05/27/%E6%83%85%E7%BB%AA%E6%9D%A5%E4%BA%86/"},{"title":"死刑宣告","text":"租赁合同已经谈好了签好合同以后就开始分道扬镳了是的 我选择了去探险这条路我深深的知道自己想要的是什么可人生不就是这样吗 你越想要什么 就越是得不到早该离开的 偏偏等到了现在我得到了什么呢？得到的是他人对我的更加厌恶也许有些人生来就注定是孤独的我说的是我","link":"/2022/08/08/%E6%AD%BB%E5%88%91%E5%AE%A3%E5%91%8A/"},{"title":"清晨","text":"5月28日 天气多云今天早上6点28分就醒了不知道是被我的猫弄醒了亦或是自然醒的一天大概也就只睡了5个多小时 我有点惊喜因为我已经不知道多久没有这么早醒了大概是7点半左右出门 之后去吃了个早餐吃完了之后想着到附近的书店看看书再开始一天的工作吧没想到的或许是因为已经很久没有这么早醒了我连书店的营业时间(10-22)都不知道一开始还有点沮丧吧 就在附近稍坐了一会 吹着风身前身后有着来来往往的退休中老年人让我有一种融入到这个群体的错觉坐了大概十几分钟之后我起身准备离开出来了一趟总不能什么也没有收获吧我就到附近的瑞幸咖啡点了一杯很久没喝过了的生椰拿铁味道还是那个味道 只不过是没有了上班的感觉罢了闲坐喝咖啡 看了会杂志 吹吹风 原来清晨可以这么美好","link":"/2022/05/28/%E6%B8%85%E6%99%A8/"},{"title":"讨厌下雨天","text":"下雨天有种魔力，总是伴随着坏心情的到来，几天的不懈努力把99%的问题都已经解决了，然而后天就要开始考科目一了，复习时间还有一个晚上和明天一天的时间，为了不再挂科接下来的时间都留给复习科目一吧，再挂科可就丢脸了。昨天和今天都是高考的日子，微博热搜还有朋友圈对于高考挂满了各种祝福、抱怨、祈愿，这是一种很好的状态，或许高考是一个人生命中必须要经历的一部分，虽然我没上过高中，从前也多次幻想过，如果自己当初坚持一点，上个普通高中考个野鸡大学，现在的自己会是什么样子，或许今天才刚出来实习，或许在高考时连个野鸡大学都考不上，或许经历高中复读重考，又或是像我厉害的姐姐一样考上本科大学考个研究生。这些都是我幻想过的，是我没有办法去经历的，如今的我已经是在社会上奔波了5年的被大多数人不抱有希望欠了一身债务的打工人，这是我在大多数人（亲戚、同学）眼里的刻板影像。可他们不知道的是如今的我过的很好，有自己的事业，坚持着自己的兴趣，努力的活着，对生活抱有希望。今天这场雨下了很久，我撑着伞到咖啡馆的时候鞋子已经湿了一半，身上的背包表面也已经被淋湿了，仿佛是老天爷再告诉我：人生不如意十有八九，不要灰心，坚持做自己。","link":"/2022/06/08/%E8%AE%A8%E5%8E%8C%E4%B8%8B%E9%9B%A8%E5%A4%A9/"},{"title":"闷热的天气","text":"序言转眼间已经快要六月了正是蝉鸣鸟叫的气节天气格外的闷热记忆中的少时也是这个气节的记忆尤多 早上不好上午的早高峰地铁真的令人崩溃周围都是急忙赶着要去上班的人每个人身上都是黏黏的感觉深圳的地铁站台很多也都是在高架上半封闭式的为这个湿热的天气增加了一分热度 饮杯Cofee外面太热了 找个地方避避暑吧来到了一家无人问津的咖啡馆体验到了非常贴切的服务这跟之前的类似gaga、maan..都完全不同也可能是店里没什么客人的缘故吧 因为早上着急出门没吃早餐 现在时间也已经是中午的饭店了附近也找不到其他吃饭的地方一杯荔枝气泡美式和一份牛角包就成了我的午餐 TODO虽然今天科目一考试没过但出来了一趟总不能什么都没有收获吧！今天晚上准备到深圳湾公园大桥附近拍一拍日落希望能够出一些好看的照片","link":"/2022/05/30/%E9%97%B7%E7%83%AD%E7%9A%84%E5%A4%A9%E6%B0%94/"},{"title":"龟兔赛跑","text":"果然 人不能太自满只因为得到了一点小小的成就就以为自己很厉害 尝试放慢脚步跑在后面的乌龟先生现如今已经超过了我并且他的努力是肉眼可见的他得到的所有东西也都是他的努力换来的他对于即将到来的各种危机都做好了应对的准备而我 是那只骄傲自满的兔子在危机来临时 手忙脚乱 还要假装临危不乱危机夺走了太多东西 现在一切都要重新开始了虽然心甘情愿输给了乌龟先生 但我也不缺乏重新来过的勇气","link":"/2022/06/16/%E9%BE%9F%E5%85%94%E8%B5%9B%E8%B7%91/"},{"title":"擦肩而过","text":"8月10日晚上 9点45分9点25分我结束了一天的工作收拾东西回家9点35分我在想明天要坐高铁做个核酸会比较保险9点45分我在离家100米的地方遇到了一个卷发女孩看上去比我大几岁 穿了一件碎花群搭了一件黑色披肩当时下着小雨 她淋着雨正拖拽着一张对他来说可能有点重的桌子我举着伞正赶往回家的路上 起初只听到地上有摩擦声我的好奇心引起了我的注意 于是我举起了伞望向她我们对视了2秒钟 但我的脚步没有停下 “每天你都有机会跟别人擦肩而过你也许对他一无所知不过也许有一天他会变成你的一个朋友或知己。”—- 《重庆森林》 我不一样每天我都会尽量错过与任何陌生人擦肩而过的机会因为那会给我带来麻烦","link":"/2022/08/11/%E6%93%A6%E8%82%A9%E8%80%8C%E8%BF%87/"},{"title":"改变就会变好运","text":"8月9日 昨天在止损位卖出了手头上的一居室以合适的价格租下来一套二居室这些都不是突入其来的而是经过了我的精心设计步步为营得到的结果这也治好了我半个月来的失眠症如果我没有决心要做改变而是硬啃下自己犯下的大错那我可能也还是每天都还在浑浑噩噩的过日子每天晚上失眠 焦虑 颓废 内分泌失调 这周末或许是最后一个周末了","link":"/2022/08/10/%E6%94%B9%E5%8F%98%E5%B0%B1%E4%BC%9A%E5%8F%98%E5%A5%BD%E8%BF%90/"},{"title":"about her","text":"I’m Sadly 不可否认 她是我生命中最重要的人 是我唯一的月亮 但 我只有一个月亮 月亮不止一个我 我可能永远成为不了她生命中重要的人之一 已经发生过的事情 永远也改变不了 她记得 我也记得 这是一段任何人都不愿提起的往事 做什么也挽回不了 该做的我都已经做了 我也曾沉溺在苦痛的折磨 我也渴望一场救赎降临 但 神明又怎会如此简单宽恕就能我的罪行 现在我想做的 只有逃避 逃避自己 逃避别人 想逃离这个世界 躲起来 不让任何人找到我 我就可以不对这个世界负责 我是个自私的人 我只做我想做的事情 不被束缚 来去自如","link":"/2022/10/01/about-her/"},{"title":"criminal door","text":"美剧：绝命律师 season 2 episode 1 的片头 剧情中saul goodman是一家饮品店的店员 当天值班结束后收拾店内垃圾扔掉即结束一天的工作 当他进入垃圾房时房门却自动关上并反锁了 saul有两个选择:1.等待下一个过来扔垃圾的人开门2.打开紧急通道房门 但会浪费警力 当然啦 当时saul是一个goodman怎么会做第二选择 他静静的坐在垃圾房等待下一个开门进来的人 并在墙上刻上了”SG WAS HERE” “saul goodman 来过” 看到这个片段 我想起了曾经经历过的一段黑暗 当时的我也面临着两个选择：1.在一家薪资2k的餐馆端盘子2.做一些别人不敢做的事 但我做了第二选择 现在我仍处在第二选择中 要么坐牢 要么继续 已经一只脚踏进了地狱 没有回头路可以走了","link":"/2022/10/12/criminal-door/"},{"title":"乐趣","text":"8月17日 星期三 天气小到中雨昨天把一半的行李收拾好了 本打算这两天就搬走收拾好了之后与知心好友告别 我们谈了一下心我说我不想呆在深圳了 我想找点事情做我想在24岁前开一家花店我想在26岁前开一下咖啡店我想在28岁前开一家威士忌酒吧但是我舍不得这里 舍不得走他说：“有什么舍不得的，过好更好的生活”我说：“生活少了很多乐趣，走了就。”我突然很后悔我上个周末没有参加朋友们的娱乐活动因为那或许是我们近期以来的最后一次见面了错过了就要等好久好久 或者根本上已经后会无期了但是我的很多情绪不是我能够控制的我的很多情绪让我面临过很多挫折我的很多情绪让我失去过很多东西我的很多情绪让很多人对我失望过我的很多情绪…既然在离开之后就没有乐趣了我想我应该珍惜当下的每一分 每一秒","link":"/2022/08/18/%E4%B9%90%E8%B6%A3/"},{"title":"人际关系重要吗","text":"8月13日 正午11:30今天上午九点半睡醒 处理好了房间的日常以后 照常出门吃午饭今天仍是在朋友的店里吃午饭 朋友的父亲是店老板到店后也是日常问候 问我：“为什么要走 不会丢失很多人际关系吗？”我说：“深圳的确是一个好城市，但那不是我想要的。”我这一生都在追逐自己想要的 不被束缚 来去自如既然疲惫于维持彼此之间的关系 那又何必留在此地呢我反问一句：“人际关系重要吗？” 他没有回答只是说 离开深圳会少很多机遇 我也向他陈述了我的观点 人际关系固然是重要的 可以说 如果没有17年遇到的贵人也没有今天的我 或者今天的我已经躺在棺材里了 又或已经是浮尸荒野但是在这个圈子里 我没有看到任何一个比我的想法高明的人所以这样的人际关系对我来说 不重要我只不过是在他们生命中可能就存在了一年半载的过路人过不了几个月就会被遗忘 我对他们如是 今天出门了 在西西弗书店处理日常工作 虽然今天是周六但我想我该改变生活现状了 在这之前 我的周末是周末晚上7点后 是休息时间 中午是起床时间在最近我认识到 这是一个错误的选择不知道是什么时候开始 我选择了走入这个舒适区希望在搬家后可以完全改变这个现状该对未来有个规划了。","link":"/2022/08/13/%E4%BA%BA%E9%99%85%E5%85%B3%E7%B3%BB%E9%87%8D%E8%A6%81%E5%90%97/"},{"title":"充满创造力的清晨","text":"今天是11月27日凌晨12:30分 我有点困但我担心睡眠质量问题吃了一颗褪黑素才躺倒床上准备入睡清晨7:00 我醒了起床 很精神 没有感觉到累好 开始洗漱 冲咖啡打开电脑 做一些没做完的事情","link":"/2022/11/27/%E5%85%85%E6%BB%A1%E5%88%9B%E9%80%A0%E5%8A%9B%E7%9A%84%E6%B8%85%E6%99%A8/"},{"title":"回忆涌现","text":"今天要开始收拾房间了深圳的天气一如既往 一会晴天一会下雨天我的房间没有开灯 只有一扇窗窗帘留了20公分的光线外面下着很大雨 窗户上响着非常急促的嘀嗒嘀嗒嘀嗒的雨声我透过房间里微弱的光线 看着房间里需要收拾物品脑海里浮现了过去一年多以来的记忆碎片 这一刻我很难过 脑海里有个声音在说着 我不想走人啊 这辈子还要经历多少生离死别呢","link":"/2022/08/14/%E5%9B%9E%E5%BF%86%E6%B6%8C%E7%8E%B0/"},{"title":"怠惰","text":"时隔半年 再次陷入了感情旋涡 又是一样的结果10月至今发生了太多的不愉快所幸收入并未下降 但我的惰性却在日渐增长一时间什么好像都有了 但是却失去了一些珍贵的东西忘记了自己真正想要的是什么 实在是太怠惰了生活本不该如此","link":"/2022/11/26/%E6%80%A0%E6%83%B0/"},{"title":"如何为Ubuntu20设置开机自启动","text":"创建system服务 nano /etc/systemd/system/app.service 键入system服务内容 123456789[Unit]Description=My CommandAfter=network.target[Service]ExecStart=/path/to/your/command[Install]WantedBy=multi-user.target 其中： - Description：服务的描述，可以根据您的需求更改。 - After：定义服务应该在哪个目标之后启动。在本例中，我们将其设置为 network.target。 - ExecStart：定义要在启动服务时运行的命令的完整路径。 - WantedBy：定义服务应该启动的目标。在本例中，我们将其设置为 multi-user.target。 重载system配置 systemctl daemon-reload 启动创建的服务 systemctl start app.service 检查服务是否运行正常 systemctl status app.service 开机自启动服务 systemctl enable app.service","link":"/2023/03/04/%E5%A6%82%E4%BD%95%E4%B8%BAUbuntu20%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8/"},{"title":"逃出舒适区","text":"自从六月份感情出问题以来都没有怎么认真的去规划自己工作反而是忙于修复自己情感与生活 近半年过去了好像什么也没有做Todolist除了一些紧急简单的其他任务也是积压了几个月甚至半年多的都没有做也没有新的任务规划 每天我都在告诫自己 不要懒惰了 可是每天都一样刷抖音 看剧 出门兜风 是我太放纵自己了 不能再这样下去了我必须行动起来 拒绝拖延把TODO完成 并规划新的TODO我想我需要适当的给我自己一些压力这几天把车子定下来了 交了定金以及首付款后 身上所剩的钱几乎就没有了房租加上每个月车贷 这样的压力才适合前行 最起码在我什么都做不出来的时候我不会躺着 什么都不想做 这是最混蛋的","link":"/2022/10/25/%E9%80%83%E5%87%BA%E8%88%92%E9%80%82%E5%8C%BA/"},{"title":"近况","text":"最近发生了很多事情几乎每天都会有那么几分钟几小时甚至一整天处于emotional的状态空虚感日益侵蚀着我 也许她真的跟这个世界一样这个世界是不会变的我改变不了她的想法 渐渐开始疏远了这是她自己选的我尊重她的想法也是姑姑的想法","link":"/2022/09/28/%E8%BF%91%E5%86%B5/"}],"tags":[{"name":"typora","slug":"typora","link":"/tags/typora/"},{"name":"流程图","slug":"流程图","link":"/tags/%E6%B5%81%E7%A8%8B%E5%9B%BE/"},{"name":"mermaid","slug":"mermaid","link":"/tags/mermaid/"},{"name":"flutter","slug":"flutter","link":"/tags/flutter/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"github","slug":"github","link":"/tags/github/"},{"name":"book","slug":"book","link":"/tags/book/"},{"name":"三毛","slug":"三毛","link":"/tags/%E4%B8%89%E6%AF%9B/"},{"name":"SSL","slug":"SSL","link":"/tags/SSL/"},{"name":"旅行","slug":"旅行","link":"/tags/%E6%97%85%E8%A1%8C/"},{"name":"重庆","slug":"重庆","link":"/tags/%E9%87%8D%E5%BA%86/"},{"name":"icarus","slug":"icarus","link":"/tags/icarus/"},{"name":"生活","slug":"生活","link":"/tags/%E7%94%9F%E6%B4%BB/"},{"name":"fllutter","slug":"fllutter","link":"/tags/fllutter/"},{"name":"奇闻异录","slug":"奇闻异录","link":"/tags/%E5%A5%87%E9%97%BB%E5%BC%82%E5%BD%95/"},{"name":"摄影","slug":"摄影","link":"/tags/%E6%91%84%E5%BD%B1/"},{"name":"胶片","slug":"胶片","link":"/tags/%E8%83%B6%E7%89%87/"},{"name":"失恋","slug":"失恋","link":"/tags/%E5%A4%B1%E6%81%8B/"},{"name":"失趣","slug":"失趣","link":"/tags/%E5%A4%B1%E8%B6%A3/"},{"name":"失格","slug":"失格","link":"/tags/%E5%A4%B1%E6%A0%BC/"},{"name":"技术备忘录","slug":"技术备忘录","link":"/tags/%E6%8A%80%E6%9C%AF%E5%A4%87%E5%BF%98%E5%BD%95/"}],"categories":[{"name":"技术分享","slug":"技术分享","link":"/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"flutter","slug":"flutter","link":"/categories/flutter/"},{"name":"读书分享","slug":"读书分享","link":"/categories/%E8%AF%BB%E4%B9%A6%E5%88%86%E4%BA%AB/"},{"name":"旅行日记","slug":"旅行日记","link":"/categories/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/"},{"name":"生活日记","slug":"生活日记","link":"/categories/%E7%94%9F%E6%B4%BB%E6%97%A5%E8%AE%B0/"},{"name":"奇闻异录","slug":"奇闻异录","link":"/categories/%E5%A5%87%E9%97%BB%E5%BC%82%E5%BD%95/"},{"name":"情感","slug":"情感","link":"/categories/%E6%83%85%E6%84%9F/"}]}