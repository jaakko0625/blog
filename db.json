{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/amazing/source/css/DPlayer.min.css","path":"css/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/amazing/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":0,"renderable":1},{"_id":"themes/amazing/source/css/default.styl","path":"css/default.styl","modified":0,"renderable":1},{"_id":"themes/amazing/source/css/global_gray.styl","path":"css/global_gray.styl","modified":0,"renderable":1},{"_id":"themes/amazing/source/css/meplayer.min.css","path":"css/meplayer.min.css","modified":0,"renderable":1},{"_id":"themes/amazing/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/amazing/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/amazing/source/img/background.png","path":"img/background.png","modified":0,"renderable":1},{"_id":"themes/amazing/source/img/favicon.svg","path":"img/favicon.svg","modified":0,"renderable":1},{"_id":"themes/amazing/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/amazing/source/img/og_image.png","path":"img/og_image.png","modified":0,"renderable":1},{"_id":"themes/amazing/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":0,"renderable":1},{"_id":"themes/amazing/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/APlayer.min.js","path":"js/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/DPlayer.min.js","path":"js/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/about-me.js","path":"js/about-me.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/back_to_top.js","path":"js/back_to_top.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/banner.js","path":"js/banner.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/column.js","path":"js/column.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/comment-issue-data.js","path":"js/comment-issue-data.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/echarts.min.js","path":"js/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/friend.js","path":"js/friend.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/gitalk.min.js","path":"js/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/gitalk_self.min.js","path":"js/gitalk_self.min.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/globalUtils.js","path":"js/globalUtils.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/md5.min.js","path":"js/md5.min.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/meplayer.js","path":"js/meplayer.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/music.js","path":"js/music.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/js/theme-setting.js","path":"js/theme-setting.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/live2d/autoload.js","path":"live2d/autoload.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/live2d/flat-ui-icons-regular.eot","path":"live2d/flat-ui-icons-regular.eot","modified":0,"renderable":1},{"_id":"themes/amazing/source/live2d/flat-ui-icons-regular.svg","path":"live2d/flat-ui-icons-regular.svg","modified":0,"renderable":1},{"_id":"themes/amazing/source/live2d/flat-ui-icons-regular.ttf","path":"live2d/flat-ui-icons-regular.ttf","modified":0,"renderable":1},{"_id":"themes/amazing/source/live2d/flat-ui-icons-regular.woff","path":"live2d/flat-ui-icons-regular.woff","modified":0,"renderable":1},{"_id":"themes/amazing/source/live2d/live2d.js","path":"live2d/live2d.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/live2d/waifu-tips.js","path":"live2d/waifu-tips.js","modified":0,"renderable":1},{"_id":"themes/amazing/source/live2d/waifu-tips.json","path":"live2d/waifu-tips.json","modified":0,"renderable":1},{"_id":"themes/amazing/source/live2d/waifu.css","path":"live2d/waifu.css","modified":0,"renderable":1},{"_id":"themes/amazing/source/json_data/banner.json","path":"json_data/banner.json","modified":0,"renderable":1},{"_id":"themes/amazing/source/json_data/friend.json","path":"json_data/friend.json","modified":0,"renderable":1},{"_id":"themes/amazing/source/json_data/music.json","path":"json_data/music.json","modified":0,"renderable":1},{"_id":"themes/amazing/source/json_data/record.json","path":"json_data/record.json","modified":0,"renderable":1},{"_id":"themes/amazing/source/json_data/video.json","path":"json_data/video.json","modified":0,"renderable":1},{"_id":"themes/amazing/source/css/fonts/fontello.svg","path":"css/fonts/fontello.svg","modified":0,"renderable":1},{"_id":"themes/amazing/source/css/fonts/fontello.ttf","path":"css/fonts/fontello.ttf","modified":0,"renderable":1},{"_id":"themes/amazing/source/css/fonts/fontello.eot","path":"css/fonts/fontello.eot","modified":0,"renderable":1},{"_id":"themes/amazing/source/css/fonts/fontello.woff","path":"css/fonts/fontello.woff","modified":0,"renderable":1},{"_id":"themes/amazing/source/img/links/nopic.jpg","path":"img/links/nopic.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Typora流程图代码实例.md","hash":"5c3ffec58762eaf4f2b604aafa285eedac55bac9","modified":1652428633219},{"_id":"source/_posts/flutter-study-day-1-学习了Dart语言的基础知识.md","hash":"03b6153973f29ecef73621175b7b2cd425c895dc","modified":1652428657960},{"_id":"source/_posts/flutter-study-day-2-我的第一个flutter应用.md","hash":"66e948f71dc972b4913e419e57bd0f208729f98d","modified":1652428707118},{"_id":"source/_posts/flutter-study-day-3-认识StatelessWidget基本组件.md","hash":"e5cb8e7bfd2318ae70b0f7a6aa1c14ada8e9f14c","modified":1652428648148},{"_id":"source/_posts/.DS_Store","hash":"787793620ca3c211d619c7710efeec0d7417b114","modified":1650709285413},{"_id":"source/_posts/flutter-study-day-5-了解flutter布局开发以及常用组件.md","hash":"53d87813e407b63980dd205a9ac5ce4938ce5d66","modified":1652428604272},{"_id":"source/_posts/flutter-study-day-4-认识StatelessFul基本组件.md","hash":"429e394d0ba3f3339950808aa7bf4ad9a6edb6f5","modified":1652428640789},{"_id":"source/_posts/flutter-study-day-6-part-2-检测用户手势以及处理事件.md","hash":"df9c72ca11bd3510d05de3f2db96fa1d16dac4da","modified":1652429110612},{"_id":"source/_posts/flutter-study-day-7-导入和使用flutter资源.md","hash":"3872d7f8d5ad66a2cb507349a48f9f4c46c27985","modified":1652433650942},{"_id":"source/_posts/vsco-hexo-github创建博客.md","hash":"016607f9776425e4ae908b1b9d640576756fc816","modified":1652428636627},{"_id":"source/_posts/flutter-study-day-6-创建和使用flutter路由与导航.md","hash":"7bf258faefa121001f0a749d9ccb284f6415c888","modified":1652429078464},{"_id":"source/_posts/梦里花落知多少-三毛-克里斯.md","hash":"e4c9b13d2d4c8ee4401048c53f8b3c730ccd5555","modified":1652428665285},{"_id":"source/_posts/申请一年野卡域名证书.md","hash":"b28a2692feddb6133fb54fc8f13ab6dc8307f015","modified":1652428661710},{"_id":"source/_posts/解决hexo图片插入不显示问题.md","hash":"55b7295938d16d52fc435a07a4423bf51529fa85","modified":1652428673119},{"_id":"source/_posts/梦里花落知多少-三毛-荒山之夜.md","hash":"e1a106a929535c80854901cc365d01f0950d14d4","modified":1652428669178},{"_id":"source/_posts/重庆-因为一个人-记住一座城.md","hash":"a6bddf756fce2ff1c665994b1a20f1d34922c6bc","modified":1652428683743},{"_id":"source/_posts/Typora流程图代码实例/test.png","hash":"75629e9d87072a5b9ccfdf57acbed71e1d2a96b0","modified":1650874116635},{"_id":"source/_posts/Typora流程图代码实例/hello.jpeg","hash":"63fd59f8fdb581396523306dda563ac812282a4d","modified":1650536212930},{"_id":"source/_posts/重庆-因为一个人-记住一座城/end.jpg","hash":"75e33bdaa1781538ed51802ae8866b10853b92c2","modified":1651907769253},{"_id":"source/_posts/重庆-因为一个人-记住一座城/livehouse.png","hash":"65497d92c8be3ce2f90734f310b910519149db6e","modified":1651907853183},{"_id":"source/_posts/重庆-因为一个人-记住一座城/sunraise.jpg","hash":"a540523ab043f3d01f4c7da48892537b17d6283c","modified":1651907769341},{"_id":"source/_posts/重庆-因为一个人-记住一座城/night.jpg","hash":"873ebf9c28a50a23a6800ba4f555c6c957e5d2c5","modified":1651907769322},{"_id":"source/_posts/重庆-因为一个人-记住一座城/tittle.jpg","hash":"ed75be327db8e679462acb47376273ca07f820f1","modified":1651907736538},{"_id":"public/2022/05/11/flutter-study-day-7-导入和使用flutter资源/index.html","hash":"b23481b9daf8504f134b0fee5cffadcff05c43ce","modified":1652430547170},{"_id":"public/2022/05/09/flutter-study-day-6-创建和使用flutter路由与导航/index.html","hash":"0973e85712d3190aabb22bbc977351943f180be3","modified":1652430547170},{"_id":"public/2022/05/07/重庆-因为一个人-记住一座城/index.html","hash":"d5360a65f8087f453d7222d26e374b9bf785902a","modified":1652430547170},{"_id":"public/2022/05/09/flutter-study-day-6-part-2-检测用户手势以及处理事件/index.html","hash":"bb63649fa5ed82dc1bc83fefbf9f0c30216e668e","modified":1652430547170},{"_id":"public/2022/04/28/flutter-study-day-5-了解flutter布局开发以及常用组件/index.html","hash":"d3d2f8376375382e88645be738bebe863a60dfa5","modified":1652430547170},{"_id":"public/2022/04/27/flutter-study-day-4-认识StatelessFul基本组件/index.html","hash":"bfd1b278a563da22c758db315645dcf1068caa6a","modified":1652430547170},{"_id":"public/2022/04/27/梦里花落知多少-三毛-克里斯/index.html","hash":"8bb7901df3c11a960a5e27317bd2fec9ded177bc","modified":1652430547170},{"_id":"public/2022/04/26/梦里花落知多少-三毛-荒山之夜/index.html","hash":"9e771b1f3183cf146471bb35600147ca1899247c","modified":1652430547170},{"_id":"public/2022/04/25/flutter-study-day-3-认识StatelessWidget基本组件/index.html","hash":"943c714ca6671c86cdc859fb8ab11e2f5677383f","modified":1652430547170},{"_id":"public/2022/04/25/解决hexo图片插入不显示问题/index.html","hash":"b641c79ba501c0cafd2b51d8c16b205b42475f0d","modified":1652430547170},{"_id":"public/2022/04/24/flutter-study-day-2-我的第一个flutter应用/index.html","hash":"ae397fd1a853faa1a4267125d24b4b5ed7b1fa42","modified":1652430547170},{"_id":"public/2022/04/23/flutter-study-day-1-学习了Dart语言的基础知识/index.html","hash":"384f0c6e220e904bd88242767e16455bc1e539c7","modified":1652430547170},{"_id":"public/2022/04/22/申请一年野卡域名证书/index.html","hash":"63a8474642e26ac32e52fc138831fb1b8ab7ee0f","modified":1652430547170},{"_id":"public/2022/04/21/Typora流程图代码实例/index.html","hash":"3e889d4332a5f5c6ec8ef7c71c8204023df787fe","modified":1652430547170},{"_id":"public/2022/04/20/vsco-hexo-github创建博客/index.html","hash":"5cc6c80504352c6c907bf0a1076314e6e8236337","modified":1652430547170},{"_id":"public/archives/index.html","hash":"3bb4d58676faede474e7baea5ed48d3209c8973b","modified":1652428493250},{"_id":"public/archives/page/2/index.html","hash":"03f816753cc396898f9f1708b588af5dee263dbd","modified":1652428493250},{"_id":"public/archives/2022/index.html","hash":"5c0b5d6c03ccac07659e9058108f7d1e27f5dd4d","modified":1652428493250},{"_id":"public/archives/2022/page/2/index.html","hash":"933de9511fb5cb739128bb64d6542b95139cdb72","modified":1652428493250},{"_id":"public/archives/2022/04/index.html","hash":"c95396c02fb2ec3ece92ab344e38b5ecfcb3830d","modified":1652428493250},{"_id":"public/archives/2022/04/page/2/index.html","hash":"a3379b4bc7e6bf69024603850f5d3e84498a6e24","modified":1652428493250},{"_id":"public/archives/2022/05/index.html","hash":"08e2bb951988e9204b8039e7ac5a21b64fc90c78","modified":1652428493250},{"_id":"public/categories/技术分享/index.html","hash":"49a4892454c6d86a1c4636fe02f164cb5b322122","modified":1652430547170},{"_id":"public/categories/flutter/index.html","hash":"f391f00538a1c4380583f92180e9d7ac1247fdf8","modified":1652430547170},{"_id":"public/categories/读书分享/index.html","hash":"ba942ca390632671e4d0b87155dc2573d8418f9b","modified":1652430547170},{"_id":"public/categories/旅行日记/index.html","hash":"073e44309d93fefc886ec3c545e4be59b5b0f29c","modified":1652430547170},{"_id":"public/index.html","hash":"666a9e731f644aff5da45c569598ac045ad1ad06","modified":1652430547170},{"_id":"public/page/2/index.html","hash":"3c23ee2566369791a62a5e23b3bd9bcad8387710","modified":1652430547170},{"_id":"public/tags/typora/index.html","hash":"12111f4134b6b71d9b88ff38e227c4b3fde73cc9","modified":1652430547170},{"_id":"public/tags/流程图/index.html","hash":"7b48a798e9a3623836df7be564538a56333bb414","modified":1652430547170},{"_id":"public/tags/mermaid/index.html","hash":"683174cea22e5ad4ace7dc3d8a01e0cd64ac5d3d","modified":1652430547170},{"_id":"public/tags/flutter/index.html","hash":"1c1bc8d2a270b8261f3a77e1921a7f611690731b","modified":1652430547170},{"_id":"public/tags/hexo/index.html","hash":"85072a0794d9310503d8d9caa9fdad9dd78f2ea3","modified":1652430547170},{"_id":"public/tags/blog/index.html","hash":"81469ec2063a69306f97cf0650a9db38302d0b7c","modified":1652430547170},{"_id":"public/tags/github/index.html","hash":"512872d8c51298eb11c4d4e932d87588bb45c0ac","modified":1652430547170},{"_id":"public/tags/book/index.html","hash":"23e6bf91dc795e90edc158430bcb6527fc10f836","modified":1652430547170},{"_id":"public/tags/三毛/index.html","hash":"13e2f07e2b0978fbad1788c4f01c79d18547ec4e","modified":1652430547170},{"_id":"public/tags/SSL/index.html","hash":"4fc59eda29907f59e4ba0e7e6e18bfab28346fb7","modified":1652430547170},{"_id":"public/tags/旅行/index.html","hash":"2cd83723474af7c01277feaacaf7d6d3a20d9eb9","modified":1652430547170},{"_id":"public/tags/重庆/index.html","hash":"314f6d741bd8fc146496adda6cae0ee76ab8df69","modified":1652430547170},{"_id":"public/tags/icarus/index.html","hash":"d4f8dc01711940f50341b1ab587c6754db3fc3ed","modified":1652430547170},{"_id":"public/2022/04/21/Typora流程图代码实例/test.png","hash":"75629e9d87072a5b9ccfdf57acbed71e1d2a96b0","modified":1652422910211},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1652422910211},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1652422910211},{"_id":"public/2022/04/21/Typora流程图代码实例/hello.jpeg","hash":"63fd59f8fdb581396523306dda563ac812282a4d","modified":1652422910211},{"_id":"public/2022/05/07/重庆-因为一个人-记住一座城/end.jpg","hash":"75e33bdaa1781538ed51802ae8866b10853b92c2","modified":1652422910211},{"_id":"public/2022/05/07/重庆-因为一个人-记住一座城/livehouse.png","hash":"65497d92c8be3ce2f90734f310b910519149db6e","modified":1652422910211},{"_id":"public/2022/05/07/重庆-因为一个人-记住一座城/sunraise.jpg","hash":"a540523ab043f3d01f4c7da48892537b17d6283c","modified":1652422910211},{"_id":"public/2022/05/07/重庆-因为一个人-记住一座城/night.jpg","hash":"873ebf9c28a50a23a6800ba4f555c6c957e5d2c5","modified":1652422910211},{"_id":"public/2022/05/07/重庆-因为一个人-记住一座城/tittle.jpg","hash":"ed75be327db8e679462acb47376273ca07f820f1","modified":1652422910211},{"_id":"themes/amazing/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960548},{"_id":"themes/amazing/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960546},{"_id":"themes/amazing/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960548},{"_id":"themes/amazing/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960548},{"_id":"themes/amazing/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960549},{"_id":"themes/amazing/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960541},{"_id":"themes/amazing/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960542},{"_id":"themes/amazing/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960542},{"_id":"themes/amazing/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960542},{"_id":"themes/amazing/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652421960542},{"_id":"themes/amazing/.gitignore","hash":"a637cb784fe25f46b8826569bda66f0b24227320","modified":1652421960539},{"_id":"themes/amazing/.npmignore","hash":"42242c8da7a020a3295e7dd3d18bf022cb08b661","modified":1652421960539},{"_id":"themes/amazing/_config.yml","hash":"c7e55f1c8395e142ced5e778c69cbd61e01d6724","modified":1652433605948},{"_id":"themes/amazing/CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1652421960539},{"_id":"themes/amazing/README.md","hash":"3bca1e8228d5e260aecd85ffd4953effe4ff22da","modified":1652421960539},{"_id":"themes/amazing/package.json","hash":"b9107b2bf6f121f00e3a5fa077b5e4aa5366e5ca","modified":1652421960550},{"_id":"themes/amazing/LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1652421960539},{"_id":"themes/amazing/.eslintrc.json","hash":"43c7740158c8690242720b4ff7fa11426fc20c79","modified":1652421960538},{"_id":"themes/amazing/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1652421960538},{"_id":"themes/amazing/include/config.js","hash":"b312aae6a8d3522415fa033bfd6e8bec5589944d","modified":1652421960541},{"_id":"themes/amazing/include/dependency.js","hash":"d30dbcefd58619f6705d6369b644bc7ba44d2421","modified":1652421960541},{"_id":"themes/amazing/include/register.js","hash":"ced013e9a85910edd8752644d8b5ce8509d9b21a","modified":1652421960541},{"_id":"themes/amazing/.github/dependabot.yml","hash":"d532d0db30e42211f35823b9885f3ed1b2d51777","modified":1652421960539},{"_id":"themes/amazing/.github/stale.yml","hash":"88c73f6216c5666d2f60b1e8fe690a3f6e561e42","modified":1652421960539},{"_id":"themes/amazing/languages/en.yml","hash":"0144c5ea77e2dd5ff34c238d2e2137e66b3820c9","modified":1652421960545},{"_id":"themes/amazing/languages/de.yml","hash":"01d9c27c3c9224d8c58b1cf7099ef008b9411a45","modified":1652421960545},{"_id":"themes/amazing/languages/es.yml","hash":"48fe3d7d304239b5e5e93f63600093700d6f0fed","modified":1652421960545},{"_id":"themes/amazing/languages/id.yml","hash":"c04fca89e536d539a8bf95980bff7dff79125ba3","modified":1652421960545},{"_id":"themes/amazing/languages/ja.yml","hash":"7568f246a21813527ccea8a1da72a9526aa2d233","modified":1652421960545},{"_id":"themes/amazing/languages/fr.yml","hash":"14765cc6216b4af5a05341315c9f6ee54d636a78","modified":1652421960545},{"_id":"themes/amazing/languages/ko.yml","hash":"f2211a8ca1d73f05a1c931aa11accb4e34c483c4","modified":1652421960545},{"_id":"themes/amazing/languages/pl.yml","hash":"612639b0e0a15185c12eecfe3e8913b629ecdfdf","modified":1652421960545},{"_id":"themes/amazing/languages/pt-BR.yml","hash":"531b22c71fab8aae60ddc7599aaa5f46140cf2c1","modified":1652421960545},{"_id":"themes/amazing/languages/tr.yml","hash":"96d94f7a5d56b2682ae2792f0808139d4b950704","modified":1652421960546},{"_id":"themes/amazing/languages/ru.yml","hash":"bf784c6f31e8fb7ed78509468bddecd447c3b73b","modified":1652421960546},{"_id":"themes/amazing/languages/vn.yml","hash":"64307bfa16d851334e2f37a29a84d644624c2060","modified":1652421960546},{"_id":"themes/amazing/layout/archive.jsx","hash":"1fc735a9d51b6dd1d49cd3272f06052a677d30ad","modified":1652421960546},{"_id":"themes/amazing/languages/zh-CN.yml","hash":"79202fdbafa3466d3981ad388ea6662ceaa67011","modified":1652421960546},{"_id":"themes/amazing/layout/categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1652421960546},{"_id":"themes/amazing/languages/zh-TW.yml","hash":"92f8cf599ad06bb14f79f4806ac4c695f60044d7","modified":1652421960546},{"_id":"themes/amazing/layout/category.jsx","hash":"fd15e4eac32de9ac8687aeb3dbe179ab61375700","modified":1652421960546},{"_id":"themes/amazing/layout/index.jsx","hash":"394770f7eae64a9ab2122919f00cfe33d46482d3","modified":1652421960548},{"_id":"themes/amazing/layout/page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1652421960548},{"_id":"themes/amazing/layout/post.jsx","hash":"5fa2b09ded1376bf58e8c20ad3f29f6d909023ce","modified":1652421960548},{"_id":"themes/amazing/layout/layout.jsx","hash":"24219dc2e3b1e1829a78ff14666a8f5215b895d3","modified":1652421960548},{"_id":"themes/amazing/scripts/index.js","hash":"0c666db6fcb4ffc4d300f4e108c00ee42b1cbbe6","modified":1652421960550},{"_id":"themes/amazing/layout/tag.jsx","hash":"d2f18cac32ca2725d34ccff3f2051c623be6c892","modified":1652421960549},{"_id":"themes/amazing/.github/ISSUE_TEMPLATE/bug_report.md","hash":"5d3abdc1a2a79ef9822865184eced6e31066d8f6","modified":1652421960538},{"_id":"themes/amazing/.github/ISSUE_TEMPLATE/Bug反馈.md","hash":"d801be6937df21e63113be8840b2e23c465db87b","modified":1652421960538},{"_id":"themes/amazing/.github/ISSUE_TEMPLATE/config.yml","hash":"dd883c823e263028299d26b9c4ddb43b35b0a0ae","modified":1652421960538},{"_id":"themes/amazing/layout/tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1652421960549},{"_id":"themes/amazing/.github/ISSUE_TEMPLATE/feature_request.md","hash":"05313e241a3d43fdadb0f74390b562c07c25d4d0","modified":1652421960538},{"_id":"themes/amazing/.github/ISSUE_TEMPLATE/功能建议.md","hash":"c6f60f37e6cd0bc21a81b3b07f84e04e9e80fb57","modified":1652421960538},{"_id":"themes/amazing/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"93b484a878e1d4bf4b840dc726d3a213acc0f2ba","modified":1652421960538},{"_id":"themes/amazing/.github/workflows/lint.yml","hash":"71f04b66e48f065285ba109939999876ef411598","modified":1652421960539},{"_id":"themes/amazing/.github/workflows/github-release.yml","hash":"48b6bd2cc567687a7b1648c55c8f9de9d44fa9e1","modified":1652421960539},{"_id":"themes/amazing/.github/workflows/npm-publish.yml","hash":"4eabc0c60cb7102fdd5e4b0fbd8c0ac4c17cc8d0","modified":1652421960539},{"_id":"themes/amazing/.github/workflows/test.yml","hash":"f816a5970f4ad4fcf6c8350dbcd4c300c6986cb4","modified":1652421960539},{"_id":"themes/amazing/ex_pages/scaffolds/draft.md","hash":"204ab550ddffa92051ea0eb2484a78d84dac3693","modified":1652421960540},{"_id":"themes/amazing/include/migration/head.js","hash":"269ba172013cbd2f10b9bc51af0496628081329b","modified":1652421960541},{"_id":"themes/amazing/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1652421960541},{"_id":"themes/amazing/ex_pages/scaffolds/page.md","hash":"f0af1cb10f27d859caa51c8e3704469d9ed842a6","modified":1652421960540},{"_id":"themes/amazing/include/myhelper/myhelper.js","hash":"415aa067a259db2128719a35c27bcb1ac589ddae","modified":1652421960541},{"_id":"themes/amazing/include/schema/config.json","hash":"ac633f9d349bca4f089d59d2c3738b57376f1b31","modified":1652421960542},{"_id":"themes/amazing/ex_pages/scaffolds/post.md","hash":"bc9b5d09edfa168ecf33c9de9deb8394dfd13c7a","modified":1652421960540},{"_id":"themes/amazing/include/migration/v2_v3.js","hash":"3ccb2d2ce11018bebd7172da66faecc3983bff00","modified":1652421960541},{"_id":"themes/amazing/include/style/article.styl","hash":"be25e890113e926bbac3bf1461d7ce5427914774","modified":1652421960543},{"_id":"themes/amazing/include/style/base.styl","hash":"828799f6832f562905d2bd1c715d1fb01b67bdce","modified":1652421960543},{"_id":"themes/amazing/include/style/card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1652421960543},{"_id":"themes/amazing/include/style/codeblock.styl","hash":"30bee4cf6792e9665eb648cc20b352d9eaff1207","modified":1652421960543},{"_id":"themes/amazing/include/style/button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1652421960543},{"_id":"themes/amazing/include/style/donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1652421960543},{"_id":"themes/amazing/include/style/footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1652421960543},{"_id":"themes/amazing/include/style/helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1652421960544},{"_id":"themes/amazing/include/style/navbar.styl","hash":"ecc73c8ad504c0fa4bb910eb51500c14e0a8d662","modified":1652421960544},{"_id":"themes/amazing/include/style/pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1652421960544},{"_id":"themes/amazing/include/style/plugin.styl","hash":"dc98160142c95ef81ba4789351002a5fcf29c04c","modified":1652421960544},{"_id":"themes/amazing/include/style/responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1652421960544},{"_id":"themes/amazing/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1652421960545},{"_id":"themes/amazing/include/style/search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1652421960545},{"_id":"themes/amazing/include/style/timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1652421960545},{"_id":"themes/amazing/include/style/widget.styl","hash":"af07ee43e209b6361eed22171bb50efaef7cbfeb","modified":1652421960545},{"_id":"themes/amazing/layout/common/article.jsx","hash":"d5c1e35f8fdf9d04827b80fcedbf4345e27f5afb","modified":1652421960547},{"_id":"themes/amazing/layout/common/comment.jsx","hash":"f24b09ecc3f2a8c99f002feaa2f0229eca99e036","modified":1652421960547},{"_id":"themes/amazing/layout/common/donates.jsx","hash":"889fb0a7ccc502f0a43b4a18eb330e351e50493c","modified":1652421960547},{"_id":"themes/amazing/layout/common/footer.jsx","hash":"9873aeed19ef827839ab37fccde9f0ed6100b32a","modified":1652421960547},{"_id":"themes/amazing/layout/common/plugins.jsx","hash":"f6826c1a5f5f59f4a0aa00c63bdb0ad4ff4eab69","modified":1652421960547},{"_id":"themes/amazing/layout/common/head.jsx","hash":"6c9f4513ce17159fbd29d5ce2e5a2e559d4e0dc8","modified":1652421960547},{"_id":"themes/amazing/layout/common/navbar.jsx","hash":"618e45fe4914eebc5c20b253d7f5165cbab97439","modified":1652421960547},{"_id":"themes/amazing/layout/common/scripts.jsx","hash":"844728252fa8f580a11e6deab96b3d3bd7600c1f","modified":1652421960547},{"_id":"themes/amazing/layout/common/search.jsx","hash":"6f244a37293031670a2964fe424ecd062e591d7b","modified":1652421960547},{"_id":"themes/amazing/layout/common/share.jsx","hash":"c9fb0319ad5e5a10ad3636b26a6c2afed14c590f","modified":1652421960548},{"_id":"themes/amazing/layout/common/widgets.jsx","hash":"0ff430dee33ef93199fbf13cf6760e46f0225cf5","modified":1652421960548},{"_id":"themes/amazing/layout/comment/gitalk.jsx","hash":"4f0fd16ecac95b1cb6ef64d8b580269dda555b02","modified":1652421960546},{"_id":"themes/amazing/layout/comment/utteranc.jsx","hash":"38f6e907e3ac2cebc1a0091e43039df0db1013fd","modified":1652421960546},{"_id":"themes/amazing/layout/comment/valine.jsx","hash":"6101da901d6f7615bb9a3a6321929dae4a67bf06","modified":1652421960546},{"_id":"themes/amazing/layout/misc/article_licensing.jsx","hash":"07b3431f793bfec45c628f5cf577f2d5fdea9b84","modified":1652421960548},{"_id":"themes/amazing/layout/plugin/animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1652421960548},{"_id":"themes/amazing/layout/plugin/back_to_top.jsx","hash":"7fc0c5aaabd7d0eaff04cb68ec139442dc3414e8","modified":1652421960548},{"_id":"themes/amazing/layout/widget/ads_x.jsx","hash":"499948cf129313e495db407254aad9ae7d95b9b2","modified":1652421960549},{"_id":"themes/amazing/layout/widget/adsense.jsx","hash":"7103920aa6c6856bf0fd3d80d1dde61c3098001f","modified":1652421960549},{"_id":"themes/amazing/layout/widget/archives.jsx","hash":"0e04644a2bf06f9f3e5333790f55ea1254a6ef32","modified":1652421960549},{"_id":"themes/amazing/layout/widget/categories.jsx","hash":"40500e6fca1bfd7cea9236b5707e78b0515b2b61","modified":1652421960549},{"_id":"themes/amazing/layout/widget/hot_recommend.jsx","hash":"989f171891b50483e94c2495596e4a9389c19008","modified":1652421960549},{"_id":"themes/amazing/layout/widget/latest_comment.jsx","hash":"639da2fe9a3914b6197d79ac9e20b517be886dfe","modified":1652421960549},{"_id":"themes/amazing/layout/widget/profile.jsx","hash":"f1496297e7f017178d7ca0b2e919e1272b7e8180","modified":1652421960549},{"_id":"themes/amazing/layout/widget/recent_posts.jsx","hash":"3e827e3dadec52a9be3609a6dd2c44a684071dfe","modified":1652421960549},{"_id":"themes/amazing/layout/widget/recommend_post.jsx","hash":"988c1c0b9e89746abcd3030143d32714ae0cc696","modified":1652421960549},{"_id":"themes/amazing/layout/widget/tags.jsx","hash":"3b26a9d185d5604f1e356ee30d6831397712f45e","modified":1652421960549},{"_id":"themes/amazing/layout/widget/toc.jsx","hash":"415e98d60083c6e24c9bf0c6da78b63a22d36b09","modified":1652421960550},{"_id":"themes/amazing/source/css/cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1652421960550},{"_id":"themes/amazing/source/css/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1652421960550},{"_id":"themes/amazing/source/css/default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1652421960550},{"_id":"themes/amazing/source/css/global_gray.styl","hash":"21f68eaff645c8fdc2be2aacccd6bcdc941db386","modified":1652421960550},{"_id":"themes/amazing/source/css/meplayer.min.css","hash":"a251581e4394b052def5e75f39a43a1828df09f4","modified":1652421960551},{"_id":"themes/amazing/source/css/style.styl","hash":"57587d83d3809e08498f0236e709657f29e88289","modified":1652421960551},{"_id":"themes/amazing/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1652421960551},{"_id":"themes/amazing/source/img/background.png","hash":"2961b42efd55e85674cf15fcb8b3eca9325bcbda","modified":1652421960551},{"_id":"themes/amazing/source/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1652421960551},{"_id":"themes/amazing/source/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1652421960551},{"_id":"themes/amazing/source/img/razor-bottom-black.svg","hash":"52bff9d6530d07cb72ea9701f63269b56248f319","modified":1652421960552},{"_id":"themes/amazing/source/img/razor-top-black.svg","hash":"660a839e19e7abb49c7650455096fb7d53536ce5","modified":1652421960552},{"_id":"themes/amazing/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1652421960551},{"_id":"themes/amazing/source/js/.eslintrc.json","hash":"6bf0641cb69dffac97f69baea192d7fa3ab612cb","modified":1652421960552},{"_id":"themes/amazing/source/js/about-me.js","hash":"64103ccb7fa8c927fbd528920a34a027cf8a438b","modified":1652421960552},{"_id":"themes/amazing/source/js/APlayer.min.js","hash":"69ff1f2d0db203caac2015fc0f032b2000e1b279","modified":1652421960552},{"_id":"themes/amazing/source/js/animation.js","hash":"12cedd5caaf9109eed97e50eeab8f883f6e49be3","modified":1652421960552},{"_id":"themes/amazing/source/js/back_to_top.js","hash":"de5469db7d8ed6ae7683de6f026fbef047bbd67d","modified":1652421960553},{"_id":"themes/amazing/source/js/banner.js","hash":"35f7f76fe58ad8c24a009b84aab84a44ea5885a7","modified":1652421960553},{"_id":"themes/amazing/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1652421960553},{"_id":"themes/amazing/source/js/comment-issue-data.js","hash":"7c9a87c0995bbf5925f1c8039ccb5dbf27ed50da","modified":1652421960553},{"_id":"themes/amazing/source/js/friend.js","hash":"f562c65446b162d5369297000f4d930196a79947","modified":1652421960556},{"_id":"themes/amazing/source/js/globalUtils.js","hash":"c90e366b95da499dad8e2e6914a86399637c3c12","modified":1652421960557},{"_id":"themes/amazing/source/js/main.js","hash":"e9438573c6b0294814ed9285b34146a7d7e7938c","modified":1652421960557},{"_id":"themes/amazing/source/js/md5.min.js","hash":"43a66f1e3c05e6a1bca9d5b58075a0e9f73199bf","modified":1652421960557},{"_id":"themes/amazing/source/js/meplayer.js","hash":"f5aaffefa98bad92d22fca2c012d6d6b6e5f63c9","modified":1652421960557},{"_id":"themes/amazing/source/js/theme-setting.js","hash":"5f3100bc71bb2caba0f206c3e804e063b0bdecb3","modified":1652421960557},{"_id":"themes/amazing/source/js/music.js","hash":"9e6c31173e87a44a48f03611ce2a5cd68cfb7a5a","modified":1652421960557},{"_id":"themes/amazing/source/live2d/autoload.js","hash":"4f39b9c15ac5c54e4f9349782ca38c9c517bbd24","modified":1652421960558},{"_id":"themes/amazing/source/live2d/flat-ui-icons-regular.eot","hash":"aca0199880ba1945feb4ae85dfdf7436d4affec2","modified":1652421960558},{"_id":"themes/amazing/source/live2d/flat-ui-icons-regular.svg","hash":"be17ccbdb41d15da3409ec4fc79b389c56be4067","modified":1652421960558},{"_id":"themes/amazing/source/live2d/flat-ui-icons-regular.ttf","hash":"38c2162ef6eee02be3299ceaddab4f2c4b486aa1","modified":1652421960559},{"_id":"themes/amazing/source/live2d/flat-ui-icons-regular.woff","hash":"b613bbbdb029dd9dbff8a87eb05c1410f2da74a9","modified":1652421960559},{"_id":"themes/amazing/source/live2d/waifu-tips.json","hash":"275b6019e84c3f68ef273a28776cea64a43ed268","modified":1652421960560},{"_id":"themes/amazing/source/live2d/waifu-tips.js","hash":"f6caa2088cd4e44c1eb290ca6ac14f88f1ed31af","modified":1652421960559},{"_id":"themes/amazing/source/json_data/banner.json","hash":"da205297f9fd973cc4834b5182a361db33c4c1da","modified":1652421960558},{"_id":"themes/amazing/source/json_data/friend.json","hash":"7cf4987c2a3dce8e6582be32c7da11f625277889","modified":1652421960558},{"_id":"themes/amazing/source/json_data/music.json","hash":"37d7271f9e6f1c6633775f8cde20f8bbee6666be","modified":1652421960558},{"_id":"themes/amazing/source/json_data/record.json","hash":"ac071ea909c9ad74c0852fbbeb012c081b6bfa53","modified":1652421960558},{"_id":"themes/amazing/source/live2d/waifu.css","hash":"593f66b464a1144b132efbc7326ee7f4106b3c48","modified":1652421960560},{"_id":"themes/amazing/source/json_data/video.json","hash":"8b4385ce1c3259dbefa7972baf91369f8f10e8aa","modified":1652421960558},{"_id":"themes/amazing/ex_pages/source/about/index.md","hash":"66194393ffc09f6e111ba0b50aa7f21a8b0b3322","modified":1652421960540},{"_id":"themes/amazing/ex_pages/source/album/index.md","hash":"2656f2a43dbfe87c7e9074c335b14f6f7a9a70b1","modified":1652421960540},{"_id":"themes/amazing/ex_pages/source/friend/index.md","hash":"176a8e27f5ecca6a909c3d458950a64054ecb13c","modified":1652421960540},{"_id":"themes/amazing/ex_pages/source/media/index.md","hash":"d1b495dcd1d120a4cf63a29fd9b36d79929640f9","modified":1652421960540},{"_id":"themes/amazing/include/schema/common/article.json","hash":"8d78149f44629d0848921c6fb9c008b03cef3116","modified":1652421960541},{"_id":"themes/amazing/include/schema/common/comment.json","hash":"bd30bd9ffc84e88e704384acdfcaab09019a744f","modified":1652421960541},{"_id":"themes/amazing/ex_pages/source/message/index.md","hash":"fdc09ee73e5e7a6d38ef48227c3ffbdad2516e75","modified":1652421960540},{"_id":"themes/amazing/include/schema/common/donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1652421960541},{"_id":"themes/amazing/ex_pages/source/music/index.md","hash":"c5aac62380729a5633674f8e916909eeb608c77d","modified":1652421960540},{"_id":"themes/amazing/include/schema/common/providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1652421960542},{"_id":"themes/amazing/include/schema/common/footer.json","hash":"09d706cbb94d6da9a0d15c719ce7139325cae1c7","modified":1652421960541},{"_id":"themes/amazing/include/schema/common/head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1652421960542},{"_id":"themes/amazing/include/schema/common/navbar.json","hash":"df708bc8a25d4eeec268969f014ad99f9e74ef7a","modified":1652421960542},{"_id":"themes/amazing/include/schema/common/search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1652421960542},{"_id":"themes/amazing/include/schema/common/share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1652421960542},{"_id":"themes/amazing/include/schema/common/sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1652421960542},{"_id":"themes/amazing/include/schema/common/widgets.json","hash":"c221a5775f0bee01b4c393f0b133e19e006bab5e","modified":1652421960542},{"_id":"themes/amazing/include/schema/plugin/animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1652421960542},{"_id":"themes/amazing/include/schema/common/plugins.json","hash":"6036a805749816416850d944f7d64aaae62e5e75","modified":1652421960542},{"_id":"themes/amazing/include/schema/widget/ads_x.json","hash":"ba38f6dafff43ad67636ab24867040af7030c7d2","modified":1652421960543},{"_id":"themes/amazing/ex_pages/source/self-talking/index.md","hash":"f849ab06b09bc596d4e67bcf46c54c0005be0791","modified":1652421960540},{"_id":"themes/amazing/include/schema/widget/adsense.json","hash":"3242092d430b26faf458adfbf3f63988dacd3e7c","modified":1652421960543},{"_id":"themes/amazing/include/schema/widget/latest_comment.json","hash":"4f8a60858c77cef53a7e051dd3b5f00e59b0372c","modified":1652421960543},{"_id":"themes/amazing/include/schema/widget/hot_recommend.json","hash":"7b17df3c6cd1291b55dde3e4b93e2e32faac6821","modified":1652421960543},{"_id":"themes/amazing/include/schema/widget/profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1652421960543},{"_id":"themes/amazing/include/schema/widget/recommend_post.json","hash":"5784ec1068d691f4a4a3aa9781be98bb3c305ba9","modified":1652421960543},{"_id":"themes/amazing/include/schema/plugin/back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1652421960542},{"_id":"themes/amazing/include/style/mystyle/article.styl","hash":"9151c842281d6f3a690711c70bf22409b770e71f","modified":1652421960544},{"_id":"themes/amazing/include/style/mystyle/footer.styl","hash":"7ba6dd5c08b3829e349bbfec934ac9285ff12a0d","modified":1652421960544},{"_id":"themes/amazing/include/style/mystyle/base.styl","hash":"a1ccd4438953bd08a886fdb308435afd8d4c38e0","modified":1652421960544},{"_id":"themes/amazing/include/style/mystyle/navbar.styl","hash":"8739a972e1379a3d7466ef11e2823592b18b6cfc","modified":1652421960544},{"_id":"themes/amazing/include/style/mystyle/widget.styl","hash":"ce91a41a13d3d213ae9c5ba8a4e539cfa807483f","modified":1652421960544},{"_id":"themes/amazing/include/style/mystyle/responsive.styl","hash":"dd4dda5743870ca7fb9284a48d6486198366cd98","modified":1652421960544},{"_id":"themes/amazing/source/css/fonts/fontello.svg","hash":"b7f458a84af7b234b6a38f3f1bb258f079d1f330","modified":1652421960550},{"_id":"themes/amazing/source/css/fonts/fontello.ttf","hash":"2f0ec712a4b69bbf3559279c3a59864dfb8b189e","modified":1652421960550},{"_id":"themes/amazing/source/css/fonts/fontello.eot","hash":"2255b47d54d38128105b05e694dafff7701e3f68","modified":1652421960550},{"_id":"themes/amazing/source/css/fonts/fontello.woff","hash":"27fd16775dde59ccfbe7b1ce81261b1af30a6703","modified":1652421960550},{"_id":"themes/amazing/source/img/links/nopic.jpg","hash":"6aa82d56e4058b992d692865286343134d87fd11","modified":1652421960551},{"_id":"themes/amazing/include/style/mystyle/night.styl","hash":"60e6863aa50f9424f677a7a70fd18ca7cc0f5922","modified":1652421960544},{"_id":"themes/amazing/source/js/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1652421960552},{"_id":"themes/amazing/package-lock.json","hash":"1dc5c27c1ccc8b3530ef1b4db62fd3b92a96a282","modified":1652423772882},{"_id":"themes/amazing/source/js/gitalk_self.min.js","hash":"dd3607b73521091cf32df024775aab43d796c2f7","modified":1652421960557},{"_id":"themes/amazing/source/js/gitalk.min.js","hash":"97d7157f19ce81842a7f6b3c29bfed6205c8e252","modified":1652421960556},{"_id":"themes/amazing/source/live2d/live2d.js","hash":"9a8d3faf6b828bc1ce9352ecf83db7db2369e6cb","modified":1652421960559},{"_id":"themes/amazing/source/js/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1652421960555},{"_id":"public/js/algolia.js","hash":"a8df0c0abeeb4ee1d2d720161f3aea7339380704","modified":1652424090219},{"_id":"public/js/google_cse.js","hash":"1a9881669dfdeb2b3214074eee0d3e01e52db2c4","modified":1652424090219},{"_id":"public/js/insight.js","hash":"86bbdb7305d9bf19ad62d2ca2cf169fc8d9f9d31","modified":1652424090219},{"_id":"public/js/toc.js","hash":"da6fb757a1b083b8ed138bf29aad3a7bf8ec4f11","modified":1652424090219},{"_id":"public/content.json","hash":"eed7e5eba2863c0922a294b6fe4a2e299f8756c5","modified":1652430547170},{"_id":"public/manifest.json","hash":"74f716e7016d82506948c7d9cb693bed4c7daa22","modified":1652424090219},{"_id":"public/categories/index.html","hash":"97dca161389d9bd31a1743640a39c66f396dd499","modified":1652428493250},{"_id":"public/tags/index.html","hash":"446f49898166885d6b06202d9a624264c09f619a","modified":1652428493250},{"_id":"public/img/background.png","hash":"2961b42efd55e85674cf15fcb8b3eca9325bcbda","modified":1652424090219},{"_id":"public/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1652424090219},{"_id":"public/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1652424090219},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1652424090219},{"_id":"public/img/razor-bottom-black.svg","hash":"52bff9d6530d07cb72ea9701f63269b56248f319","modified":1652424090219},{"_id":"public/img/razor-top-black.svg","hash":"660a839e19e7abb49c7650455096fb7d53536ce5","modified":1652424090219},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1652424090219},{"_id":"public/live2d/flat-ui-icons-regular.eot","hash":"aca0199880ba1945feb4ae85dfdf7436d4affec2","modified":1652424090219},{"_id":"public/live2d/flat-ui-icons-regular.woff","hash":"b613bbbdb029dd9dbff8a87eb05c1410f2da74a9","modified":1652424090219},{"_id":"public/live2d/flat-ui-icons-regular.svg","hash":"be17ccbdb41d15da3409ec4fc79b389c56be4067","modified":1652424090219},{"_id":"public/css/fonts/fontello.svg","hash":"b7f458a84af7b234b6a38f3f1bb258f079d1f330","modified":1652424090219},{"_id":"public/css/fonts/fontello.ttf","hash":"2f0ec712a4b69bbf3559279c3a59864dfb8b189e","modified":1652424090219},{"_id":"public/live2d/flat-ui-icons-regular.ttf","hash":"38c2162ef6eee02be3299ceaddab4f2c4b486aa1","modified":1652424090219},{"_id":"public/css/fonts/fontello.eot","hash":"2255b47d54d38128105b05e694dafff7701e3f68","modified":1652424090219},{"_id":"public/img/links/nopic.jpg","hash":"6aa82d56e4058b992d692865286343134d87fd11","modified":1652424090219},{"_id":"public/css/fonts/fontello.woff","hash":"27fd16775dde59ccfbe7b1ce81261b1af30a6703","modified":1652424090219},{"_id":"public/css/global_gray.css","hash":"82012095b29254cd22af825659dc8a6d59649e81","modified":1652424090219},{"_id":"public/css/meplayer.min.css","hash":"a251581e4394b052def5e75f39a43a1828df09f4","modified":1652424090219},{"_id":"public/js/about-me.js","hash":"64103ccb7fa8c927fbd528920a34a027cf8a438b","modified":1652424090219},{"_id":"public/js/back_to_top.js","hash":"de5469db7d8ed6ae7683de6f026fbef047bbd67d","modified":1652424090219},{"_id":"public/js/animation.js","hash":"12cedd5caaf9109eed97e50eeab8f883f6e49be3","modified":1652424090219},{"_id":"public/js/banner.js","hash":"35f7f76fe58ad8c24a009b84aab84a44ea5885a7","modified":1652424090219},{"_id":"public/js/comment-issue-data.js","hash":"7c9a87c0995bbf5925f1c8039ccb5dbf27ed50da","modified":1652424090219},{"_id":"public/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1652424090219},{"_id":"public/js/friend.js","hash":"f562c65446b162d5369297000f4d930196a79947","modified":1652424090219},{"_id":"public/js/globalUtils.js","hash":"c90e366b95da499dad8e2e6914a86399637c3c12","modified":1652424090219},{"_id":"public/js/md5.min.js","hash":"43a66f1e3c05e6a1bca9d5b58075a0e9f73199bf","modified":1652424090219},{"_id":"public/js/main.js","hash":"e9438573c6b0294814ed9285b34146a7d7e7938c","modified":1652424090219},{"_id":"public/js/music.js","hash":"9e6c31173e87a44a48f03611ce2a5cd68cfb7a5a","modified":1652424090219},{"_id":"public/live2d/autoload.js","hash":"4f39b9c15ac5c54e4f9349782ca38c9c517bbd24","modified":1652424090219},{"_id":"public/live2d/waifu.css","hash":"593f66b464a1144b132efbc7326ee7f4106b3c48","modified":1652424090219},{"_id":"public/js/theme-setting.js","hash":"5f3100bc71bb2caba0f206c3e804e063b0bdecb3","modified":1652424090219},{"_id":"public/json_data/banner.json","hash":"93939c8a49fbb35198d85704626271a6efd2004f","modified":1652424090219},{"_id":"public/json_data/record.json","hash":"7e21f1fd54a3675411a9966146623865fc682292","modified":1652424090219},{"_id":"public/json_data/friend.json","hash":"6b1ad28c07cfc38d4cdba9933644ffac5c0f52e5","modified":1652424090219},{"_id":"public/json_data/music.json","hash":"2012b9a772cb597fbac92924a71d6ff1ab255a66","modified":1652424090219},{"_id":"public/json_data/video.json","hash":"d950bf662184a5c3f64428953f6c7317f1438021","modified":1652424090219},{"_id":"public/live2d/waifu-tips.json","hash":"9e492b959db93d1233e76048aa94c50fd20c1c16","modified":1652424090219},{"_id":"public/css/cyberpunk.css","hash":"68b389a971ba37dd75d554ca191c7581e4d0ff6e","modified":1652424090219},{"_id":"public/css/style.css","hash":"c863796a6d19b1e930da4e5826f7705e4c63b75c","modified":1652424090219},{"_id":"public/css/default.css","hash":"c863796a6d19b1e930da4e5826f7705e4c63b75c","modified":1652424090219},{"_id":"public/js/meplayer.js","hash":"f5aaffefa98bad92d22fca2c012d6d6b6e5f63c9","modified":1652424090219},{"_id":"public/live2d/waifu-tips.js","hash":"f6caa2088cd4e44c1eb290ca6ac14f88f1ed31af","modified":1652424090219},{"_id":"public/css/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1652424090219},{"_id":"public/js/APlayer.min.js","hash":"69ff1f2d0db203caac2015fc0f032b2000e1b279","modified":1652424090219},{"_id":"public/js/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1652424090219},{"_id":"public/js/gitalk.min.js","hash":"97d7157f19ce81842a7f6b3c29bfed6205c8e252","modified":1652424090219},{"_id":"public/js/gitalk_self.min.js","hash":"dd3607b73521091cf32df024775aab43d796c2f7","modified":1652424090219},{"_id":"public/live2d/live2d.js","hash":"9a8d3faf6b828bc1ce9352ecf83db7db2369e6cb","modified":1652424090219},{"_id":"public/js/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1652424090219},{"_id":"themes/amazing/.DS_Store","hash":"344b6b2bb96d0a8b40a4df3880ae62e98acc5db9","modified":1652431393423}],"Category":[{"name":"技术分享","_id":"cl341xpv50002bwx1h1511zrb"},{"name":"flutter","_id":"cl341xpv90007bwx1guv5g9w0"},{"name":"读书分享","_id":"cl341xpvh000vbwx15mhk89ym"},{"name":"旅行日记","_id":"cl341xpvq001zbwx15u1p5g20"}],"Data":[],"Page":[],"Post":[{"title":"Typora流程图代码实例","date":"2022-04-21T10:11:45.000Z","_content":"\n![test](Typora流程图代码实例/hello.jpeg)\n<!-- more -->\n\nTypora流程图\n===========\n\n示例：\n----\n**横向流程图**\n```mermaid\ngraph LR\nA[方形] -->B(圆角)\n    B --> C{条件a}\n    C -->|a=1| D[结果1]\n    C -->|a=2| E[结果2]\n    F[横向流程图]\n```\n\n**竖向流程图**\n```mermaid\ngraph TD\nA[方形] --> B(圆角)\n    B --> C{条件a}\n    C --> |a=1| D[结果1]\n    C --> |a=2| E[结果2]\n    F[竖向流程图]\n```\n\n暂时只用到这两种 其他类型的用到时候再更新吧！\n","source":"_posts/Typora流程图代码实例.md","raw":"---\ntitle: Typora流程图代码实例\ndate: 2022-04-21 18:11:45\ntags: [typora,流程图,mermaid]\ncategories: 技术分享\n---\n\n![test](Typora流程图代码实例/hello.jpeg)\n<!-- more -->\n\nTypora流程图\n===========\n\n示例：\n----\n**横向流程图**\n```mermaid\ngraph LR\nA[方形] -->B(圆角)\n    B --> C{条件a}\n    C -->|a=1| D[结果1]\n    C -->|a=2| E[结果2]\n    F[横向流程图]\n```\n\n**竖向流程图**\n```mermaid\ngraph TD\nA[方形] --> B(圆角)\n    B --> C{条件a}\n    C --> |a=1| D[结果1]\n    C --> |a=2| E[结果2]\n    F[竖向流程图]\n```\n\n暂时只用到这两种 其他类型的用到时候再更新吧！\n","slug":"Typora流程图代码实例","published":1,"updated":"2022-05-13T07:57:13.219Z","_id":"cl341xpus0000bwx14x18fqlw","comments":1,"layout":"post","photos":[],"link":"","content":"<img src=\"/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg\" class=\"\" title=\"test\">\n<span id=\"more\"></span>\n\n<h1 id=\"Typora流程图\"><a href=\"#Typora流程图\" class=\"headerlink\" title=\"Typora流程图\"></a>Typora流程图</h1><h2 id=\"示例：\"><a href=\"#示例：\" class=\"headerlink\" title=\"示例：\"></a>示例：</h2><p><strong>横向流程图</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">A[方形] --&gt;B(圆角)</span><br><span class=\"line\">    B --&gt; C&#123;条件a&#125;</span><br><span class=\"line\">    C --&gt;|a=1| D[结果1]</span><br><span class=\"line\">    C --&gt;|a=2| E[结果2]</span><br><span class=\"line\">    F[横向流程图]</span><br></pre></td></tr></table></figure>\n\n<p><strong>竖向流程图</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">A[方形] --&gt; B(圆角)</span><br><span class=\"line\">    B --&gt; C&#123;条件a&#125;</span><br><span class=\"line\">    C --&gt; |a=1| D[结果1]</span><br><span class=\"line\">    C --&gt; |a=2| E[结果2]</span><br><span class=\"line\">    F[竖向流程图]</span><br></pre></td></tr></table></figure>\n\n<p>暂时只用到这两种 其他类型的用到时候再更新吧！</p>\n","site":{"data":{}},"excerpt":"<img src=\"/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg\" class=\"\" title=\"test\">","more":"<h1 id=\"Typora流程图\"><a href=\"#Typora流程图\" class=\"headerlink\" title=\"Typora流程图\"></a>Typora流程图</h1><h2 id=\"示例：\"><a href=\"#示例：\" class=\"headerlink\" title=\"示例：\"></a>示例：</h2><p><strong>横向流程图</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">A[方形] --&gt;B(圆角)</span><br><span class=\"line\">    B --&gt; C&#123;条件a&#125;</span><br><span class=\"line\">    C --&gt;|a=1| D[结果1]</span><br><span class=\"line\">    C --&gt;|a=2| E[结果2]</span><br><span class=\"line\">    F[横向流程图]</span><br></pre></td></tr></table></figure>\n\n<p><strong>竖向流程图</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">A[方形] --&gt; B(圆角)</span><br><span class=\"line\">    B --&gt; C&#123;条件a&#125;</span><br><span class=\"line\">    C --&gt; |a=1| D[结果1]</span><br><span class=\"line\">    C --&gt; |a=2| E[结果2]</span><br><span class=\"line\">    F[竖向流程图]</span><br></pre></td></tr></table></figure>\n\n<p>暂时只用到这两种 其他类型的用到时候再更新吧！</p>"},{"title":"flutter study day 1 : 学习了Dart语言的基础知识","date":"2022-04-23T11:06:54.000Z","_content":"![flutter 第一天](https://tva2.sinaimg.cn/large/0072Vf1pgy1foxk3qdi4cj31kw0w0kh2.jpg)\n<!-- more -->\n\n最近打算用flutter将服务进行中心化  \n于是便有了使用flutter开发的想法\n\n之前就接触了flutter 但是时间关系 一直没有深入了解  \n也只是停留在了Dart语言的基础上就没有继续了  \n对于安卓开发/IOS开发也只是一知半解  \n我相信这将会是一项很有挑战性的项目  \n今天学习完了flutter的Dart语言基础知识  \n结合了之前学过的Java基础知识  \n发现两者之间并没有多大的不同之处  \n所以理解起来并不算难\n\n本打算学习完了基础知识之后动手模仿写一下flutter的简单的组件\n但是我发现我的flutter环境消失了 xcode这些基础的开发工具都需要重新安装  那么安装好了之后今天就结束了 明天再开始新的征程吧\n\n","source":"_posts/flutter-study-day-1-学习了Dart语言的基础知识.md","raw":"---\ntitle: 'flutter study day 1 : 学习了Dart语言的基础知识'\ndate: 2022-04-23 19:06:54\ntags: [flutter]\ncategories: flutter\n---\n![flutter 第一天](https://tva2.sinaimg.cn/large/0072Vf1pgy1foxk3qdi4cj31kw0w0kh2.jpg)\n<!-- more -->\n\n最近打算用flutter将服务进行中心化  \n于是便有了使用flutter开发的想法\n\n之前就接触了flutter 但是时间关系 一直没有深入了解  \n也只是停留在了Dart语言的基础上就没有继续了  \n对于安卓开发/IOS开发也只是一知半解  \n我相信这将会是一项很有挑战性的项目  \n今天学习完了flutter的Dart语言基础知识  \n结合了之前学过的Java基础知识  \n发现两者之间并没有多大的不同之处  \n所以理解起来并不算难\n\n本打算学习完了基础知识之后动手模仿写一下flutter的简单的组件\n但是我发现我的flutter环境消失了 xcode这些基础的开发工具都需要重新安装  那么安装好了之后今天就结束了 明天再开始新的征程吧\n\n","slug":"flutter-study-day-1-学习了Dart语言的基础知识","published":1,"updated":"2022-05-13T07:57:37.960Z","_id":"cl341xpv00001bwx19ki1ft4y","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://tva2.sinaimg.cn/large/0072Vf1pgy1foxk3qdi4cj31kw0w0kh2.jpg\" alt=\"flutter 第一天\"></p>\n<span id=\"more\"></span>\n\n<p>最近打算用flutter将服务进行中心化<br>于是便有了使用flutter开发的想法</p>\n<p>之前就接触了flutter 但是时间关系 一直没有深入了解<br>也只是停留在了Dart语言的基础上就没有继续了<br>对于安卓开发/IOS开发也只是一知半解<br>我相信这将会是一项很有挑战性的项目<br>今天学习完了flutter的Dart语言基础知识<br>结合了之前学过的Java基础知识<br>发现两者之间并没有多大的不同之处<br>所以理解起来并不算难</p>\n<p>本打算学习完了基础知识之后动手模仿写一下flutter的简单的组件<br>但是我发现我的flutter环境消失了 xcode这些基础的开发工具都需要重新安装  那么安装好了之后今天就结束了 明天再开始新的征程吧</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://tva2.sinaimg.cn/large/0072Vf1pgy1foxk3qdi4cj31kw0w0kh2.jpg\" alt=\"flutter 第一天\"></p>","more":"<p>最近打算用flutter将服务进行中心化<br>于是便有了使用flutter开发的想法</p>\n<p>之前就接触了flutter 但是时间关系 一直没有深入了解<br>也只是停留在了Dart语言的基础上就没有继续了<br>对于安卓开发/IOS开发也只是一知半解<br>我相信这将会是一项很有挑战性的项目<br>今天学习完了flutter的Dart语言基础知识<br>结合了之前学过的Java基础知识<br>发现两者之间并没有多大的不同之处<br>所以理解起来并不算难</p>\n<p>本打算学习完了基础知识之后动手模仿写一下flutter的简单的组件<br>但是我发现我的flutter环境消失了 xcode这些基础的开发工具都需要重新安装  那么安装好了之后今天就结束了 明天再开始新的征程吧</p>"},{"title":"flutter study day 2 我的第一个flutter应用","date":"2022-04-24T10:03:49.000Z","_content":"![我的第一个flutter应用](https://tva2.sinaimg.cn/large/0072Vf1pgy1foxkjdzgusj31hc0u0nfc.jpg)\n<!-- more -->\n\nday 2 我的第一个flutter应用\n=========================\n\n今天花了几个小时时间终于将flutter环境处理好了  \n于是开始动手写我的一个flutter项目\n[参照flutter中文官网](https://flutter.cn/docs/get-started/codelab)  \n\n### 首先\n在android studio创建项目  \ncreate new flutter project -> flutter -> 填写fluttersdk地址 -> 填写项目名字 -> next -> finish 创建完成\n### 修改main.dart\n    import 'package:flutter/material.dart';\n    //引入flutter下的material包\n\n    void main() {\n    runApp(const MyApp());\n    }\n    //声明入口文件\n\n    //创建myapp类并继承自StatlessWidget组件\n    class MyApp extends StatelessWidget {\n    const MyApp({Key? key}) : super(key: key);\n    //进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n    //重写部件 build\n    @override\n    Widget build(BuildContext context) { //传入参数BuildContext context\n        return MaterialApp(//返回 重写后的app\n        title: 'Welcome to Flutter',\n        home: Scaffold(\n            appBar: AppBar(//App顶栏：\n            title: const Text('my_app'),//标题：文本（\"my_app\"）\n            ),\n            body: const Center(//修改body元素：常量 居中\n            child: Text('Hello World'),//子元素：文本(\"Hello World\")\n            ),\n        ),\n        );\n    }\n    }\n\n实现如下效果：\n![](https://flutter.cn/assets/images/docs/get-started/ios/hello-world.png)\n\n### 导入包\n包介绍：english_words  \n包含数千个最常用的英文单词以及一些实用功能。  \n在项目目录执行:  \n    flutter pub add english_words\n\nandroid studio打开pubspec.yml会提示pub get  \n类似nodejs的npm install安装依赖\n\n导入  \n打开main.dart  \n\n    import 'package:english_words/english_words.dart';\n    //导入english_words包 未使用的包呈现灰色字体\n\n**调用pair_words  **\n\n    //重写部件 build\n    @override\n    Widget build(BuildContext context) { //传入参数BuildContext context\n        final word_Pair = WordPair.random();//声明变量 word Pair = wordpaird的random函数随机生成英文\n        return MaterialApp(//返回 重写后的app\n        title: 'Welcome to Flutter',\n        home: Scaffold(\n            appBar: AppBar(//App顶栏：\n            title: const Text('my_app'),//标题：文本（\"my_app\"）\n            ),\n            body: Center(//修改body元素：居中显示\n            child: Text(word_Pair.asPascalCase),//文本(word_paird的随机英文并使用pascalcase进行大驼峰命名法重命名)\n            ),\n        ),\n        );\n    }\n\n实现如下效果：\n![](https://flutter.cn/assets/images/docs/get-started/ios/step2.png)\n\n### 添加一个statefull widget  \n\n**dart.main末尾添加以下代码**\n\n    //新建类randomwords 继承自statefullwidget\n    class RandomWords extends StatefulWidget {\n        const RandomWords({ Key? key }) : super(key: key);\n        //函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n        //重写_RandomWordState类的createState函数 = _RandomWordsState()函数；\n        @override\n        _RandomWordsState createState() => _RandomWordsState();\n    }\n    //新建类——randomwordsstate 继承自 state<泛型 RandomWords>\n    class _RandomWordsState extends State<RandomWords> {\n    //重写 build函数\n    @override\n    Widget build(BuildContext context) {\n            final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n            return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n        }\n    }\n\n### 创建一个无限滚动的 ListView  \n\n**修改dart.main**\n**向 _RandomWordsState 类中添加一个 _suggestions 列表以保存建议的单词对，同时，添加一个 _biggerFont 变量来增大字体大小**\n\n        class _RandomWordsState extends State<RandomWords> {\n            final _suggestions = <WordPair>[];//新增数组_suggestions数据 泛型为WordPair\n            final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n            // ···\n        }\n\n    向 _RandomWordsState 类的 build 方法添加 ListView.builder\n    在 _RandomWordsState 中的 itemBuilder 里添加 ListTile 函数\n    class _RandomWordsState extends State<RandomWords> {\n    final _suggestions = <WordPair>[];//新增数组_suggestions数据 泛型为WordPair\n    final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n    //重写 build函数\n    @override\n    Widget build(BuildContext context) {\n        final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n        // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n        return ListView.builder(//返回列表显示\n        padding: const EdgeInsets.all(16.0),//边距16.0\n        //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距\n        itemBuilder: /*1*/ (context, i){//参数：连接,迭代器i（从0开始);每调用一次会自增\n            //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。\n            //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数\n            if (i.isOdd) return const Divider();/*2*/\n            //如果 i增加了：返回divider\n            /*\n            Divider是一个分割线控件\n                height：是控件的高，并不是线的高度，绘制的线居中。\n                thickness：线的高度。\n                indent：分割线前面空白区域。\n                endIndent：分割线后面空白区域。\n            默认为浅灰色分隔线\n            */\n\n            final index = i ~/ 2; /*3*/\n            //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。\n            if (index >= _suggestions.length){//如果 索引小于等于 _suggestions的长度\n            _suggestions.addAll(generateWordPairs().take(10));/*4*/\n            //生成10个单词并增加到_suggestions数据内\n            }\n            return ListTile(//返回列表\n            title: Text(//标题为文本\n                _suggestions[index].asPascalCase,\n                //_suggestions[索引].大驼峰命名\n                style: _biggerFont,\n                //样式为 定义好的 16.0\n            )\n            );\n        },\n        );\n    }\n    }\n\n    //新建类randomwords 继承自statefullwidget\n    class RandomWords extends StatefulWidget {\n    const RandomWords({ Key? key }) : super(key: key);\n    //函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n    //重写_RandomWordState类的createState函数 = _RandomWordsState()函数；\n    @override\n    _RandomWordsState createState() => _RandomWordsState();\n    }\n\n**更新 _RandomWordsState 的 build() 方法以使用_buildSuggestions()**\n\n    //新建类——randomwordsstate 继承自 state<泛型 RandomWords>\n    class _RandomWordsState extends State<RandomWords> {\n    final _suggestions = <WordPair>[];//新增数组_suggestions数据 泛型为WordPair\n    final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n    //重写 build函数\n    @override\n    Widget build(BuildContext context) {\n        // final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n        // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n        return Scaffold(\n        appBar: AppBar(\n            title: const Text('Startup Name Generator'),\n        ),\n        body: ListView.builder(//返回列表显示\n        padding: const EdgeInsets.all(16.0),//边距16.0\n        //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距\n        itemBuilder: /*1*/ (context, i){//参数：连接,迭代器i（从0开始);每调用一次会自增\n            //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。\n            //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数\n            if (i.isOdd) return const Divider();/*2*/\n            //如果 i增加了：返回divider\n            /*\n            Divider是一个分割线控件\n                height：是控件的高，并不是线的高度，绘制的线居中。\n                thickness：线的高度。\n                indent：分割线前面空白区域。\n                endIndent：分割线后面空白区域。\n            默认为浅灰色分隔线\n            */\n\n            final index = i ~/ 2; /*3*/\n            //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。\n            if (index >= _suggestions.length){//如果 索引小于等于 _suggestions的长度\n            _suggestions.addAll(generateWordPairs().take(10));/*4*/\n            //生成10个单词并增加到_suggestions数据内\n            }\n            return ListTile(//返回列表\n            title: Text(//标题为文本\n                _suggestions[index].asPascalCase,\n                //_suggestions[索引].大驼峰命名\n                style: _biggerFont,\n                //样式为 定义好的 16.0\n            )\n            );\n        },\n        ),\n        );\n    }\n    }\n\n### 更新 MyApp 的 build() 方法，修改 title 的值来改变标题，修改 home 的值为 RandomWords widget\n\n    //创建myapp类并继承自StatlessWidget组件\n    class MyApp extends StatelessWidget {\n    const MyApp({Key? key}) : super(key: key);\n    //进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n    //重写部件 build\n    @override\n    Widget build(BuildContext context) { //传入参数BuildContext context\n        return const MaterialApp(//返回 重写后的app\n        title: 'Startup Name Generator',\n        home: RandomWords(),\n        );\n    }\n    }\n\n最终效果如下：\n![](https://flutter.cn/assets/images/docs/get-started/ios/step4-infinite-list.png)","source":"_posts/flutter-study-day-2-我的第一个flutter应用.md","raw":"---\ntitle: flutter study day 2 我的第一个flutter应用\ndate: 2022-04-24 18:03:49\ntags: [flutter]\ncategories: flutter\n---\n![我的第一个flutter应用](https://tva2.sinaimg.cn/large/0072Vf1pgy1foxkjdzgusj31hc0u0nfc.jpg)\n<!-- more -->\n\nday 2 我的第一个flutter应用\n=========================\n\n今天花了几个小时时间终于将flutter环境处理好了  \n于是开始动手写我的一个flutter项目\n[参照flutter中文官网](https://flutter.cn/docs/get-started/codelab)  \n\n### 首先\n在android studio创建项目  \ncreate new flutter project -> flutter -> 填写fluttersdk地址 -> 填写项目名字 -> next -> finish 创建完成\n### 修改main.dart\n    import 'package:flutter/material.dart';\n    //引入flutter下的material包\n\n    void main() {\n    runApp(const MyApp());\n    }\n    //声明入口文件\n\n    //创建myapp类并继承自StatlessWidget组件\n    class MyApp extends StatelessWidget {\n    const MyApp({Key? key}) : super(key: key);\n    //进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n    //重写部件 build\n    @override\n    Widget build(BuildContext context) { //传入参数BuildContext context\n        return MaterialApp(//返回 重写后的app\n        title: 'Welcome to Flutter',\n        home: Scaffold(\n            appBar: AppBar(//App顶栏：\n            title: const Text('my_app'),//标题：文本（\"my_app\"）\n            ),\n            body: const Center(//修改body元素：常量 居中\n            child: Text('Hello World'),//子元素：文本(\"Hello World\")\n            ),\n        ),\n        );\n    }\n    }\n\n实现如下效果：\n![](https://flutter.cn/assets/images/docs/get-started/ios/hello-world.png)\n\n### 导入包\n包介绍：english_words  \n包含数千个最常用的英文单词以及一些实用功能。  \n在项目目录执行:  \n    flutter pub add english_words\n\nandroid studio打开pubspec.yml会提示pub get  \n类似nodejs的npm install安装依赖\n\n导入  \n打开main.dart  \n\n    import 'package:english_words/english_words.dart';\n    //导入english_words包 未使用的包呈现灰色字体\n\n**调用pair_words  **\n\n    //重写部件 build\n    @override\n    Widget build(BuildContext context) { //传入参数BuildContext context\n        final word_Pair = WordPair.random();//声明变量 word Pair = wordpaird的random函数随机生成英文\n        return MaterialApp(//返回 重写后的app\n        title: 'Welcome to Flutter',\n        home: Scaffold(\n            appBar: AppBar(//App顶栏：\n            title: const Text('my_app'),//标题：文本（\"my_app\"）\n            ),\n            body: Center(//修改body元素：居中显示\n            child: Text(word_Pair.asPascalCase),//文本(word_paird的随机英文并使用pascalcase进行大驼峰命名法重命名)\n            ),\n        ),\n        );\n    }\n\n实现如下效果：\n![](https://flutter.cn/assets/images/docs/get-started/ios/step2.png)\n\n### 添加一个statefull widget  \n\n**dart.main末尾添加以下代码**\n\n    //新建类randomwords 继承自statefullwidget\n    class RandomWords extends StatefulWidget {\n        const RandomWords({ Key? key }) : super(key: key);\n        //函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n        //重写_RandomWordState类的createState函数 = _RandomWordsState()函数；\n        @override\n        _RandomWordsState createState() => _RandomWordsState();\n    }\n    //新建类——randomwordsstate 继承自 state<泛型 RandomWords>\n    class _RandomWordsState extends State<RandomWords> {\n    //重写 build函数\n    @override\n    Widget build(BuildContext context) {\n            final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n            return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n        }\n    }\n\n### 创建一个无限滚动的 ListView  \n\n**修改dart.main**\n**向 _RandomWordsState 类中添加一个 _suggestions 列表以保存建议的单词对，同时，添加一个 _biggerFont 变量来增大字体大小**\n\n        class _RandomWordsState extends State<RandomWords> {\n            final _suggestions = <WordPair>[];//新增数组_suggestions数据 泛型为WordPair\n            final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n            // ···\n        }\n\n    向 _RandomWordsState 类的 build 方法添加 ListView.builder\n    在 _RandomWordsState 中的 itemBuilder 里添加 ListTile 函数\n    class _RandomWordsState extends State<RandomWords> {\n    final _suggestions = <WordPair>[];//新增数组_suggestions数据 泛型为WordPair\n    final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n    //重写 build函数\n    @override\n    Widget build(BuildContext context) {\n        final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n        // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n        return ListView.builder(//返回列表显示\n        padding: const EdgeInsets.all(16.0),//边距16.0\n        //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距\n        itemBuilder: /*1*/ (context, i){//参数：连接,迭代器i（从0开始);每调用一次会自增\n            //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。\n            //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数\n            if (i.isOdd) return const Divider();/*2*/\n            //如果 i增加了：返回divider\n            /*\n            Divider是一个分割线控件\n                height：是控件的高，并不是线的高度，绘制的线居中。\n                thickness：线的高度。\n                indent：分割线前面空白区域。\n                endIndent：分割线后面空白区域。\n            默认为浅灰色分隔线\n            */\n\n            final index = i ~/ 2; /*3*/\n            //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。\n            if (index >= _suggestions.length){//如果 索引小于等于 _suggestions的长度\n            _suggestions.addAll(generateWordPairs().take(10));/*4*/\n            //生成10个单词并增加到_suggestions数据内\n            }\n            return ListTile(//返回列表\n            title: Text(//标题为文本\n                _suggestions[index].asPascalCase,\n                //_suggestions[索引].大驼峰命名\n                style: _biggerFont,\n                //样式为 定义好的 16.0\n            )\n            );\n        },\n        );\n    }\n    }\n\n    //新建类randomwords 继承自statefullwidget\n    class RandomWords extends StatefulWidget {\n    const RandomWords({ Key? key }) : super(key: key);\n    //函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n    //重写_RandomWordState类的createState函数 = _RandomWordsState()函数；\n    @override\n    _RandomWordsState createState() => _RandomWordsState();\n    }\n\n**更新 _RandomWordsState 的 build() 方法以使用_buildSuggestions()**\n\n    //新建类——randomwordsstate 继承自 state<泛型 RandomWords>\n    class _RandomWordsState extends State<RandomWords> {\n    final _suggestions = <WordPair>[];//新增数组_suggestions数据 泛型为WordPair\n    final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n    //重写 build函数\n    @override\n    Widget build(BuildContext context) {\n        // final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n        // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n        return Scaffold(\n        appBar: AppBar(\n            title: const Text('Startup Name Generator'),\n        ),\n        body: ListView.builder(//返回列表显示\n        padding: const EdgeInsets.all(16.0),//边距16.0\n        //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距\n        itemBuilder: /*1*/ (context, i){//参数：连接,迭代器i（从0开始);每调用一次会自增\n            //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。\n            //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数\n            if (i.isOdd) return const Divider();/*2*/\n            //如果 i增加了：返回divider\n            /*\n            Divider是一个分割线控件\n                height：是控件的高，并不是线的高度，绘制的线居中。\n                thickness：线的高度。\n                indent：分割线前面空白区域。\n                endIndent：分割线后面空白区域。\n            默认为浅灰色分隔线\n            */\n\n            final index = i ~/ 2; /*3*/\n            //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。\n            if (index >= _suggestions.length){//如果 索引小于等于 _suggestions的长度\n            _suggestions.addAll(generateWordPairs().take(10));/*4*/\n            //生成10个单词并增加到_suggestions数据内\n            }\n            return ListTile(//返回列表\n            title: Text(//标题为文本\n                _suggestions[index].asPascalCase,\n                //_suggestions[索引].大驼峰命名\n                style: _biggerFont,\n                //样式为 定义好的 16.0\n            )\n            );\n        },\n        ),\n        );\n    }\n    }\n\n### 更新 MyApp 的 build() 方法，修改 title 的值来改变标题，修改 home 的值为 RandomWords widget\n\n    //创建myapp类并继承自StatlessWidget组件\n    class MyApp extends StatelessWidget {\n    const MyApp({Key? key}) : super(key: key);\n    //进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n    //重写部件 build\n    @override\n    Widget build(BuildContext context) { //传入参数BuildContext context\n        return const MaterialApp(//返回 重写后的app\n        title: 'Startup Name Generator',\n        home: RandomWords(),\n        );\n    }\n    }\n\n最终效果如下：\n![](https://flutter.cn/assets/images/docs/get-started/ios/step4-infinite-list.png)","slug":"flutter-study-day-2-我的第一个flutter应用","published":1,"updated":"2022-05-13T07:58:27.118Z","_id":"cl341xpv70004bwx11k2w26np","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://tva2.sinaimg.cn/large/0072Vf1pgy1foxkjdzgusj31hc0u0nfc.jpg\" alt=\"我的第一个flutter应用\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"day-2-我的第一个flutter应用\"><a href=\"#day-2-我的第一个flutter应用\" class=\"headerlink\" title=\"day 2 我的第一个flutter应用\"></a>day 2 我的第一个flutter应用</h1><p>今天花了几个小时时间终于将flutter环境处理好了<br>于是开始动手写我的一个flutter项目<br><a href=\"https://flutter.cn/docs/get-started/codelab\">参照flutter中文官网</a>  </p>\n<h3 id=\"首先\"><a href=\"#首先\" class=\"headerlink\" title=\"首先\"></a>首先</h3><p>在android studio创建项目<br>create new flutter project -&gt; flutter -&gt; 填写fluttersdk地址 -&gt; 填写项目名字 -&gt; next -&gt; finish 创建完成</p>\n<h3 id=\"修改main-dart\"><a href=\"#修改main-dart\" class=\"headerlink\" title=\"修改main.dart\"></a>修改main.dart</h3><pre><code>import &#39;package:flutter/material.dart&#39;;\n//引入flutter下的material包\n\nvoid main() &#123;\nrunApp(const MyApp());\n&#125;\n//声明入口文件\n\n//创建myapp类并继承自StatlessWidget组件\nclass MyApp extends StatelessWidget &#123;\nconst MyApp(&#123;Key? key&#125;) : super(key: key);\n//进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n//重写部件 build\n@override\nWidget build(BuildContext context) &#123; //传入参数BuildContext context\n    return MaterialApp(//返回 重写后的app\n    title: &#39;Welcome to Flutter&#39;,\n    home: Scaffold(\n        appBar: AppBar(//App顶栏：\n        title: const Text(&#39;my_app&#39;),//标题：文本（&quot;my_app&quot;）\n        ),\n        body: const Center(//修改body元素：常量 居中\n        child: Text(&#39;Hello World&#39;),//子元素：文本(&quot;Hello World&quot;)\n        ),\n    ),\n    );\n&#125;\n&#125;\n</code></pre>\n<p>实现如下效果：<br><img src=\"https://flutter.cn/assets/images/docs/get-started/ios/hello-world.png\"></p>\n<h3 id=\"导入包\"><a href=\"#导入包\" class=\"headerlink\" title=\"导入包\"></a>导入包</h3><p>包介绍：english_words<br>包含数千个最常用的英文单词以及一些实用功能。<br>在项目目录执行:<br>    flutter pub add english_words</p>\n<p>android studio打开pubspec.yml会提示pub get<br>类似nodejs的npm install安装依赖</p>\n<p>导入<br>打开main.dart  </p>\n<pre><code>import &#39;package:english_words/english_words.dart&#39;;\n//导入english_words包 未使用的包呈现灰色字体\n</code></pre>\n<p>**调用pair_words  **</p>\n<pre><code>//重写部件 build\n@override\nWidget build(BuildContext context) &#123; //传入参数BuildContext context\n    final word_Pair = WordPair.random();//声明变量 word Pair = wordpaird的random函数随机生成英文\n    return MaterialApp(//返回 重写后的app\n    title: &#39;Welcome to Flutter&#39;,\n    home: Scaffold(\n        appBar: AppBar(//App顶栏：\n        title: const Text(&#39;my_app&#39;),//标题：文本（&quot;my_app&quot;）\n        ),\n        body: Center(//修改body元素：居中显示\n        child: Text(word_Pair.asPascalCase),//文本(word_paird的随机英文并使用pascalcase进行大驼峰命名法重命名)\n        ),\n    ),\n    );\n&#125;\n</code></pre>\n<p>实现如下效果：<br><img src=\"https://flutter.cn/assets/images/docs/get-started/ios/step2.png\"></p>\n<h3 id=\"添加一个statefull-widget\"><a href=\"#添加一个statefull-widget\" class=\"headerlink\" title=\"添加一个statefull widget\"></a>添加一个statefull widget</h3><p><strong>dart.main末尾添加以下代码</strong></p>\n<pre><code>//新建类randomwords 继承自statefullwidget\nclass RandomWords extends StatefulWidget &#123;\n    const RandomWords(&#123; Key? key &#125;) : super(key: key);\n    //函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n    //重写_RandomWordState类的createState函数 = _RandomWordsState()函数；\n    @override\n    _RandomWordsState createState() =&gt; _RandomWordsState();\n&#125;\n//新建类——randomwordsstate 继承自 state&lt;泛型 RandomWords&gt;\nclass _RandomWordsState extends State&lt;RandomWords&gt; &#123;\n//重写 build函数\n@override\nWidget build(BuildContext context) &#123;\n        final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n        return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"创建一个无限滚动的-ListView\"><a href=\"#创建一个无限滚动的-ListView\" class=\"headerlink\" title=\"创建一个无限滚动的 ListView\"></a>创建一个无限滚动的 ListView</h3><p><strong>修改dart.main</strong><br><strong>向 _RandomWordsState 类中添加一个 _suggestions 列表以保存建议的单词对，同时，添加一个 _biggerFont 变量来增大字体大小</strong></p>\n<pre><code>    class _RandomWordsState extends State&lt;RandomWords&gt; &#123;\n        final _suggestions = &lt;WordPair&gt;[];//新增数组_suggestions数据 泛型为WordPair\n        final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n        // ···\n    &#125;\n\n向 _RandomWordsState 类的 build 方法添加 ListView.builder\n在 _RandomWordsState 中的 itemBuilder 里添加 ListTile 函数\nclass _RandomWordsState extends State&lt;RandomWords&gt; &#123;\nfinal _suggestions = &lt;WordPair&gt;[];//新增数组_suggestions数据 泛型为WordPair\nfinal _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n//重写 build函数\n@override\nWidget build(BuildContext context) &#123;\n    final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n    // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n    return ListView.builder(//返回列表显示\n    padding: const EdgeInsets.all(16.0),//边距16.0\n    //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距\n    itemBuilder: /*1*/ (context, i)&#123;//参数：连接,迭代器i（从0开始);每调用一次会自增\n        //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。\n        //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数\n        if (i.isOdd) return const Divider();/*2*/\n        //如果 i增加了：返回divider\n        /*\n        Divider是一个分割线控件\n            height：是控件的高，并不是线的高度，绘制的线居中。\n            thickness：线的高度。\n            indent：分割线前面空白区域。\n            endIndent：分割线后面空白区域。\n        默认为浅灰色分隔线\n        */\n\n        final index = i ~/ 2; /*3*/\n        //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。\n        if (index &gt;= _suggestions.length)&#123;//如果 索引小于等于 _suggestions的长度\n        _suggestions.addAll(generateWordPairs().take(10));/*4*/\n        //生成10个单词并增加到_suggestions数据内\n        &#125;\n        return ListTile(//返回列表\n        title: Text(//标题为文本\n            _suggestions[index].asPascalCase,\n            //_suggestions[索引].大驼峰命名\n            style: _biggerFont,\n            //样式为 定义好的 16.0\n        )\n        );\n    &#125;,\n    );\n&#125;\n&#125;\n\n//新建类randomwords 继承自statefullwidget\nclass RandomWords extends StatefulWidget &#123;\nconst RandomWords(&#123; Key? key &#125;) : super(key: key);\n//函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n//重写_RandomWordState类的createState函数 = _RandomWordsState()函数；\n@override\n_RandomWordsState createState() =&gt; _RandomWordsState();\n&#125;\n</code></pre>\n<p><strong>更新 _RandomWordsState 的 build() 方法以使用_buildSuggestions()</strong></p>\n<pre><code>//新建类——randomwordsstate 继承自 state&lt;泛型 RandomWords&gt;\nclass _RandomWordsState extends State&lt;RandomWords&gt; &#123;\nfinal _suggestions = &lt;WordPair&gt;[];//新增数组_suggestions数据 泛型为WordPair\nfinal _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n//重写 build函数\n@override\nWidget build(BuildContext context) &#123;\n    // final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n    // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n    return Scaffold(\n    appBar: AppBar(\n        title: const Text(&#39;Startup Name Generator&#39;),\n    ),\n    body: ListView.builder(//返回列表显示\n    padding: const EdgeInsets.all(16.0),//边距16.0\n    //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距\n    itemBuilder: /*1*/ (context, i)&#123;//参数：连接,迭代器i（从0开始);每调用一次会自增\n        //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。\n        //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数\n        if (i.isOdd) return const Divider();/*2*/\n        //如果 i增加了：返回divider\n        /*\n        Divider是一个分割线控件\n            height：是控件的高，并不是线的高度，绘制的线居中。\n            thickness：线的高度。\n            indent：分割线前面空白区域。\n            endIndent：分割线后面空白区域。\n        默认为浅灰色分隔线\n        */\n\n        final index = i ~/ 2; /*3*/\n        //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。\n        if (index &gt;= _suggestions.length)&#123;//如果 索引小于等于 _suggestions的长度\n        _suggestions.addAll(generateWordPairs().take(10));/*4*/\n        //生成10个单词并增加到_suggestions数据内\n        &#125;\n        return ListTile(//返回列表\n        title: Text(//标题为文本\n            _suggestions[index].asPascalCase,\n            //_suggestions[索引].大驼峰命名\n            style: _biggerFont,\n            //样式为 定义好的 16.0\n        )\n        );\n    &#125;,\n    ),\n    );\n&#125;\n&#125;\n</code></pre>\n<h3 id=\"更新-MyApp-的-build-方法，修改-title-的值来改变标题，修改-home-的值为-RandomWords-widget\"><a href=\"#更新-MyApp-的-build-方法，修改-title-的值来改变标题，修改-home-的值为-RandomWords-widget\" class=\"headerlink\" title=\"更新 MyApp 的 build() 方法，修改 title 的值来改变标题，修改 home 的值为 RandomWords widget\"></a>更新 MyApp 的 build() 方法，修改 title 的值来改变标题，修改 home 的值为 RandomWords widget</h3><pre><code>//创建myapp类并继承自StatlessWidget组件\nclass MyApp extends StatelessWidget &#123;\nconst MyApp(&#123;Key? key&#125;) : super(key: key);\n//进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n//重写部件 build\n@override\nWidget build(BuildContext context) &#123; //传入参数BuildContext context\n    return const MaterialApp(//返回 重写后的app\n    title: &#39;Startup Name Generator&#39;,\n    home: RandomWords(),\n    );\n&#125;\n&#125;\n</code></pre>\n<p>最终效果如下：<br><img src=\"https://flutter.cn/assets/images/docs/get-started/ios/step4-infinite-list.png\"></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://tva2.sinaimg.cn/large/0072Vf1pgy1foxkjdzgusj31hc0u0nfc.jpg\" alt=\"我的第一个flutter应用\"></p>","more":"<h1 id=\"day-2-我的第一个flutter应用\"><a href=\"#day-2-我的第一个flutter应用\" class=\"headerlink\" title=\"day 2 我的第一个flutter应用\"></a>day 2 我的第一个flutter应用</h1><p>今天花了几个小时时间终于将flutter环境处理好了<br>于是开始动手写我的一个flutter项目<br><a href=\"https://flutter.cn/docs/get-started/codelab\">参照flutter中文官网</a>  </p>\n<h3 id=\"首先\"><a href=\"#首先\" class=\"headerlink\" title=\"首先\"></a>首先</h3><p>在android studio创建项目<br>create new flutter project -&gt; flutter -&gt; 填写fluttersdk地址 -&gt; 填写项目名字 -&gt; next -&gt; finish 创建完成</p>\n<h3 id=\"修改main-dart\"><a href=\"#修改main-dart\" class=\"headerlink\" title=\"修改main.dart\"></a>修改main.dart</h3><pre><code>import &#39;package:flutter/material.dart&#39;;\n//引入flutter下的material包\n\nvoid main() &#123;\nrunApp(const MyApp());\n&#125;\n//声明入口文件\n\n//创建myapp类并继承自StatlessWidget组件\nclass MyApp extends StatelessWidget &#123;\nconst MyApp(&#123;Key? key&#125;) : super(key: key);\n//进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n//重写部件 build\n@override\nWidget build(BuildContext context) &#123; //传入参数BuildContext context\n    return MaterialApp(//返回 重写后的app\n    title: &#39;Welcome to Flutter&#39;,\n    home: Scaffold(\n        appBar: AppBar(//App顶栏：\n        title: const Text(&#39;my_app&#39;),//标题：文本（&quot;my_app&quot;）\n        ),\n        body: const Center(//修改body元素：常量 居中\n        child: Text(&#39;Hello World&#39;),//子元素：文本(&quot;Hello World&quot;)\n        ),\n    ),\n    );\n&#125;\n&#125;\n</code></pre>\n<p>实现如下效果：<br><img src=\"https://flutter.cn/assets/images/docs/get-started/ios/hello-world.png\"></p>\n<h3 id=\"导入包\"><a href=\"#导入包\" class=\"headerlink\" title=\"导入包\"></a>导入包</h3><p>包介绍：english_words<br>包含数千个最常用的英文单词以及一些实用功能。<br>在项目目录执行:<br>    flutter pub add english_words</p>\n<p>android studio打开pubspec.yml会提示pub get<br>类似nodejs的npm install安装依赖</p>\n<p>导入<br>打开main.dart  </p>\n<pre><code>import &#39;package:english_words/english_words.dart&#39;;\n//导入english_words包 未使用的包呈现灰色字体\n</code></pre>\n<p>**调用pair_words  **</p>\n<pre><code>//重写部件 build\n@override\nWidget build(BuildContext context) &#123; //传入参数BuildContext context\n    final word_Pair = WordPair.random();//声明变量 word Pair = wordpaird的random函数随机生成英文\n    return MaterialApp(//返回 重写后的app\n    title: &#39;Welcome to Flutter&#39;,\n    home: Scaffold(\n        appBar: AppBar(//App顶栏：\n        title: const Text(&#39;my_app&#39;),//标题：文本（&quot;my_app&quot;）\n        ),\n        body: Center(//修改body元素：居中显示\n        child: Text(word_Pair.asPascalCase),//文本(word_paird的随机英文并使用pascalcase进行大驼峰命名法重命名)\n        ),\n    ),\n    );\n&#125;\n</code></pre>\n<p>实现如下效果：<br><img src=\"https://flutter.cn/assets/images/docs/get-started/ios/step2.png\"></p>\n<h3 id=\"添加一个statefull-widget\"><a href=\"#添加一个statefull-widget\" class=\"headerlink\" title=\"添加一个statefull widget\"></a>添加一个statefull widget</h3><p><strong>dart.main末尾添加以下代码</strong></p>\n<pre><code>//新建类randomwords 继承自statefullwidget\nclass RandomWords extends StatefulWidget &#123;\n    const RandomWords(&#123; Key? key &#125;) : super(key: key);\n    //函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n    //重写_RandomWordState类的createState函数 = _RandomWordsState()函数；\n    @override\n    _RandomWordsState createState() =&gt; _RandomWordsState();\n&#125;\n//新建类——randomwordsstate 继承自 state&lt;泛型 RandomWords&gt;\nclass _RandomWordsState extends State&lt;RandomWords&gt; &#123;\n//重写 build函数\n@override\nWidget build(BuildContext context) &#123;\n        final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n        return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"创建一个无限滚动的-ListView\"><a href=\"#创建一个无限滚动的-ListView\" class=\"headerlink\" title=\"创建一个无限滚动的 ListView\"></a>创建一个无限滚动的 ListView</h3><p><strong>修改dart.main</strong><br><strong>向 _RandomWordsState 类中添加一个 _suggestions 列表以保存建议的单词对，同时，添加一个 _biggerFont 变量来增大字体大小</strong></p>\n<pre><code>    class _RandomWordsState extends State&lt;RandomWords&gt; &#123;\n        final _suggestions = &lt;WordPair&gt;[];//新增数组_suggestions数据 泛型为WordPair\n        final _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n        // ···\n    &#125;\n\n向 _RandomWordsState 类的 build 方法添加 ListView.builder\n在 _RandomWordsState 中的 itemBuilder 里添加 ListTile 函数\nclass _RandomWordsState extends State&lt;RandomWords&gt; &#123;\nfinal _suggestions = &lt;WordPair&gt;[];//新增数组_suggestions数据 泛型为WordPair\nfinal _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n//重写 build函数\n@override\nWidget build(BuildContext context) &#123;\n    final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n    // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n    return ListView.builder(//返回列表显示\n    padding: const EdgeInsets.all(16.0),//边距16.0\n    //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距\n    itemBuilder: /*1*/ (context, i)&#123;//参数：连接,迭代器i（从0开始);每调用一次会自增\n        //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。\n        //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数\n        if (i.isOdd) return const Divider();/*2*/\n        //如果 i增加了：返回divider\n        /*\n        Divider是一个分割线控件\n            height：是控件的高，并不是线的高度，绘制的线居中。\n            thickness：线的高度。\n            indent：分割线前面空白区域。\n            endIndent：分割线后面空白区域。\n        默认为浅灰色分隔线\n        */\n\n        final index = i ~/ 2; /*3*/\n        //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。\n        if (index &gt;= _suggestions.length)&#123;//如果 索引小于等于 _suggestions的长度\n        _suggestions.addAll(generateWordPairs().take(10));/*4*/\n        //生成10个单词并增加到_suggestions数据内\n        &#125;\n        return ListTile(//返回列表\n        title: Text(//标题为文本\n            _suggestions[index].asPascalCase,\n            //_suggestions[索引].大驼峰命名\n            style: _biggerFont,\n            //样式为 定义好的 16.0\n        )\n        );\n    &#125;,\n    );\n&#125;\n&#125;\n\n//新建类randomwords 继承自statefullwidget\nclass RandomWords extends StatefulWidget &#123;\nconst RandomWords(&#123; Key? key &#125;) : super(key: key);\n//函数初始化 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n//重写_RandomWordState类的createState函数 = _RandomWordsState()函数；\n@override\n_RandomWordsState createState() =&gt; _RandomWordsState();\n&#125;\n</code></pre>\n<p><strong>更新 _RandomWordsState 的 build() 方法以使用_buildSuggestions()</strong></p>\n<pre><code>//新建类——randomwordsstate 继承自 state&lt;泛型 RandomWords&gt;\nclass _RandomWordsState extends State&lt;RandomWords&gt; &#123;\nfinal _suggestions = &lt;WordPair&gt;[];//新增数组_suggestions数据 泛型为WordPair\nfinal _biggerFont = const TextStyle(fontSize: 18.0);//新建变量 _biggerFont 定义 文本样式（字体大小 18.0）\n//重写 build函数\n@override\nWidget build(BuildContext context) &#123;\n    // final wordPair = WordPair.random();//wordPair = 随机生成英文单词\n    // return Text(wordPair.asPascalCase);//返回文本 随机生成单词并使用大驼峰命名法\n    return Scaffold(\n    appBar: AppBar(\n        title: const Text(&#39;Startup Name Generator&#39;),\n    ),\n    body: ListView.builder(//返回列表显示\n    padding: const EdgeInsets.all(16.0),//边距16.0\n    //EdgeInsets对象：为四个方向设定固定的边距 .all为所有方向设置边距\n    itemBuilder: /*1*/ (context, i)&#123;//参数：连接,迭代器i（从0开始);每调用一次会自增\n        //每次建议的单词对都会让其递增两次，一次是 ListTile，另一次是 Divider。它用于创建一个在用户滚动时候无限增长的列表。\n        //ListView 类提供了一个名为 itemBuilder 的 builder 属性，这是一个工厂匿名回调函数，接受两个参数\n        if (i.isOdd) return const Divider();/*2*/\n        //如果 i增加了：返回divider\n        /*\n        Divider是一个分割线控件\n            height：是控件的高，并不是线的高度，绘制的线居中。\n            thickness：线的高度。\n            indent：分割线前面空白区域。\n            endIndent：分割线后面空白区域。\n        默认为浅灰色分隔线\n        */\n\n        final index = i ~/ 2; /*3*/\n        //定义 索引 = i / 2 向下取整 计算出 ListView 中减去分隔线后的实际单词对数量。\n        if (index &gt;= _suggestions.length)&#123;//如果 索引小于等于 _suggestions的长度\n        _suggestions.addAll(generateWordPairs().take(10));/*4*/\n        //生成10个单词并增加到_suggestions数据内\n        &#125;\n        return ListTile(//返回列表\n        title: Text(//标题为文本\n            _suggestions[index].asPascalCase,\n            //_suggestions[索引].大驼峰命名\n            style: _biggerFont,\n            //样式为 定义好的 16.0\n        )\n        );\n    &#125;,\n    ),\n    );\n&#125;\n&#125;\n</code></pre>\n<h3 id=\"更新-MyApp-的-build-方法，修改-title-的值来改变标题，修改-home-的值为-RandomWords-widget\"><a href=\"#更新-MyApp-的-build-方法，修改-title-的值来改变标题，修改-home-的值为-RandomWords-widget\" class=\"headerlink\" title=\"更新 MyApp 的 build() 方法，修改 title 的值来改变标题，修改 home 的值为 RandomWords widget\"></a>更新 MyApp 的 build() 方法，修改 title 的值来改变标题，修改 home 的值为 RandomWords widget</h3><pre><code>//创建myapp类并继承自StatlessWidget组件\nclass MyApp extends StatelessWidget &#123;\nconst MyApp(&#123;Key? key&#125;) : super(key: key);\n//进行函数构造 Flutter 框架中 Widget 構造函數都提供了Key 作為可選參數。\n\n//重写部件 build\n@override\nWidget build(BuildContext context) &#123; //传入参数BuildContext context\n    return const MaterialApp(//返回 重写后的app\n    title: &#39;Startup Name Generator&#39;,\n    home: RandomWords(),\n    );\n&#125;\n&#125;\n</code></pre>\n<p>最终效果如下：<br><img src=\"https://flutter.cn/assets/images/docs/get-started/ios/step4-infinite-list.png\"></p>"},{"title":"flutter study day 3 认识StatelessWidget基本组件","date":"2022-04-25T11:38:24.000Z","_content":"![认识StatelessWidget基本组件](https://tva4.sinaimg.cn/large/0072Vf1pgy1foxkcpa9qqj31kw0w07sa.jpg)\n<!-- more -->\n\nStateless Widget的基本组件\n========================\n\nStateless Widget的特点：\n---------------------\n**特点：不依赖自身状态，不必渲染自己**\n\n**Contrainer 容器**\n\n约束子节点，居中，内边距、宽高、颜色、背景、装饰器\n**Text 文本** 显示文本\n\n使用方法：Text(“文本内容”),\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/2798CF63-4C43-443C-B013-792DA7DE14F4_2/nSAJMHtokxoXfG7hlqwxHyOJI8MhcnUKpMdiHM9gzewz/Image.png)\n\n**Icon 图标** icon库里面有多个flutter原生图标可以调用\n\n使用方法：Icons(Icons.android,Colors.color.blue,)\n\n将会显示一个绿色的安卓图标\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/471CDCE8-0AD0-46EF-A5AB-C688D1F384AB_2/qpaQYGNARNK0PBtFXNix4UT4Rlyp0bT1WZuiMv9VwCsz/Image.png)\n\n**CloseButton 关闭按钮** 动作按钮\n\nCloseButton(点击后将触发什么…),\n\n**BackButton 返回按钮** 动作按钮\n\nBackButton(点击后将触发什么…),\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/9897418F-2DAF-43C0-8B12-CDA5EF7F52DD_2/OhpQFdsX7n83TtHGYmwrxSswnNJr4KO7xbx4yEj7M8Az/Image.png)\n\n**Chip 材料设计**\n\nChip(),\n\n有多个属性，可以设置avatar：图标\n\n设置padding边距 margin边距 插入text文字内容等\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/F8EBB7BB-A486-47CE-851F-FDCDE3540297_2/wZUawMCyY6yPN3ZYqViGpdlbtrvxFWdJoKG5n7H8XB4z/Image.png)\n\n**Divider 分隔线**\n\nDivider(),\n\n多个属性 可以设置容器高度、侧边距 分隔线显色等\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/4ED58CF5-842F-4F6B-8DE7-180E90B0D3B5_2/AuL1Ib3PGO41xxGBB7p7BzMMQMDfvRv05r4gwIimMN4z/Image.png)\n\n**Card 卡片**\n\nCard(),\n\n多个属性，可设置color颜色、elevator内间距、margin外边距、child子元素设置padding、显示文本等\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/E911BD5B-B48C-49CC-97A1-01197E7544EF_2/gJ9TXuaxoxhw6IuIlblUgprJyUmIlddZhdi2NtoCcmUz/Image.png)\n\n**AlertDialog 弹框**\n\nAlertDialog(),\n\ntitle: Text(“设置弹窗标题”),\n\ncontent(‘设置弹窗内容’)，\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/4BB0FF3A-5E98-4275-B0B9-169EB71E64D9_2/4uFhNQKJlkZIGAqz3LeBARhjlyTIpy0Q9kmJugIbbTwz/Image.png)\n\n代码示例：\n\n```other\nimport 'package:flutter/material.dart';\n\nclass LessGroupPage extends StatelessWidget {\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Stateless基础组件',\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: Scaffold(\n        appBar: AppBar(\n          title: const Text(\"Stateless基础组件\"),//标题\n        ),\n        body: Container(//容器组件\n          decoration: const BoxDecoration(color: Colors.white10),//装饰器\n          alignment: Alignment.center,//居中显示\n          child: Column(\n            children: const <Widget>[\n              Text(//文本组件\n                \"Text\",\n                style: TextStyle(fontSize: 25),//显示文本，字体大小25\n              ),\n              Icon(//图标组件\n                Icons.android,//安卓图标\n                size: 50,//大小50\n                color: Colors.green,//图标颜色绿色\n              ),\n              CloseButton(),//关闭按钮\n              BackButton(),//返回按钮\n              Chip(//内容元素组件\n                avatar: Icon(Icons.apple),//元素图标 苹果\n                label: Text(\"hello World!\"),//元素内文本\n              ),\n              Divider(//分隔线\n                height: 20,//容器高度\n                indent: 10,//左侧间距\n                color: Colors.grey,//分隔线颜色黑色\n              ),\n              Card(//卡片组件\n                color: Colors.blue,//卡片颜色蓝色\n                elevation: 5,//内边距 5\n                margin: EdgeInsets.all(15),//所有外边距15\n                child: Padding(//添加一个子元素 Padding\n                  padding: EdgeInsets.all(8.0),//设置所有外边距 8\n                  child: Text(//显示文本\n                    'fuck me!',\n                  ),\n                ),\n              ),\n              AlertDialog(//弹窗组件\n                title: Text('基础组件之AlertDialog弹窗'),//弹窗标题\n                content: Text('good job!'),//弹窗内容\n              )\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\n```\n\n\n编译后样例：\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/FC300307-A7C5-4D64-9B03-4B10FECFC65D_2/iarHFJUEsVz9DHNlwfYxb1q4ivbVAiqx4qUjXmzrMokz/Image.png)\n","source":"_posts/flutter-study-day-3-认识StatelessWidget基本组件.md","raw":"---\ntitle: flutter study day 3 认识StatelessWidget基本组件\ndate: 2022-04-25 19:38:24\ntags: [flutter]\ncategories: flutter\n---\n![认识StatelessWidget基本组件](https://tva4.sinaimg.cn/large/0072Vf1pgy1foxkcpa9qqj31kw0w07sa.jpg)\n<!-- more -->\n\nStateless Widget的基本组件\n========================\n\nStateless Widget的特点：\n---------------------\n**特点：不依赖自身状态，不必渲染自己**\n\n**Contrainer 容器**\n\n约束子节点，居中，内边距、宽高、颜色、背景、装饰器\n**Text 文本** 显示文本\n\n使用方法：Text(“文本内容”),\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/2798CF63-4C43-443C-B013-792DA7DE14F4_2/nSAJMHtokxoXfG7hlqwxHyOJI8MhcnUKpMdiHM9gzewz/Image.png)\n\n**Icon 图标** icon库里面有多个flutter原生图标可以调用\n\n使用方法：Icons(Icons.android,Colors.color.blue,)\n\n将会显示一个绿色的安卓图标\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/471CDCE8-0AD0-46EF-A5AB-C688D1F384AB_2/qpaQYGNARNK0PBtFXNix4UT4Rlyp0bT1WZuiMv9VwCsz/Image.png)\n\n**CloseButton 关闭按钮** 动作按钮\n\nCloseButton(点击后将触发什么…),\n\n**BackButton 返回按钮** 动作按钮\n\nBackButton(点击后将触发什么…),\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/9897418F-2DAF-43C0-8B12-CDA5EF7F52DD_2/OhpQFdsX7n83TtHGYmwrxSswnNJr4KO7xbx4yEj7M8Az/Image.png)\n\n**Chip 材料设计**\n\nChip(),\n\n有多个属性，可以设置avatar：图标\n\n设置padding边距 margin边距 插入text文字内容等\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/F8EBB7BB-A486-47CE-851F-FDCDE3540297_2/wZUawMCyY6yPN3ZYqViGpdlbtrvxFWdJoKG5n7H8XB4z/Image.png)\n\n**Divider 分隔线**\n\nDivider(),\n\n多个属性 可以设置容器高度、侧边距 分隔线显色等\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/4ED58CF5-842F-4F6B-8DE7-180E90B0D3B5_2/AuL1Ib3PGO41xxGBB7p7BzMMQMDfvRv05r4gwIimMN4z/Image.png)\n\n**Card 卡片**\n\nCard(),\n\n多个属性，可设置color颜色、elevator内间距、margin外边距、child子元素设置padding、显示文本等\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/E911BD5B-B48C-49CC-97A1-01197E7544EF_2/gJ9TXuaxoxhw6IuIlblUgprJyUmIlddZhdi2NtoCcmUz/Image.png)\n\n**AlertDialog 弹框**\n\nAlertDialog(),\n\ntitle: Text(“设置弹窗标题”),\n\ncontent(‘设置弹窗内容’)，\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/4BB0FF3A-5E98-4275-B0B9-169EB71E64D9_2/4uFhNQKJlkZIGAqz3LeBARhjlyTIpy0Q9kmJugIbbTwz/Image.png)\n\n代码示例：\n\n```other\nimport 'package:flutter/material.dart';\n\nclass LessGroupPage extends StatelessWidget {\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Stateless基础组件',\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: Scaffold(\n        appBar: AppBar(\n          title: const Text(\"Stateless基础组件\"),//标题\n        ),\n        body: Container(//容器组件\n          decoration: const BoxDecoration(color: Colors.white10),//装饰器\n          alignment: Alignment.center,//居中显示\n          child: Column(\n            children: const <Widget>[\n              Text(//文本组件\n                \"Text\",\n                style: TextStyle(fontSize: 25),//显示文本，字体大小25\n              ),\n              Icon(//图标组件\n                Icons.android,//安卓图标\n                size: 50,//大小50\n                color: Colors.green,//图标颜色绿色\n              ),\n              CloseButton(),//关闭按钮\n              BackButton(),//返回按钮\n              Chip(//内容元素组件\n                avatar: Icon(Icons.apple),//元素图标 苹果\n                label: Text(\"hello World!\"),//元素内文本\n              ),\n              Divider(//分隔线\n                height: 20,//容器高度\n                indent: 10,//左侧间距\n                color: Colors.grey,//分隔线颜色黑色\n              ),\n              Card(//卡片组件\n                color: Colors.blue,//卡片颜色蓝色\n                elevation: 5,//内边距 5\n                margin: EdgeInsets.all(15),//所有外边距15\n                child: Padding(//添加一个子元素 Padding\n                  padding: EdgeInsets.all(8.0),//设置所有外边距 8\n                  child: Text(//显示文本\n                    'fuck me!',\n                  ),\n                ),\n              ),\n              AlertDialog(//弹窗组件\n                title: Text('基础组件之AlertDialog弹窗'),//弹窗标题\n                content: Text('good job!'),//弹窗内容\n              )\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\n```\n\n\n编译后样例：\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/FC300307-A7C5-4D64-9B03-4B10FECFC65D_2/iarHFJUEsVz9DHNlwfYxb1q4ivbVAiqx4qUjXmzrMokz/Image.png)\n","slug":"flutter-study-day-3-认识StatelessWidget基本组件","published":1,"updated":"2022-05-13T07:57:28.148Z","_id":"cl341xpv80005bwx1aeoz1m0r","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://tva4.sinaimg.cn/large/0072Vf1pgy1foxkcpa9qqj31kw0w07sa.jpg\" alt=\"认识StatelessWidget基本组件\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"Stateless-Widget的基本组件\"><a href=\"#Stateless-Widget的基本组件\" class=\"headerlink\" title=\"Stateless Widget的基本组件\"></a>Stateless Widget的基本组件</h1><h2 id=\"Stateless-Widget的特点：\"><a href=\"#Stateless-Widget的特点：\" class=\"headerlink\" title=\"Stateless Widget的特点：\"></a>Stateless Widget的特点：</h2><p><strong>特点：不依赖自身状态，不必渲染自己</strong></p>\n<p><strong>Contrainer 容器</strong></p>\n<p>约束子节点，居中，内边距、宽高、颜色、背景、装饰器<br><strong>Text 文本</strong> 显示文本</p>\n<p>使用方法：Text(“文本内容”),</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/2798CF63-4C43-443C-B013-792DA7DE14F4_2/nSAJMHtokxoXfG7hlqwxHyOJI8MhcnUKpMdiHM9gzewz/Image.png\" alt=\"image\"></p>\n<p><strong>Icon 图标</strong> icon库里面有多个flutter原生图标可以调用</p>\n<p>使用方法：Icons(Icons.android,Colors.color.blue,)</p>\n<p>将会显示一个绿色的安卓图标</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/471CDCE8-0AD0-46EF-A5AB-C688D1F384AB_2/qpaQYGNARNK0PBtFXNix4UT4Rlyp0bT1WZuiMv9VwCsz/Image.png\" alt=\"image\"></p>\n<p><strong>CloseButton 关闭按钮</strong> 动作按钮</p>\n<p>CloseButton(点击后将触发什么…),</p>\n<p><strong>BackButton 返回按钮</strong> 动作按钮</p>\n<p>BackButton(点击后将触发什么…),</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/9897418F-2DAF-43C0-8B12-CDA5EF7F52DD_2/OhpQFdsX7n83TtHGYmwrxSswnNJr4KO7xbx4yEj7M8Az/Image.png\" alt=\"image\"></p>\n<p><strong>Chip 材料设计</strong></p>\n<p>Chip(),</p>\n<p>有多个属性，可以设置avatar：图标</p>\n<p>设置padding边距 margin边距 插入text文字内容等</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/F8EBB7BB-A486-47CE-851F-FDCDE3540297_2/wZUawMCyY6yPN3ZYqViGpdlbtrvxFWdJoKG5n7H8XB4z/Image.png\" alt=\"image\"></p>\n<p><strong>Divider 分隔线</strong></p>\n<p>Divider(),</p>\n<p>多个属性 可以设置容器高度、侧边距 分隔线显色等</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/4ED58CF5-842F-4F6B-8DE7-180E90B0D3B5_2/AuL1Ib3PGO41xxGBB7p7BzMMQMDfvRv05r4gwIimMN4z/Image.png\" alt=\"image\"></p>\n<p><strong>Card 卡片</strong></p>\n<p>Card(),</p>\n<p>多个属性，可设置color颜色、elevator内间距、margin外边距、child子元素设置padding、显示文本等</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/E911BD5B-B48C-49CC-97A1-01197E7544EF_2/gJ9TXuaxoxhw6IuIlblUgprJyUmIlddZhdi2NtoCcmUz/Image.png\" alt=\"image\"></p>\n<p><strong>AlertDialog 弹框</strong></p>\n<p>AlertDialog(),</p>\n<p>title: Text(“设置弹窗标题”),</p>\n<p>content(‘设置弹窗内容’)，</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/4BB0FF3A-5E98-4275-B0B9-169EB71E64D9_2/4uFhNQKJlkZIGAqz3LeBARhjlyTIpy0Q9kmJugIbbTwz/Image.png\" alt=\"image\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class LessGroupPage extends StatelessWidget &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &#x27;Stateless基础组件&#x27;,</span><br><span class=\"line\">      theme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.blue,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: const Text(&quot;Stateless基础组件&quot;),//标题</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: Container(//容器组件</span><br><span class=\"line\">          decoration: const BoxDecoration(color: Colors.white10),//装饰器</span><br><span class=\"line\">          alignment: Alignment.center,//居中显示</span><br><span class=\"line\">          child: Column(</span><br><span class=\"line\">            children: const &lt;Widget&gt;[</span><br><span class=\"line\">              Text(//文本组件</span><br><span class=\"line\">                &quot;Text&quot;,</span><br><span class=\"line\">                style: TextStyle(fontSize: 25),//显示文本，字体大小25</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Icon(//图标组件</span><br><span class=\"line\">                Icons.android,//安卓图标</span><br><span class=\"line\">                size: 50,//大小50</span><br><span class=\"line\">                color: Colors.green,//图标颜色绿色</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              CloseButton(),//关闭按钮</span><br><span class=\"line\">              BackButton(),//返回按钮</span><br><span class=\"line\">              Chip(//内容元素组件</span><br><span class=\"line\">                avatar: Icon(Icons.apple),//元素图标 苹果</span><br><span class=\"line\">                label: Text(&quot;hello World!&quot;),//元素内文本</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Divider(//分隔线</span><br><span class=\"line\">                height: 20,//容器高度</span><br><span class=\"line\">                indent: 10,//左侧间距</span><br><span class=\"line\">                color: Colors.grey,//分隔线颜色黑色</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Card(//卡片组件</span><br><span class=\"line\">                color: Colors.blue,//卡片颜色蓝色</span><br><span class=\"line\">                elevation: 5,//内边距 5</span><br><span class=\"line\">                margin: EdgeInsets.all(15),//所有外边距15</span><br><span class=\"line\">                child: Padding(//添加一个子元素 Padding</span><br><span class=\"line\">                  padding: EdgeInsets.all(8.0),//设置所有外边距 8</span><br><span class=\"line\">                  child: Text(//显示文本</span><br><span class=\"line\">                    &#x27;fuck me!&#x27;,</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                ),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              AlertDialog(//弹窗组件</span><br><span class=\"line\">                title: Text(&#x27;基础组件之AlertDialog弹窗&#x27;),//弹窗标题</span><br><span class=\"line\">                content: Text(&#x27;good job!&#x27;),//弹窗内容</span><br><span class=\"line\">              )</span><br><span class=\"line\">            ],</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>编译后样例：</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/FC300307-A7C5-4D64-9B03-4B10FECFC65D_2/iarHFJUEsVz9DHNlwfYxb1q4ivbVAiqx4qUjXmzrMokz/Image.png\" alt=\"image\"></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://tva4.sinaimg.cn/large/0072Vf1pgy1foxkcpa9qqj31kw0w07sa.jpg\" alt=\"认识StatelessWidget基本组件\"></p>","more":"<h1 id=\"Stateless-Widget的基本组件\"><a href=\"#Stateless-Widget的基本组件\" class=\"headerlink\" title=\"Stateless Widget的基本组件\"></a>Stateless Widget的基本组件</h1><h2 id=\"Stateless-Widget的特点：\"><a href=\"#Stateless-Widget的特点：\" class=\"headerlink\" title=\"Stateless Widget的特点：\"></a>Stateless Widget的特点：</h2><p><strong>特点：不依赖自身状态，不必渲染自己</strong></p>\n<p><strong>Contrainer 容器</strong></p>\n<p>约束子节点，居中，内边距、宽高、颜色、背景、装饰器<br><strong>Text 文本</strong> 显示文本</p>\n<p>使用方法：Text(“文本内容”),</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/2798CF63-4C43-443C-B013-792DA7DE14F4_2/nSAJMHtokxoXfG7hlqwxHyOJI8MhcnUKpMdiHM9gzewz/Image.png\" alt=\"image\"></p>\n<p><strong>Icon 图标</strong> icon库里面有多个flutter原生图标可以调用</p>\n<p>使用方法：Icons(Icons.android,Colors.color.blue,)</p>\n<p>将会显示一个绿色的安卓图标</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/471CDCE8-0AD0-46EF-A5AB-C688D1F384AB_2/qpaQYGNARNK0PBtFXNix4UT4Rlyp0bT1WZuiMv9VwCsz/Image.png\" alt=\"image\"></p>\n<p><strong>CloseButton 关闭按钮</strong> 动作按钮</p>\n<p>CloseButton(点击后将触发什么…),</p>\n<p><strong>BackButton 返回按钮</strong> 动作按钮</p>\n<p>BackButton(点击后将触发什么…),</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/9897418F-2DAF-43C0-8B12-CDA5EF7F52DD_2/OhpQFdsX7n83TtHGYmwrxSswnNJr4KO7xbx4yEj7M8Az/Image.png\" alt=\"image\"></p>\n<p><strong>Chip 材料设计</strong></p>\n<p>Chip(),</p>\n<p>有多个属性，可以设置avatar：图标</p>\n<p>设置padding边距 margin边距 插入text文字内容等</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/F8EBB7BB-A486-47CE-851F-FDCDE3540297_2/wZUawMCyY6yPN3ZYqViGpdlbtrvxFWdJoKG5n7H8XB4z/Image.png\" alt=\"image\"></p>\n<p><strong>Divider 分隔线</strong></p>\n<p>Divider(),</p>\n<p>多个属性 可以设置容器高度、侧边距 分隔线显色等</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/4ED58CF5-842F-4F6B-8DE7-180E90B0D3B5_2/AuL1Ib3PGO41xxGBB7p7BzMMQMDfvRv05r4gwIimMN4z/Image.png\" alt=\"image\"></p>\n<p><strong>Card 卡片</strong></p>\n<p>Card(),</p>\n<p>多个属性，可设置color颜色、elevator内间距、margin外边距、child子元素设置padding、显示文本等</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/E911BD5B-B48C-49CC-97A1-01197E7544EF_2/gJ9TXuaxoxhw6IuIlblUgprJyUmIlddZhdi2NtoCcmUz/Image.png\" alt=\"image\"></p>\n<p><strong>AlertDialog 弹框</strong></p>\n<p>AlertDialog(),</p>\n<p>title: Text(“设置弹窗标题”),</p>\n<p>content(‘设置弹窗内容’)，</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/4BB0FF3A-5E98-4275-B0B9-169EB71E64D9_2/4uFhNQKJlkZIGAqz3LeBARhjlyTIpy0Q9kmJugIbbTwz/Image.png\" alt=\"image\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class LessGroupPage extends StatelessWidget &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &#x27;Stateless基础组件&#x27;,</span><br><span class=\"line\">      theme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.blue,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: const Text(&quot;Stateless基础组件&quot;),//标题</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: Container(//容器组件</span><br><span class=\"line\">          decoration: const BoxDecoration(color: Colors.white10),//装饰器</span><br><span class=\"line\">          alignment: Alignment.center,//居中显示</span><br><span class=\"line\">          child: Column(</span><br><span class=\"line\">            children: const &lt;Widget&gt;[</span><br><span class=\"line\">              Text(//文本组件</span><br><span class=\"line\">                &quot;Text&quot;,</span><br><span class=\"line\">                style: TextStyle(fontSize: 25),//显示文本，字体大小25</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Icon(//图标组件</span><br><span class=\"line\">                Icons.android,//安卓图标</span><br><span class=\"line\">                size: 50,//大小50</span><br><span class=\"line\">                color: Colors.green,//图标颜色绿色</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              CloseButton(),//关闭按钮</span><br><span class=\"line\">              BackButton(),//返回按钮</span><br><span class=\"line\">              Chip(//内容元素组件</span><br><span class=\"line\">                avatar: Icon(Icons.apple),//元素图标 苹果</span><br><span class=\"line\">                label: Text(&quot;hello World!&quot;),//元素内文本</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Divider(//分隔线</span><br><span class=\"line\">                height: 20,//容器高度</span><br><span class=\"line\">                indent: 10,//左侧间距</span><br><span class=\"line\">                color: Colors.grey,//分隔线颜色黑色</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Card(//卡片组件</span><br><span class=\"line\">                color: Colors.blue,//卡片颜色蓝色</span><br><span class=\"line\">                elevation: 5,//内边距 5</span><br><span class=\"line\">                margin: EdgeInsets.all(15),//所有外边距15</span><br><span class=\"line\">                child: Padding(//添加一个子元素 Padding</span><br><span class=\"line\">                  padding: EdgeInsets.all(8.0),//设置所有外边距 8</span><br><span class=\"line\">                  child: Text(//显示文本</span><br><span class=\"line\">                    &#x27;fuck me!&#x27;,</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                ),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              AlertDialog(//弹窗组件</span><br><span class=\"line\">                title: Text(&#x27;基础组件之AlertDialog弹窗&#x27;),//弹窗标题</span><br><span class=\"line\">                content: Text(&#x27;good job!&#x27;),//弹窗内容</span><br><span class=\"line\">              )</span><br><span class=\"line\">            ],</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>编译后样例：</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/252A0C58-AC05-42C0-B5C0-D63E1992C0D1/FC300307-A7C5-4D64-9B03-4B10FECFC65D_2/iarHFJUEsVz9DHNlwfYxb1q4ivbVAiqx4qUjXmzrMokz/Image.png\" alt=\"image\"></p>"},{"title":"flutter study day 4 认识StatelessFul基本组件","date":"2022-04-27T10:19:57.000Z","_content":"![认识StatelessFul基本组件](https://tva1.sinaimg.cn/large/a15b4afegy1fmvj3g29fbj21hc0u0akh.jpg)\n<!-- more -->\n\nStatelessFul基本组件\n======================\n\n可以改变页面状态 这是statelesswidget无状态的组件做不到的\n\n**MaterialApp 材料设计的App组件**\n\n通常放在根节点\n\ntitle:标题\n\ntheme:主题\n\nhome：整个页面\n\n**Scaffold**\n\nflutter封装的带有AppBar&底部导航栏&侧边栏等效果的组件\n\n**BottomNavigationBar底部导航栏**\n\n至少接收两个item(icon默认图标状态,activeicon激活图标状态)\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/5C5AFAF6-3C50-4B79-A31B-BF00987ADF49_2/ixeOFWrNjl1CMsFUVDoFEtbRz7rd4F2g1YnAsqRuMS8z/Image.png)\n\n**FloatingActionButton 悬浮按钮**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/28479537-363C-4B23-AFFB-16FBA2546DF5_2/SxXXTDgnxNeMrHyic6atxQ0FcTiRYmTzNhX72Q4f8xMz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/E322A796-D3AC-405E-8BC0-E300B1ACB44F_2/nUJt5JokjAtgctZRK9eu2nQTUkxLvy89WFOs5BHu3qkz/Image.png)\n\n**RefreshIndicator 下拉刷新组件**\n\n必须配合列表使用\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/A2AA3F35-2E46-4EF4-8CF4-02A7FAEC2EA8_2/kaSnxoMGetGdsUAcirNC3cTpWG9gxMLPrvtX8yLigiQz/Image.png)\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/761F63C9-6EF5-45BB-B9FD-56E408A4BC0A_2/7HFFgW7xn2KEgj3qJdfhCZyKtJ64WomsHOeF6XECyvoz/Image.png)\n\n**Image 图片组件**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/3A59317B-753B-4904-BAEB-DA9FF3EEFE6E_2/jbQwyjFbxprsuWO7fsmN5YsDzVCdQuv2vWVFMqQ3bwsz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/5B581BBE-1EF2-4627-9576-D22C6B74AAB9_2/V8hCinl5NBDrTKWzSm4aHmSLdkDYsQEwwJmizJkdJkIz/Image.png)\n\n**TextField 输入框组件**\n\n(可用作登录注册页面)\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/D54EAE6D-EBCD-4812-A67C-CF374DF3536F_2/MQiRwyRKbNQx5pyexA8wNZJd56qtAFXxYpG8XOHI4u0z/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/9C32BC32-47B4-4EFC-8FA2-EA9E9F1399EB_2/vYhq6QqQxYPBkI0xvOgJx69SlUeo8aWtxxR449E5FwAz/Image.png)\n\n**PageView页面预览**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/33E3DE50-E5A0-416C-8C54-AF5033E76FDC_2/Iuu9kMPfHlPZrHPXEnhyRvgBRadutInC52IdBzfKt5cz/Image.png)\n\n实现效果（可左右华东切换）\n\n可用作首页通知公告栏\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/D7B6B634-DBC4-4DC6-A093-98EBB14F12F8_2/TyksPI6mGTg0ksM67jphOayq0fWNzzir1UPj98aRCVEz/Image.png)\n\n完整代码：\n```other\nimport 'package:flutter/material.dart';\n\nclass StatefulGroup extends StatefulWidget {\n  @override\n  State<StatefulGroup> createState() => _StatefulGroupState();\n}\n\nclass _StatefulGroupState extends State<StatefulGroup> {\n  int _currentIndex = 0;//初始化当前选中页面 默认为0\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Stateful基础组件',\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: Scaffold(\n        appBar: AppBar(\n          title: const Text(\"Stateful基础组件\"),//标题\n        ),\n        //底部导航栏\n        bottomNavigationBar: BottomNavigationBar(\n          currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值\n          onTap: (index){//接收一个index，点击的时候会自动切换到该索引\n            setState(() {//使用setState改变初始化的当前索引的值\n              _currentIndex = index;\n            });\n          },\n          items: const [\n            //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个\n          BottomNavigationBarItem(//第一个item\n              icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态\n            activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态\n            label: '首页'//第一个item的显示名称\n          ),\n          BottomNavigationBarItem(//第二个item\n            icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态\n            activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态\n            label: '列表'//第二个item的显示名称\n          ),\n        ],),\n\n        floatingActionButton: const FloatingActionButton(\n          onPressed: null,\n          child: Text('点我'),\n        ),\n        body: _currentIndex==0\n            ?\n            RefreshIndicator(\n                child:\n                ListView(\n                  children: <Widget>[\n                    Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容\n                      decoration: const BoxDecoration(color: Colors.white10),//装饰器\n                      alignment: Alignment.center,//居中显示\n                      child: Column(\n                        children: <Widget>[\n                          Image.network(//插入网络图片\n                            'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                            //设置图片url\n                            height: 300,//高\n                            width: 250,//宽\n                          ),//加载网络图片\n                          const TextField(//文本输入框\n                            decoration: InputDecoration(\n                              contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0\n                              hintText: '请输入',//hintText提示文案\n                              hintStyle: TextStyle(\n                                fontSize: 20,\n                              ),//设置提示文案的样式\n                            ),//使用decoration装饰器 定义文本输入框样式\n                          ),\n                          //PageView页面预览的使用\n                          //使用Container约束大小\n                          Container(\n                            height: 100,\n                            margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10\n                            //设置装饰器\n                            decoration: BoxDecoration(color: Colors.lightBlueAccent),//BoxDecoration设置装饰器背景\n                            //child节点设置pageview\n                            child: PageView(\n                              children: <Widget>[\n                                _item('Page1',Colors.purple),//接收两个参数（标题，颜色）\n                                _item('Page2',Colors.yellow),//接收两个参数（标题，颜色）\n                                _item('Page3',Colors.green),//接收两个参数（标题，颜色）\n                              ],\n                            ),\n                          ),\n                        ],\n                      ),\n                    ),\n                  ],\n                ),\n                onRefresh: _handleRefresh)\n            :\n        Text('列表'),//_currentIndex==0?如果不等于0 显示:后面的内容\n      ),\n    );\n  }\n  Future<Null> _handleRefresh() async{ //asyc设置异步运行\n    await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒\n    return null;//返回一个空值\n  }\n}\n\n_item(String title, Color color) {\n  return Container(//返回一个Container装饰器包裹住\n    alignment: Alignment.center,//设置居中方式 居中\n    decoration: BoxDecoration(\n      color: color,//装饰器背景色等于传入的color参数\n    ),//设置装饰器样式\n    child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),),\n  );\n}\n\n```\n\n","source":"_posts/flutter-study-day-4-认识StatelessFul基本组件.md","raw":"---\ntitle: flutter study day 4 认识StatelessFul基本组件\ndate: 2022-04-27 18:19:57\ntags: [flutter]\ncategories: flutter\n---\n![认识StatelessFul基本组件](https://tva1.sinaimg.cn/large/a15b4afegy1fmvj3g29fbj21hc0u0akh.jpg)\n<!-- more -->\n\nStatelessFul基本组件\n======================\n\n可以改变页面状态 这是statelesswidget无状态的组件做不到的\n\n**MaterialApp 材料设计的App组件**\n\n通常放在根节点\n\ntitle:标题\n\ntheme:主题\n\nhome：整个页面\n\n**Scaffold**\n\nflutter封装的带有AppBar&底部导航栏&侧边栏等效果的组件\n\n**BottomNavigationBar底部导航栏**\n\n至少接收两个item(icon默认图标状态,activeicon激活图标状态)\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/5C5AFAF6-3C50-4B79-A31B-BF00987ADF49_2/ixeOFWrNjl1CMsFUVDoFEtbRz7rd4F2g1YnAsqRuMS8z/Image.png)\n\n**FloatingActionButton 悬浮按钮**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/28479537-363C-4B23-AFFB-16FBA2546DF5_2/SxXXTDgnxNeMrHyic6atxQ0FcTiRYmTzNhX72Q4f8xMz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/E322A796-D3AC-405E-8BC0-E300B1ACB44F_2/nUJt5JokjAtgctZRK9eu2nQTUkxLvy89WFOs5BHu3qkz/Image.png)\n\n**RefreshIndicator 下拉刷新组件**\n\n必须配合列表使用\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/A2AA3F35-2E46-4EF4-8CF4-02A7FAEC2EA8_2/kaSnxoMGetGdsUAcirNC3cTpWG9gxMLPrvtX8yLigiQz/Image.png)\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/761F63C9-6EF5-45BB-B9FD-56E408A4BC0A_2/7HFFgW7xn2KEgj3qJdfhCZyKtJ64WomsHOeF6XECyvoz/Image.png)\n\n**Image 图片组件**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/3A59317B-753B-4904-BAEB-DA9FF3EEFE6E_2/jbQwyjFbxprsuWO7fsmN5YsDzVCdQuv2vWVFMqQ3bwsz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/5B581BBE-1EF2-4627-9576-D22C6B74AAB9_2/V8hCinl5NBDrTKWzSm4aHmSLdkDYsQEwwJmizJkdJkIz/Image.png)\n\n**TextField 输入框组件**\n\n(可用作登录注册页面)\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/D54EAE6D-EBCD-4812-A67C-CF374DF3536F_2/MQiRwyRKbNQx5pyexA8wNZJd56qtAFXxYpG8XOHI4u0z/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/9C32BC32-47B4-4EFC-8FA2-EA9E9F1399EB_2/vYhq6QqQxYPBkI0xvOgJx69SlUeo8aWtxxR449E5FwAz/Image.png)\n\n**PageView页面预览**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/33E3DE50-E5A0-416C-8C54-AF5033E76FDC_2/Iuu9kMPfHlPZrHPXEnhyRvgBRadutInC52IdBzfKt5cz/Image.png)\n\n实现效果（可左右华东切换）\n\n可用作首页通知公告栏\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/D7B6B634-DBC4-4DC6-A093-98EBB14F12F8_2/TyksPI6mGTg0ksM67jphOayq0fWNzzir1UPj98aRCVEz/Image.png)\n\n完整代码：\n```other\nimport 'package:flutter/material.dart';\n\nclass StatefulGroup extends StatefulWidget {\n  @override\n  State<StatefulGroup> createState() => _StatefulGroupState();\n}\n\nclass _StatefulGroupState extends State<StatefulGroup> {\n  int _currentIndex = 0;//初始化当前选中页面 默认为0\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Stateful基础组件',\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: Scaffold(\n        appBar: AppBar(\n          title: const Text(\"Stateful基础组件\"),//标题\n        ),\n        //底部导航栏\n        bottomNavigationBar: BottomNavigationBar(\n          currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值\n          onTap: (index){//接收一个index，点击的时候会自动切换到该索引\n            setState(() {//使用setState改变初始化的当前索引的值\n              _currentIndex = index;\n            });\n          },\n          items: const [\n            //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个\n          BottomNavigationBarItem(//第一个item\n              icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态\n            activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态\n            label: '首页'//第一个item的显示名称\n          ),\n          BottomNavigationBarItem(//第二个item\n            icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态\n            activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态\n            label: '列表'//第二个item的显示名称\n          ),\n        ],),\n\n        floatingActionButton: const FloatingActionButton(\n          onPressed: null,\n          child: Text('点我'),\n        ),\n        body: _currentIndex==0\n            ?\n            RefreshIndicator(\n                child:\n                ListView(\n                  children: <Widget>[\n                    Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容\n                      decoration: const BoxDecoration(color: Colors.white10),//装饰器\n                      alignment: Alignment.center,//居中显示\n                      child: Column(\n                        children: <Widget>[\n                          Image.network(//插入网络图片\n                            'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                            //设置图片url\n                            height: 300,//高\n                            width: 250,//宽\n                          ),//加载网络图片\n                          const TextField(//文本输入框\n                            decoration: InputDecoration(\n                              contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0\n                              hintText: '请输入',//hintText提示文案\n                              hintStyle: TextStyle(\n                                fontSize: 20,\n                              ),//设置提示文案的样式\n                            ),//使用decoration装饰器 定义文本输入框样式\n                          ),\n                          //PageView页面预览的使用\n                          //使用Container约束大小\n                          Container(\n                            height: 100,\n                            margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10\n                            //设置装饰器\n                            decoration: BoxDecoration(color: Colors.lightBlueAccent),//BoxDecoration设置装饰器背景\n                            //child节点设置pageview\n                            child: PageView(\n                              children: <Widget>[\n                                _item('Page1',Colors.purple),//接收两个参数（标题，颜色）\n                                _item('Page2',Colors.yellow),//接收两个参数（标题，颜色）\n                                _item('Page3',Colors.green),//接收两个参数（标题，颜色）\n                              ],\n                            ),\n                          ),\n                        ],\n                      ),\n                    ),\n                  ],\n                ),\n                onRefresh: _handleRefresh)\n            :\n        Text('列表'),//_currentIndex==0?如果不等于0 显示:后面的内容\n      ),\n    );\n  }\n  Future<Null> _handleRefresh() async{ //asyc设置异步运行\n    await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒\n    return null;//返回一个空值\n  }\n}\n\n_item(String title, Color color) {\n  return Container(//返回一个Container装饰器包裹住\n    alignment: Alignment.center,//设置居中方式 居中\n    decoration: BoxDecoration(\n      color: color,//装饰器背景色等于传入的color参数\n    ),//设置装饰器样式\n    child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),),\n  );\n}\n\n```\n\n","slug":"flutter-study-day-4-认识StatelessFul基本组件","published":1,"updated":"2022-05-13T07:57:20.789Z","_id":"cl341xpv80006bwx1duba1zh6","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://tva1.sinaimg.cn/large/a15b4afegy1fmvj3g29fbj21hc0u0akh.jpg\" alt=\"认识StatelessFul基本组件\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"StatelessFul基本组件\"><a href=\"#StatelessFul基本组件\" class=\"headerlink\" title=\"StatelessFul基本组件\"></a>StatelessFul基本组件</h1><p>可以改变页面状态 这是statelesswidget无状态的组件做不到的</p>\n<p><strong>MaterialApp 材料设计的App组件</strong></p>\n<p>通常放在根节点</p>\n<p>title:标题</p>\n<p>theme:主题</p>\n<p>home：整个页面</p>\n<p><strong>Scaffold</strong></p>\n<p>flutter封装的带有AppBar&amp;底部导航栏&amp;侧边栏等效果的组件</p>\n<p><strong>BottomNavigationBar底部导航栏</strong></p>\n<p>至少接收两个item(icon默认图标状态,activeicon激活图标状态)</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/5C5AFAF6-3C50-4B79-A31B-BF00987ADF49_2/ixeOFWrNjl1CMsFUVDoFEtbRz7rd4F2g1YnAsqRuMS8z/Image.png\" alt=\"image\"></p>\n<p><strong>FloatingActionButton 悬浮按钮</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/28479537-363C-4B23-AFFB-16FBA2546DF5_2/SxXXTDgnxNeMrHyic6atxQ0FcTiRYmTzNhX72Q4f8xMz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/E322A796-D3AC-405E-8BC0-E300B1ACB44F_2/nUJt5JokjAtgctZRK9eu2nQTUkxLvy89WFOs5BHu3qkz/Image.png\" alt=\"image\"></p>\n<p><strong>RefreshIndicator 下拉刷新组件</strong></p>\n<p>必须配合列表使用</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/A2AA3F35-2E46-4EF4-8CF4-02A7FAEC2EA8_2/kaSnxoMGetGdsUAcirNC3cTpWG9gxMLPrvtX8yLigiQz/Image.png\" alt=\"image\"></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/761F63C9-6EF5-45BB-B9FD-56E408A4BC0A_2/7HFFgW7xn2KEgj3qJdfhCZyKtJ64WomsHOeF6XECyvoz/Image.png\" alt=\"image\"></p>\n<p><strong>Image 图片组件</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/3A59317B-753B-4904-BAEB-DA9FF3EEFE6E_2/jbQwyjFbxprsuWO7fsmN5YsDzVCdQuv2vWVFMqQ3bwsz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/5B581BBE-1EF2-4627-9576-D22C6B74AAB9_2/V8hCinl5NBDrTKWzSm4aHmSLdkDYsQEwwJmizJkdJkIz/Image.png\" alt=\"image\"></p>\n<p><strong>TextField 输入框组件</strong></p>\n<p>(可用作登录注册页面)</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/D54EAE6D-EBCD-4812-A67C-CF374DF3536F_2/MQiRwyRKbNQx5pyexA8wNZJd56qtAFXxYpG8XOHI4u0z/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/9C32BC32-47B4-4EFC-8FA2-EA9E9F1399EB_2/vYhq6QqQxYPBkI0xvOgJx69SlUeo8aWtxxR449E5FwAz/Image.png\" alt=\"image\"></p>\n<p><strong>PageView页面预览</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/33E3DE50-E5A0-416C-8C54-AF5033E76FDC_2/Iuu9kMPfHlPZrHPXEnhyRvgBRadutInC52IdBzfKt5cz/Image.png\" alt=\"image\"></p>\n<p>实现效果（可左右华东切换）</p>\n<p>可用作首页通知公告栏</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/D7B6B634-DBC4-4DC6-A093-98EBB14F12F8_2/TyksPI6mGTg0ksM67jphOayq0fWNzzir1UPj98aRCVEz/Image.png\" alt=\"image\"></p>\n<p>完整代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class StatefulGroup extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;StatefulGroup&gt; createState() =&gt; _StatefulGroupState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _StatefulGroupState extends State&lt;StatefulGroup&gt; &#123;</span><br><span class=\"line\">  int _currentIndex = 0;//初始化当前选中页面 默认为0</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &#x27;Stateful基础组件&#x27;,</span><br><span class=\"line\">      theme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.blue,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: const Text(&quot;Stateful基础组件&quot;),//标题</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        //底部导航栏</span><br><span class=\"line\">        bottomNavigationBar: BottomNavigationBar(</span><br><span class=\"line\">          currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值</span><br><span class=\"line\">          onTap: (index)&#123;//接收一个index，点击的时候会自动切换到该索引</span><br><span class=\"line\">            setState(() &#123;//使用setState改变初始化的当前索引的值</span><br><span class=\"line\">              _currentIndex = index;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          items: const [</span><br><span class=\"line\">            //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个</span><br><span class=\"line\">          BottomNavigationBarItem(//第一个item</span><br><span class=\"line\">              icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态</span><br><span class=\"line\">            activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态</span><br><span class=\"line\">            label: &#x27;首页&#x27;//第一个item的显示名称</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          BottomNavigationBarItem(//第二个item</span><br><span class=\"line\">            icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态</span><br><span class=\"line\">            activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态</span><br><span class=\"line\">            label: &#x27;列表&#x27;//第二个item的显示名称</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ],),</span><br><span class=\"line\"></span><br><span class=\"line\">        floatingActionButton: const FloatingActionButton(</span><br><span class=\"line\">          onPressed: null,</span><br><span class=\"line\">          child: Text(&#x27;点我&#x27;),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: _currentIndex==0</span><br><span class=\"line\">            ?</span><br><span class=\"line\">            RefreshIndicator(</span><br><span class=\"line\">                child:</span><br><span class=\"line\">                ListView(</span><br><span class=\"line\">                  children: &lt;Widget&gt;[</span><br><span class=\"line\">                    Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容</span><br><span class=\"line\">                      decoration: const BoxDecoration(color: Colors.white10),//装饰器</span><br><span class=\"line\">                      alignment: Alignment.center,//居中显示</span><br><span class=\"line\">                      child: Column(</span><br><span class=\"line\">                        children: &lt;Widget&gt;[</span><br><span class=\"line\">                          Image.network(//插入网络图片</span><br><span class=\"line\">                            &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                            //设置图片url</span><br><span class=\"line\">                            height: 300,//高</span><br><span class=\"line\">                            width: 250,//宽</span><br><span class=\"line\">                          ),//加载网络图片</span><br><span class=\"line\">                          const TextField(//文本输入框</span><br><span class=\"line\">                            decoration: InputDecoration(</span><br><span class=\"line\">                              contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0</span><br><span class=\"line\">                              hintText: &#x27;请输入&#x27;,//hintText提示文案</span><br><span class=\"line\">                              hintStyle: TextStyle(</span><br><span class=\"line\">                                fontSize: 20,</span><br><span class=\"line\">                              ),//设置提示文案的样式</span><br><span class=\"line\">                            ),//使用decoration装饰器 定义文本输入框样式</span><br><span class=\"line\">                          ),</span><br><span class=\"line\">                          //PageView页面预览的使用</span><br><span class=\"line\">                          //使用Container约束大小</span><br><span class=\"line\">                          Container(</span><br><span class=\"line\">                            height: 100,</span><br><span class=\"line\">                            margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10</span><br><span class=\"line\">                            //设置装饰器</span><br><span class=\"line\">                            decoration: BoxDecoration(color: Colors.lightBlueAccent),//BoxDecoration设置装饰器背景</span><br><span class=\"line\">                            //child节点设置pageview</span><br><span class=\"line\">                            child: PageView(</span><br><span class=\"line\">                              children: &lt;Widget&gt;[</span><br><span class=\"line\">                                _item(&#x27;Page1&#x27;,Colors.purple),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                                _item(&#x27;Page2&#x27;,Colors.yellow),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                                _item(&#x27;Page3&#x27;,Colors.green),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                              ],</span><br><span class=\"line\">                            ),</span><br><span class=\"line\">                          ),</span><br><span class=\"line\">                        ],</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                onRefresh: _handleRefresh)</span><br><span class=\"line\">            :</span><br><span class=\"line\">        Text(&#x27;列表&#x27;),//_currentIndex==0?如果不等于0 显示:后面的内容</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Future&lt;Null&gt; _handleRefresh() async&#123; //asyc设置异步运行</span><br><span class=\"line\">    await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒</span><br><span class=\"line\">    return null;//返回一个空值</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">_item(String title, Color color) &#123;</span><br><span class=\"line\">  return Container(//返回一个Container装饰器包裹住</span><br><span class=\"line\">    alignment: Alignment.center,//设置居中方式 居中</span><br><span class=\"line\">    decoration: BoxDecoration(</span><br><span class=\"line\">      color: color,//装饰器背景色等于传入的color参数</span><br><span class=\"line\">    ),//设置装饰器样式</span><br><span class=\"line\">    child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),),</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p><img src=\"https://tva1.sinaimg.cn/large/a15b4afegy1fmvj3g29fbj21hc0u0akh.jpg\" alt=\"认识StatelessFul基本组件\"></p>","more":"<h1 id=\"StatelessFul基本组件\"><a href=\"#StatelessFul基本组件\" class=\"headerlink\" title=\"StatelessFul基本组件\"></a>StatelessFul基本组件</h1><p>可以改变页面状态 这是statelesswidget无状态的组件做不到的</p>\n<p><strong>MaterialApp 材料设计的App组件</strong></p>\n<p>通常放在根节点</p>\n<p>title:标题</p>\n<p>theme:主题</p>\n<p>home：整个页面</p>\n<p><strong>Scaffold</strong></p>\n<p>flutter封装的带有AppBar&amp;底部导航栏&amp;侧边栏等效果的组件</p>\n<p><strong>BottomNavigationBar底部导航栏</strong></p>\n<p>至少接收两个item(icon默认图标状态,activeicon激活图标状态)</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/5C5AFAF6-3C50-4B79-A31B-BF00987ADF49_2/ixeOFWrNjl1CMsFUVDoFEtbRz7rd4F2g1YnAsqRuMS8z/Image.png\" alt=\"image\"></p>\n<p><strong>FloatingActionButton 悬浮按钮</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/28479537-363C-4B23-AFFB-16FBA2546DF5_2/SxXXTDgnxNeMrHyic6atxQ0FcTiRYmTzNhX72Q4f8xMz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/E322A796-D3AC-405E-8BC0-E300B1ACB44F_2/nUJt5JokjAtgctZRK9eu2nQTUkxLvy89WFOs5BHu3qkz/Image.png\" alt=\"image\"></p>\n<p><strong>RefreshIndicator 下拉刷新组件</strong></p>\n<p>必须配合列表使用</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/A2AA3F35-2E46-4EF4-8CF4-02A7FAEC2EA8_2/kaSnxoMGetGdsUAcirNC3cTpWG9gxMLPrvtX8yLigiQz/Image.png\" alt=\"image\"></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/761F63C9-6EF5-45BB-B9FD-56E408A4BC0A_2/7HFFgW7xn2KEgj3qJdfhCZyKtJ64WomsHOeF6XECyvoz/Image.png\" alt=\"image\"></p>\n<p><strong>Image 图片组件</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/3A59317B-753B-4904-BAEB-DA9FF3EEFE6E_2/jbQwyjFbxprsuWO7fsmN5YsDzVCdQuv2vWVFMqQ3bwsz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/5B581BBE-1EF2-4627-9576-D22C6B74AAB9_2/V8hCinl5NBDrTKWzSm4aHmSLdkDYsQEwwJmizJkdJkIz/Image.png\" alt=\"image\"></p>\n<p><strong>TextField 输入框组件</strong></p>\n<p>(可用作登录注册页面)</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/D54EAE6D-EBCD-4812-A67C-CF374DF3536F_2/MQiRwyRKbNQx5pyexA8wNZJd56qtAFXxYpG8XOHI4u0z/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/9C32BC32-47B4-4EFC-8FA2-EA9E9F1399EB_2/vYhq6QqQxYPBkI0xvOgJx69SlUeo8aWtxxR449E5FwAz/Image.png\" alt=\"image\"></p>\n<p><strong>PageView页面预览</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/33E3DE50-E5A0-416C-8C54-AF5033E76FDC_2/Iuu9kMPfHlPZrHPXEnhyRvgBRadutInC52IdBzfKt5cz/Image.png\" alt=\"image\"></p>\n<p>实现效果（可左右华东切换）</p>\n<p>可用作首页通知公告栏</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/F7D6F96E-C45E-4DB2-9453-B0D08225D23C/D7B6B634-DBC4-4DC6-A093-98EBB14F12F8_2/TyksPI6mGTg0ksM67jphOayq0fWNzzir1UPj98aRCVEz/Image.png\" alt=\"image\"></p>\n<p>完整代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class StatefulGroup extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;StatefulGroup&gt; createState() =&gt; _StatefulGroupState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _StatefulGroupState extends State&lt;StatefulGroup&gt; &#123;</span><br><span class=\"line\">  int _currentIndex = 0;//初始化当前选中页面 默认为0</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &#x27;Stateful基础组件&#x27;,</span><br><span class=\"line\">      theme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.blue,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: const Text(&quot;Stateful基础组件&quot;),//标题</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        //底部导航栏</span><br><span class=\"line\">        bottomNavigationBar: BottomNavigationBar(</span><br><span class=\"line\">          currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值</span><br><span class=\"line\">          onTap: (index)&#123;//接收一个index，点击的时候会自动切换到该索引</span><br><span class=\"line\">            setState(() &#123;//使用setState改变初始化的当前索引的值</span><br><span class=\"line\">              _currentIndex = index;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          items: const [</span><br><span class=\"line\">            //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个</span><br><span class=\"line\">          BottomNavigationBarItem(//第一个item</span><br><span class=\"line\">              icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态</span><br><span class=\"line\">            activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态</span><br><span class=\"line\">            label: &#x27;首页&#x27;//第一个item的显示名称</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          BottomNavigationBarItem(//第二个item</span><br><span class=\"line\">            icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态</span><br><span class=\"line\">            activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态</span><br><span class=\"line\">            label: &#x27;列表&#x27;//第二个item的显示名称</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ],),</span><br><span class=\"line\"></span><br><span class=\"line\">        floatingActionButton: const FloatingActionButton(</span><br><span class=\"line\">          onPressed: null,</span><br><span class=\"line\">          child: Text(&#x27;点我&#x27;),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: _currentIndex==0</span><br><span class=\"line\">            ?</span><br><span class=\"line\">            RefreshIndicator(</span><br><span class=\"line\">                child:</span><br><span class=\"line\">                ListView(</span><br><span class=\"line\">                  children: &lt;Widget&gt;[</span><br><span class=\"line\">                    Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容</span><br><span class=\"line\">                      decoration: const BoxDecoration(color: Colors.white10),//装饰器</span><br><span class=\"line\">                      alignment: Alignment.center,//居中显示</span><br><span class=\"line\">                      child: Column(</span><br><span class=\"line\">                        children: &lt;Widget&gt;[</span><br><span class=\"line\">                          Image.network(//插入网络图片</span><br><span class=\"line\">                            &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                            //设置图片url</span><br><span class=\"line\">                            height: 300,//高</span><br><span class=\"line\">                            width: 250,//宽</span><br><span class=\"line\">                          ),//加载网络图片</span><br><span class=\"line\">                          const TextField(//文本输入框</span><br><span class=\"line\">                            decoration: InputDecoration(</span><br><span class=\"line\">                              contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0</span><br><span class=\"line\">                              hintText: &#x27;请输入&#x27;,//hintText提示文案</span><br><span class=\"line\">                              hintStyle: TextStyle(</span><br><span class=\"line\">                                fontSize: 20,</span><br><span class=\"line\">                              ),//设置提示文案的样式</span><br><span class=\"line\">                            ),//使用decoration装饰器 定义文本输入框样式</span><br><span class=\"line\">                          ),</span><br><span class=\"line\">                          //PageView页面预览的使用</span><br><span class=\"line\">                          //使用Container约束大小</span><br><span class=\"line\">                          Container(</span><br><span class=\"line\">                            height: 100,</span><br><span class=\"line\">                            margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10</span><br><span class=\"line\">                            //设置装饰器</span><br><span class=\"line\">                            decoration: BoxDecoration(color: Colors.lightBlueAccent),//BoxDecoration设置装饰器背景</span><br><span class=\"line\">                            //child节点设置pageview</span><br><span class=\"line\">                            child: PageView(</span><br><span class=\"line\">                              children: &lt;Widget&gt;[</span><br><span class=\"line\">                                _item(&#x27;Page1&#x27;,Colors.purple),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                                _item(&#x27;Page2&#x27;,Colors.yellow),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                                _item(&#x27;Page3&#x27;,Colors.green),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                              ],</span><br><span class=\"line\">                            ),</span><br><span class=\"line\">                          ),</span><br><span class=\"line\">                        ],</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                onRefresh: _handleRefresh)</span><br><span class=\"line\">            :</span><br><span class=\"line\">        Text(&#x27;列表&#x27;),//_currentIndex==0?如果不等于0 显示:后面的内容</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Future&lt;Null&gt; _handleRefresh() async&#123; //asyc设置异步运行</span><br><span class=\"line\">    await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒</span><br><span class=\"line\">    return null;//返回一个空值</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">_item(String title, Color color) &#123;</span><br><span class=\"line\">  return Container(//返回一个Container装饰器包裹住</span><br><span class=\"line\">    alignment: Alignment.center,//设置居中方式 居中</span><br><span class=\"line\">    decoration: BoxDecoration(</span><br><span class=\"line\">      color: color,//装饰器背景色等于传入的color参数</span><br><span class=\"line\">    ),//设置装饰器样式</span><br><span class=\"line\">    child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),),</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"flutter study day 6 part 2 检测用户手势以及处理事件","date":"2022-05-09T13:11:53.000Z","_content":"\n**1.检测用户手势**\n\n创建GesturePage类\n\n```other\nclass GusturePage extends StatefulWidget {\n  @override\n  State<GusturePage> createState() => _GusturePageState();\n}\n```\n<!-- more -->\n\n\n**2.return MaterialApp页面**\n\n正常设置AppBar\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/863ECC3A-A13F-4F21-863F-50BF13C4ED74_2/VnxFQTlor4UQocg7JUF9v6n66VVMipcthHmyQJvaz9cz/Image.png)\n\nFractionallySizedBox:设置空间大小\n\nwidthFatory:设置占用比例\n\n通过Stack与Column布局\n\n设置GestureDetector监听器\n\n监听所有的点按操作,使用自定义方法_printMsg\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/6E570C93-7E31-4D33-B6B6-0BCA3741EBEF_2/5nTC5MQJuqscn2BN3GTjIOcFNfaI8k5Dv3TiDX8P0SUz/Image.png)\n\n添加一个容器Container设为点击目标\n\n设置大小 文字 以及 样式\n\n最后为输出每次操作对应的点按方式\n\n**实现效果**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/150C1A8B-9B96-454D-B693-835221955164_2/ntGTuWRMiSohvp9dR2cSQmhOHIDodeyNbWgNaxUmKpsz/Image.png)\n\n点按后的效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/D9EDE697-97AE-4B3B-AB37-08269C8F5B1D_2/4cHyHuafc2JWYBwF3TJVg5nFlxSjjGiaCAtwcXfPjWYz/Image.png)\n\n**2.点击事件**\n\n在Stack内调用Positioned类生成一个球\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/CA6F58F1-B50B-4772-9C77-821BF53B5843_2/CE1KPR9TxVujrbv02GxnqRDaCatrVvKjsfbQb7SqeH0z/Image.png)\n\n初始化X轴与Y轴\n\n添加子元素：调用GestureDetector手势监听器\n\n设置点击事件触发方法改变球的X&Y轴\n\n使用自定义方法_doMove(e)方法\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/795C08AC-A85D-4D7E-9636-3AFFEF1E90CA_2/U0qmrHcsGWVWPdayxxCiayw4lmF39j5KkuD9sTpLFJUz/Image.png)\n\n添加子元素：Container容器\n\n设定容器长宽\n\n设定容器的装饰器：颜色amber黄\n\n容器的边角为直径的一半以此形成圆形的球\n\n**实现效果**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/E441C551-54A7-4BB5-B829-27B60A55DBB5_2/e0xXW4Gg6lw0lvOA26yEH2kk2E2l6bFyf9cPd2YQCcoz/Image.png)\n\n长按球进行移动\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/E71B3DC2-4869-4207-A90B-88E36AE6326B_2/H5d8p29vFtJUwsSXFdxTZ7Q9Js2VSvFkKIqlr312jwkz/Image.png)\n\n代码示例：\n\n```other\nimport 'package:flutter/material.dart';\n\nclass GusturePage extends StatefulWidget {\n  @override\n  State<GusturePage> createState() => _GusturePageState();\n}\n\nclass _GusturePageState extends State<GusturePage> {\n  String printString = '';//\n  double moveX=0, moveY=0;\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(//使用MaterialApp包裹\n      theme: ThemeData(//主题库\n        primarySwatch: Colors.blue,//设置主题颜色 蓝色\n      ),\n      home: Scaffold(//使用scaffold包裹\n        appBar: AppBar(\n          title: Text(\"如何检测用户手势以及处理点击事件？\"),//设置标题\n          leading: GestureDetector(//设置顶栏左侧按钮\n            onTap: (){//点击事件\n              Navigator.pop(context);//pop离开某个页面\n            },\n            child: Icon(Icons.arrow_back),//leading左侧按钮的图标 arrow_back(返回)\n          ),\n        ),\n        body: FractionallySizedBox(//FractionallySizedBox控件会根据现有空间，来调整child的尺寸\n          widthFactor: 1,//占满屏幕\n          child: Stack(//层叠布局\n            children: <Widget>[\n              Column(//使Widget里面的组件能够上下排列\n                children: <Widget>[\n                  GestureDetector(//flutter内所有的手势都会委托给GestureDetector处理\n                    onTap: () => _printMsg(\"点击\"),//单击事件 触发自定义方法 打印文字\n                    onDoubleTap: () => _printMsg(\"双击\"),//双击事件 触发自定义方法 打印文字\n                    onLongPress: () => _printMsg(\"长按\"),//长按事件 触发自定义方法 打印文字\n                    onTapCancel: () => _printMsg(\"取消\"),//取消事件 触发自定义方法 打印文字\n                    onTapUp: (e) => _printMsg(\"手指松开\"),//手指松开事件 触发自定义方法 打印文字\n                    onTapDown: (e) => _printMsg(\"手指按下\"),//手指按下事件 触发自定义方法 打印文字\n                    child: Container(//添加容器\n                      padding: EdgeInsets.all(60),//设置全部边距为60\n                      decoration: BoxDecoration(color: Colors.blue,),//设置装饰器\n                      child: const Text('点我',style: TextStyle(\n                        fontSize: 36,\n                        color: Colors.white,\n                      )),\n                    ),\n                  ),\n                  Text(printString),\n                ],\n              ),\n              Positioned(//创建一个跟随用户手势的小球\n                left: moveX,//设定X轴\n                top: moveY, //设定Y轴\n                child: GestureDetector(//手势监听器\n                  onPanUpdate:(e) => _doMove(e),//跟随触控更新\n                  child: Container(\n                    width: 72,//宽72\n                    height: 72,//长72\n                    decoration: BoxDecoration(//装饰器\n                      color:Colors.amber,//颜色 amber黄\n                      borderRadius: BorderRadius.circular(36),//圆角等于直径的一般 形成圆形\n                    ),\n                  ),\n                ),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n  _printMsg(String msg) {//自定义_printMsg方法，接收一个字符串\n    setState((){\n      printString += ' ,$msg';//字符串拼接\n    });\n  }\n  _doMove(DragUpdateDetails e) {//球移动的方法\n    setState(() {\n      moveY += e.delta.dy;//更新每次移动的位置Y\n      moveX += e.delta.dx;//更新每次移动的位置X\n    });\n  }\n}\n\n\n\n```\n\n","source":"_posts/flutter-study-day-6-part-2-检测用户手势以及处理事件.md","raw":"---\ntitle: flutter study day 6 part 2 检测用户手势以及处理事件\ndate: 2022-05-09 21:11:53\ntags: [flutter]\ncategories: flutter\n---\n\n**1.检测用户手势**\n\n创建GesturePage类\n\n```other\nclass GusturePage extends StatefulWidget {\n  @override\n  State<GusturePage> createState() => _GusturePageState();\n}\n```\n<!-- more -->\n\n\n**2.return MaterialApp页面**\n\n正常设置AppBar\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/863ECC3A-A13F-4F21-863F-50BF13C4ED74_2/VnxFQTlor4UQocg7JUF9v6n66VVMipcthHmyQJvaz9cz/Image.png)\n\nFractionallySizedBox:设置空间大小\n\nwidthFatory:设置占用比例\n\n通过Stack与Column布局\n\n设置GestureDetector监听器\n\n监听所有的点按操作,使用自定义方法_printMsg\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/6E570C93-7E31-4D33-B6B6-0BCA3741EBEF_2/5nTC5MQJuqscn2BN3GTjIOcFNfaI8k5Dv3TiDX8P0SUz/Image.png)\n\n添加一个容器Container设为点击目标\n\n设置大小 文字 以及 样式\n\n最后为输出每次操作对应的点按方式\n\n**实现效果**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/150C1A8B-9B96-454D-B693-835221955164_2/ntGTuWRMiSohvp9dR2cSQmhOHIDodeyNbWgNaxUmKpsz/Image.png)\n\n点按后的效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/D9EDE697-97AE-4B3B-AB37-08269C8F5B1D_2/4cHyHuafc2JWYBwF3TJVg5nFlxSjjGiaCAtwcXfPjWYz/Image.png)\n\n**2.点击事件**\n\n在Stack内调用Positioned类生成一个球\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/CA6F58F1-B50B-4772-9C77-821BF53B5843_2/CE1KPR9TxVujrbv02GxnqRDaCatrVvKjsfbQb7SqeH0z/Image.png)\n\n初始化X轴与Y轴\n\n添加子元素：调用GestureDetector手势监听器\n\n设置点击事件触发方法改变球的X&Y轴\n\n使用自定义方法_doMove(e)方法\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/795C08AC-A85D-4D7E-9636-3AFFEF1E90CA_2/U0qmrHcsGWVWPdayxxCiayw4lmF39j5KkuD9sTpLFJUz/Image.png)\n\n添加子元素：Container容器\n\n设定容器长宽\n\n设定容器的装饰器：颜色amber黄\n\n容器的边角为直径的一半以此形成圆形的球\n\n**实现效果**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/E441C551-54A7-4BB5-B829-27B60A55DBB5_2/e0xXW4Gg6lw0lvOA26yEH2kk2E2l6bFyf9cPd2YQCcoz/Image.png)\n\n长按球进行移动\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/E71B3DC2-4869-4207-A90B-88E36AE6326B_2/H5d8p29vFtJUwsSXFdxTZ7Q9Js2VSvFkKIqlr312jwkz/Image.png)\n\n代码示例：\n\n```other\nimport 'package:flutter/material.dart';\n\nclass GusturePage extends StatefulWidget {\n  @override\n  State<GusturePage> createState() => _GusturePageState();\n}\n\nclass _GusturePageState extends State<GusturePage> {\n  String printString = '';//\n  double moveX=0, moveY=0;\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(//使用MaterialApp包裹\n      theme: ThemeData(//主题库\n        primarySwatch: Colors.blue,//设置主题颜色 蓝色\n      ),\n      home: Scaffold(//使用scaffold包裹\n        appBar: AppBar(\n          title: Text(\"如何检测用户手势以及处理点击事件？\"),//设置标题\n          leading: GestureDetector(//设置顶栏左侧按钮\n            onTap: (){//点击事件\n              Navigator.pop(context);//pop离开某个页面\n            },\n            child: Icon(Icons.arrow_back),//leading左侧按钮的图标 arrow_back(返回)\n          ),\n        ),\n        body: FractionallySizedBox(//FractionallySizedBox控件会根据现有空间，来调整child的尺寸\n          widthFactor: 1,//占满屏幕\n          child: Stack(//层叠布局\n            children: <Widget>[\n              Column(//使Widget里面的组件能够上下排列\n                children: <Widget>[\n                  GestureDetector(//flutter内所有的手势都会委托给GestureDetector处理\n                    onTap: () => _printMsg(\"点击\"),//单击事件 触发自定义方法 打印文字\n                    onDoubleTap: () => _printMsg(\"双击\"),//双击事件 触发自定义方法 打印文字\n                    onLongPress: () => _printMsg(\"长按\"),//长按事件 触发自定义方法 打印文字\n                    onTapCancel: () => _printMsg(\"取消\"),//取消事件 触发自定义方法 打印文字\n                    onTapUp: (e) => _printMsg(\"手指松开\"),//手指松开事件 触发自定义方法 打印文字\n                    onTapDown: (e) => _printMsg(\"手指按下\"),//手指按下事件 触发自定义方法 打印文字\n                    child: Container(//添加容器\n                      padding: EdgeInsets.all(60),//设置全部边距为60\n                      decoration: BoxDecoration(color: Colors.blue,),//设置装饰器\n                      child: const Text('点我',style: TextStyle(\n                        fontSize: 36,\n                        color: Colors.white,\n                      )),\n                    ),\n                  ),\n                  Text(printString),\n                ],\n              ),\n              Positioned(//创建一个跟随用户手势的小球\n                left: moveX,//设定X轴\n                top: moveY, //设定Y轴\n                child: GestureDetector(//手势监听器\n                  onPanUpdate:(e) => _doMove(e),//跟随触控更新\n                  child: Container(\n                    width: 72,//宽72\n                    height: 72,//长72\n                    decoration: BoxDecoration(//装饰器\n                      color:Colors.amber,//颜色 amber黄\n                      borderRadius: BorderRadius.circular(36),//圆角等于直径的一般 形成圆形\n                    ),\n                  ),\n                ),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n  _printMsg(String msg) {//自定义_printMsg方法，接收一个字符串\n    setState((){\n      printString += ' ,$msg';//字符串拼接\n    });\n  }\n  _doMove(DragUpdateDetails e) {//球移动的方法\n    setState(() {\n      moveY += e.delta.dy;//更新每次移动的位置Y\n      moveX += e.delta.dx;//更新每次移动的位置X\n    });\n  }\n}\n\n\n\n```\n\n","slug":"flutter-study-day-6-part-2-检测用户手势以及处理事件","published":1,"updated":"2022-05-13T08:05:10.612Z","_id":"cl341xpv90009bwx17xkc7jk4","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>1.检测用户手势</strong></p>\n<p>创建GesturePage类</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class GusturePage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;GusturePage&gt; createState() =&gt; _GusturePageState();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n\n\n<p><strong>2.return MaterialApp页面</strong></p>\n<p>正常设置AppBar</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/863ECC3A-A13F-4F21-863F-50BF13C4ED74_2/VnxFQTlor4UQocg7JUF9v6n66VVMipcthHmyQJvaz9cz/Image.png\" alt=\"image\"></p>\n<p>FractionallySizedBox:设置空间大小</p>\n<p>widthFatory:设置占用比例</p>\n<p>通过Stack与Column布局</p>\n<p>设置GestureDetector监听器</p>\n<p>监听所有的点按操作,使用自定义方法_printMsg</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/6E570C93-7E31-4D33-B6B6-0BCA3741EBEF_2/5nTC5MQJuqscn2BN3GTjIOcFNfaI8k5Dv3TiDX8P0SUz/Image.png\" alt=\"image\"></p>\n<p>添加一个容器Container设为点击目标</p>\n<p>设置大小 文字 以及 样式</p>\n<p>最后为输出每次操作对应的点按方式</p>\n<p><strong>实现效果</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/150C1A8B-9B96-454D-B693-835221955164_2/ntGTuWRMiSohvp9dR2cSQmhOHIDodeyNbWgNaxUmKpsz/Image.png\" alt=\"image\"></p>\n<p>点按后的效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/D9EDE697-97AE-4B3B-AB37-08269C8F5B1D_2/4cHyHuafc2JWYBwF3TJVg5nFlxSjjGiaCAtwcXfPjWYz/Image.png\" alt=\"image\"></p>\n<p><strong>2.点击事件</strong></p>\n<p>在Stack内调用Positioned类生成一个球</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/CA6F58F1-B50B-4772-9C77-821BF53B5843_2/CE1KPR9TxVujrbv02GxnqRDaCatrVvKjsfbQb7SqeH0z/Image.png\" alt=\"image\"></p>\n<p>初始化X轴与Y轴</p>\n<p>添加子元素：调用GestureDetector手势监听器</p>\n<p>设置点击事件触发方法改变球的X&amp;Y轴</p>\n<p>使用自定义方法_doMove(e)方法</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/795C08AC-A85D-4D7E-9636-3AFFEF1E90CA_2/U0qmrHcsGWVWPdayxxCiayw4lmF39j5KkuD9sTpLFJUz/Image.png\" alt=\"image\"></p>\n<p>添加子元素：Container容器</p>\n<p>设定容器长宽</p>\n<p>设定容器的装饰器：颜色amber黄</p>\n<p>容器的边角为直径的一半以此形成圆形的球</p>\n<p><strong>实现效果</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/E441C551-54A7-4BB5-B829-27B60A55DBB5_2/e0xXW4Gg6lw0lvOA26yEH2kk2E2l6bFyf9cPd2YQCcoz/Image.png\" alt=\"image\"></p>\n<p>长按球进行移动</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/E71B3DC2-4869-4207-A90B-88E36AE6326B_2/H5d8p29vFtJUwsSXFdxTZ7Q9Js2VSvFkKIqlr312jwkz/Image.png\" alt=\"image\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class GusturePage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;GusturePage&gt; createState() =&gt; _GusturePageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _GusturePageState extends State&lt;GusturePage&gt; &#123;</span><br><span class=\"line\">  String printString = &#x27;&#x27;;//</span><br><span class=\"line\">  double moveX=0, moveY=0;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(//使用MaterialApp包裹</span><br><span class=\"line\">      theme: ThemeData(//主题库</span><br><span class=\"line\">        primarySwatch: Colors.blue,//设置主题颜色 蓝色</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(//使用scaffold包裹</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: Text(&quot;如何检测用户手势以及处理点击事件？&quot;),//设置标题</span><br><span class=\"line\">          leading: GestureDetector(//设置顶栏左侧按钮</span><br><span class=\"line\">            onTap: ()&#123;//点击事件</span><br><span class=\"line\">              Navigator.pop(context);//pop离开某个页面</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            child: Icon(Icons.arrow_back),//leading左侧按钮的图标 arrow_back(返回)</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: FractionallySizedBox(//FractionallySizedBox控件会根据现有空间，来调整child的尺寸</span><br><span class=\"line\">          widthFactor: 1,//占满屏幕</span><br><span class=\"line\">          child: Stack(//层叠布局</span><br><span class=\"line\">            children: &lt;Widget&gt;[</span><br><span class=\"line\">              Column(//使Widget里面的组件能够上下排列</span><br><span class=\"line\">                children: &lt;Widget&gt;[</span><br><span class=\"line\">                  GestureDetector(//flutter内所有的手势都会委托给GestureDetector处理</span><br><span class=\"line\">                    onTap: () =&gt; _printMsg(&quot;点击&quot;),//单击事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onDoubleTap: () =&gt; _printMsg(&quot;双击&quot;),//双击事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onLongPress: () =&gt; _printMsg(&quot;长按&quot;),//长按事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onTapCancel: () =&gt; _printMsg(&quot;取消&quot;),//取消事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onTapUp: (e) =&gt; _printMsg(&quot;手指松开&quot;),//手指松开事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onTapDown: (e) =&gt; _printMsg(&quot;手指按下&quot;),//手指按下事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    child: Container(//添加容器</span><br><span class=\"line\">                      padding: EdgeInsets.all(60),//设置全部边距为60</span><br><span class=\"line\">                      decoration: BoxDecoration(color: Colors.blue,),//设置装饰器</span><br><span class=\"line\">                      child: const Text(&#x27;点我&#x27;,style: TextStyle(</span><br><span class=\"line\">                        fontSize: 36,</span><br><span class=\"line\">                        color: Colors.white,</span><br><span class=\"line\">                      )),</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                  Text(printString),</span><br><span class=\"line\">                ],</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Positioned(//创建一个跟随用户手势的小球</span><br><span class=\"line\">                left: moveX,//设定X轴</span><br><span class=\"line\">                top: moveY, //设定Y轴</span><br><span class=\"line\">                child: GestureDetector(//手势监听器</span><br><span class=\"line\">                  onPanUpdate:(e) =&gt; _doMove(e),//跟随触控更新</span><br><span class=\"line\">                  child: Container(</span><br><span class=\"line\">                    width: 72,//宽72</span><br><span class=\"line\">                    height: 72,//长72</span><br><span class=\"line\">                    decoration: BoxDecoration(//装饰器</span><br><span class=\"line\">                      color:Colors.amber,//颜色 amber黄</span><br><span class=\"line\">                      borderRadius: BorderRadius.circular(36),//圆角等于直径的一般 形成圆形</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                ),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            ],</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  _printMsg(String msg) &#123;//自定义_printMsg方法，接收一个字符串</span><br><span class=\"line\">    setState(()&#123;</span><br><span class=\"line\">      printString += &#x27; ,$msg&#x27;;//字符串拼接</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  _doMove(DragUpdateDetails e) &#123;//球移动的方法</span><br><span class=\"line\">    setState(() &#123;</span><br><span class=\"line\">      moveY += e.delta.dy;//更新每次移动的位置Y</span><br><span class=\"line\">      moveX += e.delta.dx;//更新每次移动的位置X</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p><strong>1.检测用户手势</strong></p>\n<p>创建GesturePage类</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class GusturePage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;GusturePage&gt; createState() =&gt; _GusturePageState();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<p><strong>2.return MaterialApp页面</strong></p>\n<p>正常设置AppBar</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/863ECC3A-A13F-4F21-863F-50BF13C4ED74_2/VnxFQTlor4UQocg7JUF9v6n66VVMipcthHmyQJvaz9cz/Image.png\" alt=\"image\"></p>\n<p>FractionallySizedBox:设置空间大小</p>\n<p>widthFatory:设置占用比例</p>\n<p>通过Stack与Column布局</p>\n<p>设置GestureDetector监听器</p>\n<p>监听所有的点按操作,使用自定义方法_printMsg</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/6E570C93-7E31-4D33-B6B6-0BCA3741EBEF_2/5nTC5MQJuqscn2BN3GTjIOcFNfaI8k5Dv3TiDX8P0SUz/Image.png\" alt=\"image\"></p>\n<p>添加一个容器Container设为点击目标</p>\n<p>设置大小 文字 以及 样式</p>\n<p>最后为输出每次操作对应的点按方式</p>\n<p><strong>实现效果</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/150C1A8B-9B96-454D-B693-835221955164_2/ntGTuWRMiSohvp9dR2cSQmhOHIDodeyNbWgNaxUmKpsz/Image.png\" alt=\"image\"></p>\n<p>点按后的效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/D9EDE697-97AE-4B3B-AB37-08269C8F5B1D_2/4cHyHuafc2JWYBwF3TJVg5nFlxSjjGiaCAtwcXfPjWYz/Image.png\" alt=\"image\"></p>\n<p><strong>2.点击事件</strong></p>\n<p>在Stack内调用Positioned类生成一个球</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/CA6F58F1-B50B-4772-9C77-821BF53B5843_2/CE1KPR9TxVujrbv02GxnqRDaCatrVvKjsfbQb7SqeH0z/Image.png\" alt=\"image\"></p>\n<p>初始化X轴与Y轴</p>\n<p>添加子元素：调用GestureDetector手势监听器</p>\n<p>设置点击事件触发方法改变球的X&amp;Y轴</p>\n<p>使用自定义方法_doMove(e)方法</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/795C08AC-A85D-4D7E-9636-3AFFEF1E90CA_2/U0qmrHcsGWVWPdayxxCiayw4lmF39j5KkuD9sTpLFJUz/Image.png\" alt=\"image\"></p>\n<p>添加子元素：Container容器</p>\n<p>设定容器长宽</p>\n<p>设定容器的装饰器：颜色amber黄</p>\n<p>容器的边角为直径的一半以此形成圆形的球</p>\n<p><strong>实现效果</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/E441C551-54A7-4BB5-B829-27B60A55DBB5_2/e0xXW4Gg6lw0lvOA26yEH2kk2E2l6bFyf9cPd2YQCcoz/Image.png\" alt=\"image\"></p>\n<p>长按球进行移动</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/8C717632-7754-4A90-8F74-29DC5AD2965B/E71B3DC2-4869-4207-A90B-88E36AE6326B_2/H5d8p29vFtJUwsSXFdxTZ7Q9Js2VSvFkKIqlr312jwkz/Image.png\" alt=\"image\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class GusturePage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;GusturePage&gt; createState() =&gt; _GusturePageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _GusturePageState extends State&lt;GusturePage&gt; &#123;</span><br><span class=\"line\">  String printString = &#x27;&#x27;;//</span><br><span class=\"line\">  double moveX=0, moveY=0;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(//使用MaterialApp包裹</span><br><span class=\"line\">      theme: ThemeData(//主题库</span><br><span class=\"line\">        primarySwatch: Colors.blue,//设置主题颜色 蓝色</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(//使用scaffold包裹</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: Text(&quot;如何检测用户手势以及处理点击事件？&quot;),//设置标题</span><br><span class=\"line\">          leading: GestureDetector(//设置顶栏左侧按钮</span><br><span class=\"line\">            onTap: ()&#123;//点击事件</span><br><span class=\"line\">              Navigator.pop(context);//pop离开某个页面</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            child: Icon(Icons.arrow_back),//leading左侧按钮的图标 arrow_back(返回)</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: FractionallySizedBox(//FractionallySizedBox控件会根据现有空间，来调整child的尺寸</span><br><span class=\"line\">          widthFactor: 1,//占满屏幕</span><br><span class=\"line\">          child: Stack(//层叠布局</span><br><span class=\"line\">            children: &lt;Widget&gt;[</span><br><span class=\"line\">              Column(//使Widget里面的组件能够上下排列</span><br><span class=\"line\">                children: &lt;Widget&gt;[</span><br><span class=\"line\">                  GestureDetector(//flutter内所有的手势都会委托给GestureDetector处理</span><br><span class=\"line\">                    onTap: () =&gt; _printMsg(&quot;点击&quot;),//单击事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onDoubleTap: () =&gt; _printMsg(&quot;双击&quot;),//双击事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onLongPress: () =&gt; _printMsg(&quot;长按&quot;),//长按事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onTapCancel: () =&gt; _printMsg(&quot;取消&quot;),//取消事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onTapUp: (e) =&gt; _printMsg(&quot;手指松开&quot;),//手指松开事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    onTapDown: (e) =&gt; _printMsg(&quot;手指按下&quot;),//手指按下事件 触发自定义方法 打印文字</span><br><span class=\"line\">                    child: Container(//添加容器</span><br><span class=\"line\">                      padding: EdgeInsets.all(60),//设置全部边距为60</span><br><span class=\"line\">                      decoration: BoxDecoration(color: Colors.blue,),//设置装饰器</span><br><span class=\"line\">                      child: const Text(&#x27;点我&#x27;,style: TextStyle(</span><br><span class=\"line\">                        fontSize: 36,</span><br><span class=\"line\">                        color: Colors.white,</span><br><span class=\"line\">                      )),</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                  Text(printString),</span><br><span class=\"line\">                ],</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              Positioned(//创建一个跟随用户手势的小球</span><br><span class=\"line\">                left: moveX,//设定X轴</span><br><span class=\"line\">                top: moveY, //设定Y轴</span><br><span class=\"line\">                child: GestureDetector(//手势监听器</span><br><span class=\"line\">                  onPanUpdate:(e) =&gt; _doMove(e),//跟随触控更新</span><br><span class=\"line\">                  child: Container(</span><br><span class=\"line\">                    width: 72,//宽72</span><br><span class=\"line\">                    height: 72,//长72</span><br><span class=\"line\">                    decoration: BoxDecoration(//装饰器</span><br><span class=\"line\">                      color:Colors.amber,//颜色 amber黄</span><br><span class=\"line\">                      borderRadius: BorderRadius.circular(36),//圆角等于直径的一般 形成圆形</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                ),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            ],</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  _printMsg(String msg) &#123;//自定义_printMsg方法，接收一个字符串</span><br><span class=\"line\">    setState(()&#123;</span><br><span class=\"line\">      printString += &#x27; ,$msg&#x27;;//字符串拼接</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  _doMove(DragUpdateDetails e) &#123;//球移动的方法</span><br><span class=\"line\">    setState(() &#123;</span><br><span class=\"line\">      moveY += e.delta.dy;//更新每次移动的位置Y</span><br><span class=\"line\">      moveX += e.delta.dx;//更新每次移动的位置X</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"flutter study day 5 了解flutter布局开发以及常用组件","date":"2022-04-28T11:46:42.000Z","_content":"![](https://tva3.sinaimg.cn/large/0072Vf1pgy1foxlnx4mk0j31hc0u07k9.jpg)\n<!-- more -->\n\nflutter布局开发常用组件\n====================\n\n**布局相关三大控件**\n-----------------\n\n### **Container**\n\n\n约束子节点，居中，内边距、宽高、颜色、背景、装饰器\n\n### **RenderObjectWidget**\n\n**分为单节点与多节点**\n\n**SingleChildRenderObjectWidget-单节点布局组件**\n\n**Opacity-透明度**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/D6AA6BB8-601D-43E8-81FC-3B509291B1E6_2/Amzmyvq5ezo5rphvTPGF3gwbzZvnDEtIVm7VqcE7h5cz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/9C1CD087-FAEB-4CEC-8A91-2873F3917585_2/ed1hyHYygq2FPd68c7tTZT2tcJaNS6ZAOSVit6t4MQEz/Image.png)\n\n**ClipOval-裁剪圆形**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/5514C932-E1B8-46E4-9C62-8B888980E885_2/ATWLKkoJlDrd6hEnsHyFUe4qAPmQRuVsRRXxSir0O4wz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/1331EA4B-59FD-4E42-97D7-81DE2AD8594F_2/LjvHqNjfIDZUQimtOpwoyV7yXuxJLuYZk2vR6VQbVG4z/Image.png)\n\n**ClipRect-裁剪方形**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/4BB25D51-01B4-461F-9F40-62C86E5CC50A_2/rCNdRRhLxYZ1H0X4Hx9UG7PFFqHGpkmN1Z3zm3EuAPwz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/EF7CBBCA-EB89-4422-BFDD-BB8E666C9F00_2/gBKslBux6dcxqHqDwltXvmKAmkRR9Gwry88872yvXZAz/Image.png)\n\n**PhysicalModel-显示不同形状**\n\n使用PhysicalModel包裹需要裁剪的子节点加以修饰\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/50DFAE9F-E869-456D-A58E-927BAA6E0868_2/yxVUqshTlPFxqJp0SWBZDwGYCyysn5oPfE9uEd4qax0z/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/80F3255C-F899-42F9-873D-9146B49F8E7F_2/pXZ3xC5ILtfk6J7SoSXYB1px1rtwA4sXU15tYW4ALtcz/Image.png)\n\n**Align-Center-居中**\n\n……\n\n**Padding-内边距设置**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/2C416E08-0C38-4F64-B7ED-650735A841B5_2/5GVoE36oxoSzDJ8xaZbeMrRxxVtVBxfFSdZqSRfh01sz/Image.png)\n\n**SizeBox-约束布局大小**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/019C4AF6-FFD5-4F97-BB45-F6420519FB40_2/wdGTZXmFB3h4Fpjo3rH764ZVJaNew8tCaxQJSVeKVNwz/Image.png)\n\n**FractionallySizeBox-约束水平方向-垂直方向**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/FAF6FC41-2EB5-4D06-BD30-ED5D41BDAC39_2/JfIeIUXdExN8Jfk1EqJrefjez3ywqjP5vxuFx1J6UsAz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/5877A110-BF29-4764-B910-2CD8FE3C25DE_2/OelyCOCi6E9WgMhRgGQU7Q9xvsfcy7BiVZW1KUmxJywz/Image.png)\n\n**MuitiChildRenderObjectWidget-多节点布局组件**\n\n**Stack-层叠布局组件**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/FCCCBAEA-9EAA-4B0A-A1EF-1BC8174B7501_2/eaPfqGZPr1TcRR4FPhkqlSLIpuXyILxjPq6ko2hTfqIz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/D70F9D35-706B-41CB-8490-D5A0FD383B35_2/IlN5ayq3sLO482z6YJYxquAOZM0gmXyUnxXETnQ6yBoz/Image.png)\n\n**Flex 布局组件**\n\n    Column-从上到下X轴\n\n    Row-从左向右Y轴\n\n**Warp-从左到右（会自动换行）**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/1BDAD04E-452C-4C7E-8579-A636D0E2C533_2/hqFS9tvhPHKUyAcF1xvMszmA0xHutCksEMlwGgmOzfYz/Image.png)\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/75E1F882-44D9-433D-B4F6-01D5C3FBB82A_2/fl9Mr0P5VEAWJWNX5NO7vB3OJT60baUmu2gm2Hk4yWAz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/363097B3-CACC-418C-9146-0ACEFB61AB07_2/FUYvwPG6b62T8Hr3DTJFFjqTrjveSwwmxIjMVc7GNxEz/Image.png)\n\n**Flow-很少用**\n\n### **ParentDataWidget**\n\n**Positioned绝对定位布局**\n\n固定view位置通常与stack搭配使用\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/345BE87A-CF30-42A8-8D48-AB996A007151_2/qfGvIyeZxoQHjDIcDbbxyMh7tGcnLKtep83fWH6yq6sz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/738E1056-54A5-4644-975D-5342458392BC_2/pmx9yPGUubFE87CU8g5dKPP34vU5SmMYNJgG1J3vRJYz/Image.png)\n\n**Flexible-Expanded 流式布局**\n可以展开布局大小的组件\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/CBE3F5A1-98AA-4F16-AE74-C7E0A5B78579_2/lrFVAvPA6pQkDDe5E36Mcmjy6gAqiDZxQJgtDu0qeMAz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/84531613-25BA-4CE7-8413-74320CBEDBAC_2/cQheuY6XXxE9GqMyWQgGlvRvM1rbza0ta93fc4KDqGQz/Image.png)\n\n代码示例：\n```other\nimport 'package:flutter/material.dart';\n//使用flutter布局组件\nclass FlutterLayoutPage extends StatefulWidget {\n  @override\n  State<FlutterLayoutPage> createState() => _FlutterLayoutPage();\n}\n\nclass _FlutterLayoutPage extends State<FlutterLayoutPage> {\n  int _currentIndex = 0;//初始化当前选中页面 默认为0\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Stateful基础组件',\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: Scaffold(\n        appBar: AppBar(\n          title: const Text(\"Stateful基础组件\"),//标题\n        ),\n        //底部导航栏\n        bottomNavigationBar: BottomNavigationBar(\n          currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值\n          onTap: (index){//接收一个index，点击的时候会自动切换到该索引\n            setState(() {//使用setState改变初始化的当前索引的值\n              _currentIndex = index;\n            });\n          },\n          items: const [\n            //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个\n            BottomNavigationBarItem(//第一个item\n                icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态\n                activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态\n                label: '首页'//第一个item的显示名称\n            ),\n            BottomNavigationBarItem(//第二个item\n                icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态\n                activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态\n                label: '列表'//第二个item的显示名称\n            ),\n          ],),\n\n        floatingActionButton: const FloatingActionButton(\n          onPressed: null,\n          child: Text('点我'),\n        ),\n        body: _currentIndex==0\n            ?\n        RefreshIndicator(\n            child:\n            ListView(\n              children: <Widget>[\n                Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容\n                  decoration: const BoxDecoration(color: Colors.white10),//装饰器\n                  alignment: Alignment.center,//居中显示\n                  child: Column(//上下排列组件\n                    children: <Widget>[//子节点组件\n                      Row(//从左到右布局\n                        children: <Widget>[//Row的子节点\n                          ClipOval(//裁剪圆形\n                            child: SizedBox(//约束子节点大小\n                              width: 100,//宽100\n                              height: 100,//高100\n                              child: Image.network('https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg'),\n                              //显示网络图片\n                            ),\n                          ),\n                          Padding(\n                            padding: EdgeInsets.all(10),//设置所有边距为10\n                            child: ClipRect(//裁剪成方形\n                              child: Opacity(//为子节点设置透明度\n                                opacity: 0.5,//50%透明度\n                                child: Image.network(\n                                    'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                                    width: 100,\n                                    height: 100,\n                                ),\n                              ),\n                            ),\n                          ),\n                        ],\n                      ),\n                      // Image.network(//插入网络图片\n                      //   'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                      //   //设置图片url\n                      //   height: 300,//高\n                      //   width: 250,//宽\n                      // ),//加载网络图片\n                      const TextField(//文本输入框\n                        decoration: InputDecoration(\n                          contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0\n                          hintText: '请输入',//hintText提示文案\n                          hintStyle: TextStyle(\n                            fontSize: 20,\n                          ),//设置提示文案的样式\n                        ),//使用decoration装饰器 定义文本输入框样式\n                      ),\n                      //PageView页面预览的使用\n                      //使用Container约束大小\n                      Container(\n                        height: 100,\n                        margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10\n                        child: PhysicalModel(//显示不同形状组件\n                          color: Colors.transparent,//透明显示颜色 透明\n                          borderRadius: BorderRadius.circular(20),//裁剪成圆角半径\n                          clipBehavior: Clip.antiAlias,//抗锯齿\n                          child: PageView(\n                            children: <Widget>[\n                              _item('Page1',Colors.purple),//接收两个参数（标题，颜色）\n                              _item('Page2',Colors.yellow),//接收两个参数（标题，颜色）\n                              _item('Page3',Colors.green),//接收两个参数（标题，颜色）\n                            ],\n                        ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                Column(//增加一行布局\n                  children: <Widget>[//添加子节点\n                    FractionallySizedBox(//约束水平方向-垂直方向组件\n                      widthFactor: 1,//默认宽度为1\n                        child: Container(//设置子节点容器\n                          decoration: BoxDecoration(color: Colors.greenAccent),//设置容器背景颜色\n                          child: Text('宽度撑满'),//设置容器内子节点\n                        ),\n                    ),\n                  ],\n                ),\n                Stack(//实现叠加效果组件\n                  children: <Widget>[//添加子节点\n                    Image.network(\n                      'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                      width: 100,\n                      height: 100,\n                    ),//子节点组件1\n                    Positioned(//定位布局\n                      right: 0,\n                      bottom: 0,\n                        //如上写法：Positioned设置定位在做下方\n                        child: Image.network(\n                          'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                          width: 100,\n                          height: 100,\n                        )//子节点组件2\n                    ),\n                  ],\n                ),\n                Wrap(//从左到右排列 自动换行\n                  spacing: 6,//水平j安居\n                  runSpacing: 10,//垂直间距\n                  children: <Widget>[\n                    _chip('flutter'),//调用_chip方法（传入label）\n                    _chip('i'),\n                    _chip('love'),\n                    _chip('you'),\n                    _chip('too much!'),\n                  ],\n                )\n              ],\n            ),\n            onRefresh: _handleRefresh)\n            :\n        Column(\n          children: <Widget>[\n            Text('列表'),//第一行显示内容\n            Expanded(\n              child:\n              Container(//设置Container的decoration装饰器\n                decoration: BoxDecoration(color: Colors.greenAccent),\n                //使用BoxDecoration约束背景颜色\n                child: Text('拉伸高度填满'),\n                //第二行显示内容 使用Expanded后第二行延伸Y轴进行填满\n              ),\n            )\n          ],\n        )//_currentIndex==0?如果不等于0 显示:后面的内容\n      ),\n    );\n  }\n  Future<Null> _handleRefresh() async{ //asyc设置异步运行\n    await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒\n    return null;//返回一个空值\n  }\n}\n\n_chip(String label) {//创建_chip方法，接收参数label\n  return Chip(label: Text(label),//返回格式化后的label\n    avatar: CircleAvatar(//添加圆角头像\n      backgroundColor: Colors.blue.shade900,//设置透明度900\n      child: Text (\n        label.substring(0,1),//取label的第一个字符\n        style: const TextStyle(fontSize: 10,),//样式：文本样式（字体大小10）\n      ),\n    ),\n  );\n}\n\n_item(String title, Color color) {\n  return Container(//返回一个Container装饰器包裹住\n    alignment: Alignment.center,//设置居中方式 居中\n    decoration: BoxDecoration(\n      color: color,//装饰器背景色等于传入的color参数\n    ),//设置装饰器样式\n    child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),),\n  );\n}\n\n```\n\n","source":"_posts/flutter-study-day-5-了解flutter布局开发以及常用组件.md","raw":"---\ntitle: flutter study day 5 了解flutter布局开发以及常用组件\ndate: 2022-04-28 19:46:42\ntags: [flutter]\ncategories: flutter\n---\n![](https://tva3.sinaimg.cn/large/0072Vf1pgy1foxlnx4mk0j31hc0u07k9.jpg)\n<!-- more -->\n\nflutter布局开发常用组件\n====================\n\n**布局相关三大控件**\n-----------------\n\n### **Container**\n\n\n约束子节点，居中，内边距、宽高、颜色、背景、装饰器\n\n### **RenderObjectWidget**\n\n**分为单节点与多节点**\n\n**SingleChildRenderObjectWidget-单节点布局组件**\n\n**Opacity-透明度**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/D6AA6BB8-601D-43E8-81FC-3B509291B1E6_2/Amzmyvq5ezo5rphvTPGF3gwbzZvnDEtIVm7VqcE7h5cz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/9C1CD087-FAEB-4CEC-8A91-2873F3917585_2/ed1hyHYygq2FPd68c7tTZT2tcJaNS6ZAOSVit6t4MQEz/Image.png)\n\n**ClipOval-裁剪圆形**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/5514C932-E1B8-46E4-9C62-8B888980E885_2/ATWLKkoJlDrd6hEnsHyFUe4qAPmQRuVsRRXxSir0O4wz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/1331EA4B-59FD-4E42-97D7-81DE2AD8594F_2/LjvHqNjfIDZUQimtOpwoyV7yXuxJLuYZk2vR6VQbVG4z/Image.png)\n\n**ClipRect-裁剪方形**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/4BB25D51-01B4-461F-9F40-62C86E5CC50A_2/rCNdRRhLxYZ1H0X4Hx9UG7PFFqHGpkmN1Z3zm3EuAPwz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/EF7CBBCA-EB89-4422-BFDD-BB8E666C9F00_2/gBKslBux6dcxqHqDwltXvmKAmkRR9Gwry88872yvXZAz/Image.png)\n\n**PhysicalModel-显示不同形状**\n\n使用PhysicalModel包裹需要裁剪的子节点加以修饰\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/50DFAE9F-E869-456D-A58E-927BAA6E0868_2/yxVUqshTlPFxqJp0SWBZDwGYCyysn5oPfE9uEd4qax0z/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/80F3255C-F899-42F9-873D-9146B49F8E7F_2/pXZ3xC5ILtfk6J7SoSXYB1px1rtwA4sXU15tYW4ALtcz/Image.png)\n\n**Align-Center-居中**\n\n……\n\n**Padding-内边距设置**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/2C416E08-0C38-4F64-B7ED-650735A841B5_2/5GVoE36oxoSzDJ8xaZbeMrRxxVtVBxfFSdZqSRfh01sz/Image.png)\n\n**SizeBox-约束布局大小**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/019C4AF6-FFD5-4F97-BB45-F6420519FB40_2/wdGTZXmFB3h4Fpjo3rH764ZVJaNew8tCaxQJSVeKVNwz/Image.png)\n\n**FractionallySizeBox-约束水平方向-垂直方向**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/FAF6FC41-2EB5-4D06-BD30-ED5D41BDAC39_2/JfIeIUXdExN8Jfk1EqJrefjez3ywqjP5vxuFx1J6UsAz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/5877A110-BF29-4764-B910-2CD8FE3C25DE_2/OelyCOCi6E9WgMhRgGQU7Q9xvsfcy7BiVZW1KUmxJywz/Image.png)\n\n**MuitiChildRenderObjectWidget-多节点布局组件**\n\n**Stack-层叠布局组件**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/FCCCBAEA-9EAA-4B0A-A1EF-1BC8174B7501_2/eaPfqGZPr1TcRR4FPhkqlSLIpuXyILxjPq6ko2hTfqIz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/D70F9D35-706B-41CB-8490-D5A0FD383B35_2/IlN5ayq3sLO482z6YJYxquAOZM0gmXyUnxXETnQ6yBoz/Image.png)\n\n**Flex 布局组件**\n\n    Column-从上到下X轴\n\n    Row-从左向右Y轴\n\n**Warp-从左到右（会自动换行）**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/1BDAD04E-452C-4C7E-8579-A636D0E2C533_2/hqFS9tvhPHKUyAcF1xvMszmA0xHutCksEMlwGgmOzfYz/Image.png)\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/75E1F882-44D9-433D-B4F6-01D5C3FBB82A_2/fl9Mr0P5VEAWJWNX5NO7vB3OJT60baUmu2gm2Hk4yWAz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/363097B3-CACC-418C-9146-0ACEFB61AB07_2/FUYvwPG6b62T8Hr3DTJFFjqTrjveSwwmxIjMVc7GNxEz/Image.png)\n\n**Flow-很少用**\n\n### **ParentDataWidget**\n\n**Positioned绝对定位布局**\n\n固定view位置通常与stack搭配使用\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/345BE87A-CF30-42A8-8D48-AB996A007151_2/qfGvIyeZxoQHjDIcDbbxyMh7tGcnLKtep83fWH6yq6sz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/738E1056-54A5-4644-975D-5342458392BC_2/pmx9yPGUubFE87CU8g5dKPP34vU5SmMYNJgG1J3vRJYz/Image.png)\n\n**Flexible-Expanded 流式布局**\n可以展开布局大小的组件\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/CBE3F5A1-98AA-4F16-AE74-C7E0A5B78579_2/lrFVAvPA6pQkDDe5E36Mcmjy6gAqiDZxQJgtDu0qeMAz/Image.png)\n\n实现效果\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/84531613-25BA-4CE7-8413-74320CBEDBAC_2/cQheuY6XXxE9GqMyWQgGlvRvM1rbza0ta93fc4KDqGQz/Image.png)\n\n代码示例：\n```other\nimport 'package:flutter/material.dart';\n//使用flutter布局组件\nclass FlutterLayoutPage extends StatefulWidget {\n  @override\n  State<FlutterLayoutPage> createState() => _FlutterLayoutPage();\n}\n\nclass _FlutterLayoutPage extends State<FlutterLayoutPage> {\n  int _currentIndex = 0;//初始化当前选中页面 默认为0\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Stateful基础组件',\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: Scaffold(\n        appBar: AppBar(\n          title: const Text(\"Stateful基础组件\"),//标题\n        ),\n        //底部导航栏\n        bottomNavigationBar: BottomNavigationBar(\n          currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值\n          onTap: (index){//接收一个index，点击的时候会自动切换到该索引\n            setState(() {//使用setState改变初始化的当前索引的值\n              _currentIndex = index;\n            });\n          },\n          items: const [\n            //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个\n            BottomNavigationBarItem(//第一个item\n                icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态\n                activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态\n                label: '首页'//第一个item的显示名称\n            ),\n            BottomNavigationBarItem(//第二个item\n                icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态\n                activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态\n                label: '列表'//第二个item的显示名称\n            ),\n          ],),\n\n        floatingActionButton: const FloatingActionButton(\n          onPressed: null,\n          child: Text('点我'),\n        ),\n        body: _currentIndex==0\n            ?\n        RefreshIndicator(\n            child:\n            ListView(\n              children: <Widget>[\n                Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容\n                  decoration: const BoxDecoration(color: Colors.white10),//装饰器\n                  alignment: Alignment.center,//居中显示\n                  child: Column(//上下排列组件\n                    children: <Widget>[//子节点组件\n                      Row(//从左到右布局\n                        children: <Widget>[//Row的子节点\n                          ClipOval(//裁剪圆形\n                            child: SizedBox(//约束子节点大小\n                              width: 100,//宽100\n                              height: 100,//高100\n                              child: Image.network('https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg'),\n                              //显示网络图片\n                            ),\n                          ),\n                          Padding(\n                            padding: EdgeInsets.all(10),//设置所有边距为10\n                            child: ClipRect(//裁剪成方形\n                              child: Opacity(//为子节点设置透明度\n                                opacity: 0.5,//50%透明度\n                                child: Image.network(\n                                    'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                                    width: 100,\n                                    height: 100,\n                                ),\n                              ),\n                            ),\n                          ),\n                        ],\n                      ),\n                      // Image.network(//插入网络图片\n                      //   'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                      //   //设置图片url\n                      //   height: 300,//高\n                      //   width: 250,//宽\n                      // ),//加载网络图片\n                      const TextField(//文本输入框\n                        decoration: InputDecoration(\n                          contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0\n                          hintText: '请输入',//hintText提示文案\n                          hintStyle: TextStyle(\n                            fontSize: 20,\n                          ),//设置提示文案的样式\n                        ),//使用decoration装饰器 定义文本输入框样式\n                      ),\n                      //PageView页面预览的使用\n                      //使用Container约束大小\n                      Container(\n                        height: 100,\n                        margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10\n                        child: PhysicalModel(//显示不同形状组件\n                          color: Colors.transparent,//透明显示颜色 透明\n                          borderRadius: BorderRadius.circular(20),//裁剪成圆角半径\n                          clipBehavior: Clip.antiAlias,//抗锯齿\n                          child: PageView(\n                            children: <Widget>[\n                              _item('Page1',Colors.purple),//接收两个参数（标题，颜色）\n                              _item('Page2',Colors.yellow),//接收两个参数（标题，颜色）\n                              _item('Page3',Colors.green),//接收两个参数（标题，颜色）\n                            ],\n                        ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n                Column(//增加一行布局\n                  children: <Widget>[//添加子节点\n                    FractionallySizedBox(//约束水平方向-垂直方向组件\n                      widthFactor: 1,//默认宽度为1\n                        child: Container(//设置子节点容器\n                          decoration: BoxDecoration(color: Colors.greenAccent),//设置容器背景颜色\n                          child: Text('宽度撑满'),//设置容器内子节点\n                        ),\n                    ),\n                  ],\n                ),\n                Stack(//实现叠加效果组件\n                  children: <Widget>[//添加子节点\n                    Image.network(\n                      'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                      width: 100,\n                      height: 100,\n                    ),//子节点组件1\n                    Positioned(//定位布局\n                      right: 0,\n                      bottom: 0,\n                        //如上写法：Positioned设置定位在做下方\n                        child: Image.network(\n                          'https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg',\n                          width: 100,\n                          height: 100,\n                        )//子节点组件2\n                    ),\n                  ],\n                ),\n                Wrap(//从左到右排列 自动换行\n                  spacing: 6,//水平j安居\n                  runSpacing: 10,//垂直间距\n                  children: <Widget>[\n                    _chip('flutter'),//调用_chip方法（传入label）\n                    _chip('i'),\n                    _chip('love'),\n                    _chip('you'),\n                    _chip('too much!'),\n                  ],\n                )\n              ],\n            ),\n            onRefresh: _handleRefresh)\n            :\n        Column(\n          children: <Widget>[\n            Text('列表'),//第一行显示内容\n            Expanded(\n              child:\n              Container(//设置Container的decoration装饰器\n                decoration: BoxDecoration(color: Colors.greenAccent),\n                //使用BoxDecoration约束背景颜色\n                child: Text('拉伸高度填满'),\n                //第二行显示内容 使用Expanded后第二行延伸Y轴进行填满\n              ),\n            )\n          ],\n        )//_currentIndex==0?如果不等于0 显示:后面的内容\n      ),\n    );\n  }\n  Future<Null> _handleRefresh() async{ //asyc设置异步运行\n    await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒\n    return null;//返回一个空值\n  }\n}\n\n_chip(String label) {//创建_chip方法，接收参数label\n  return Chip(label: Text(label),//返回格式化后的label\n    avatar: CircleAvatar(//添加圆角头像\n      backgroundColor: Colors.blue.shade900,//设置透明度900\n      child: Text (\n        label.substring(0,1),//取label的第一个字符\n        style: const TextStyle(fontSize: 10,),//样式：文本样式（字体大小10）\n      ),\n    ),\n  );\n}\n\n_item(String title, Color color) {\n  return Container(//返回一个Container装饰器包裹住\n    alignment: Alignment.center,//设置居中方式 居中\n    decoration: BoxDecoration(\n      color: color,//装饰器背景色等于传入的color参数\n    ),//设置装饰器样式\n    child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),),\n  );\n}\n\n```\n\n","slug":"flutter-study-day-5-了解flutter布局开发以及常用组件","published":1,"updated":"2022-05-13T07:56:44.272Z","_id":"cl341xpva000abwx1hy29ec43","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://tva3.sinaimg.cn/large/0072Vf1pgy1foxlnx4mk0j31hc0u07k9.jpg\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"flutter布局开发常用组件\"><a href=\"#flutter布局开发常用组件\" class=\"headerlink\" title=\"flutter布局开发常用组件\"></a>flutter布局开发常用组件</h1><h2 id=\"布局相关三大控件\"><a href=\"#布局相关三大控件\" class=\"headerlink\" title=\"布局相关三大控件\"></a><strong>布局相关三大控件</strong></h2><h3 id=\"Container\"><a href=\"#Container\" class=\"headerlink\" title=\"Container\"></a><strong>Container</strong></h3><p>约束子节点，居中，内边距、宽高、颜色、背景、装饰器</p>\n<h3 id=\"RenderObjectWidget\"><a href=\"#RenderObjectWidget\" class=\"headerlink\" title=\"RenderObjectWidget\"></a><strong>RenderObjectWidget</strong></h3><p><strong>分为单节点与多节点</strong></p>\n<p><strong>SingleChildRenderObjectWidget-单节点布局组件</strong></p>\n<p><strong>Opacity-透明度</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/D6AA6BB8-601D-43E8-81FC-3B509291B1E6_2/Amzmyvq5ezo5rphvTPGF3gwbzZvnDEtIVm7VqcE7h5cz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/9C1CD087-FAEB-4CEC-8A91-2873F3917585_2/ed1hyHYygq2FPd68c7tTZT2tcJaNS6ZAOSVit6t4MQEz/Image.png\" alt=\"image\"></p>\n<p><strong>ClipOval-裁剪圆形</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/5514C932-E1B8-46E4-9C62-8B888980E885_2/ATWLKkoJlDrd6hEnsHyFUe4qAPmQRuVsRRXxSir0O4wz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/1331EA4B-59FD-4E42-97D7-81DE2AD8594F_2/LjvHqNjfIDZUQimtOpwoyV7yXuxJLuYZk2vR6VQbVG4z/Image.png\" alt=\"image\"></p>\n<p><strong>ClipRect-裁剪方形</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/4BB25D51-01B4-461F-9F40-62C86E5CC50A_2/rCNdRRhLxYZ1H0X4Hx9UG7PFFqHGpkmN1Z3zm3EuAPwz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/EF7CBBCA-EB89-4422-BFDD-BB8E666C9F00_2/gBKslBux6dcxqHqDwltXvmKAmkRR9Gwry88872yvXZAz/Image.png\" alt=\"image\"></p>\n<p><strong>PhysicalModel-显示不同形状</strong></p>\n<p>使用PhysicalModel包裹需要裁剪的子节点加以修饰</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/50DFAE9F-E869-456D-A58E-927BAA6E0868_2/yxVUqshTlPFxqJp0SWBZDwGYCyysn5oPfE9uEd4qax0z/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/80F3255C-F899-42F9-873D-9146B49F8E7F_2/pXZ3xC5ILtfk6J7SoSXYB1px1rtwA4sXU15tYW4ALtcz/Image.png\" alt=\"image\"></p>\n<p><strong>Align-Center-居中</strong></p>\n<p>……</p>\n<p><strong>Padding-内边距设置</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/2C416E08-0C38-4F64-B7ED-650735A841B5_2/5GVoE36oxoSzDJ8xaZbeMrRxxVtVBxfFSdZqSRfh01sz/Image.png\" alt=\"image\"></p>\n<p><strong>SizeBox-约束布局大小</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/019C4AF6-FFD5-4F97-BB45-F6420519FB40_2/wdGTZXmFB3h4Fpjo3rH764ZVJaNew8tCaxQJSVeKVNwz/Image.png\" alt=\"image\"></p>\n<p><strong>FractionallySizeBox-约束水平方向-垂直方向</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/FAF6FC41-2EB5-4D06-BD30-ED5D41BDAC39_2/JfIeIUXdExN8Jfk1EqJrefjez3ywqjP5vxuFx1J6UsAz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/5877A110-BF29-4764-B910-2CD8FE3C25DE_2/OelyCOCi6E9WgMhRgGQU7Q9xvsfcy7BiVZW1KUmxJywz/Image.png\" alt=\"image\"></p>\n<p><strong>MuitiChildRenderObjectWidget-多节点布局组件</strong></p>\n<p><strong>Stack-层叠布局组件</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/FCCCBAEA-9EAA-4B0A-A1EF-1BC8174B7501_2/eaPfqGZPr1TcRR4FPhkqlSLIpuXyILxjPq6ko2hTfqIz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/D70F9D35-706B-41CB-8490-D5A0FD383B35_2/IlN5ayq3sLO482z6YJYxquAOZM0gmXyUnxXETnQ6yBoz/Image.png\" alt=\"image\"></p>\n<p><strong>Flex 布局组件</strong></p>\n<pre><code>Column-从上到下X轴\n\nRow-从左向右Y轴\n</code></pre>\n<p><strong>Warp-从左到右（会自动换行）</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/1BDAD04E-452C-4C7E-8579-A636D0E2C533_2/hqFS9tvhPHKUyAcF1xvMszmA0xHutCksEMlwGgmOzfYz/Image.png\" alt=\"image\"></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/75E1F882-44D9-433D-B4F6-01D5C3FBB82A_2/fl9Mr0P5VEAWJWNX5NO7vB3OJT60baUmu2gm2Hk4yWAz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/363097B3-CACC-418C-9146-0ACEFB61AB07_2/FUYvwPG6b62T8Hr3DTJFFjqTrjveSwwmxIjMVc7GNxEz/Image.png\" alt=\"image\"></p>\n<p><strong>Flow-很少用</strong></p>\n<h3 id=\"ParentDataWidget\"><a href=\"#ParentDataWidget\" class=\"headerlink\" title=\"ParentDataWidget\"></a><strong>ParentDataWidget</strong></h3><p><strong>Positioned绝对定位布局</strong></p>\n<p>固定view位置通常与stack搭配使用</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/345BE87A-CF30-42A8-8D48-AB996A007151_2/qfGvIyeZxoQHjDIcDbbxyMh7tGcnLKtep83fWH6yq6sz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/738E1056-54A5-4644-975D-5342458392BC_2/pmx9yPGUubFE87CU8g5dKPP34vU5SmMYNJgG1J3vRJYz/Image.png\" alt=\"image\"></p>\n<p><strong>Flexible-Expanded 流式布局</strong><br>可以展开布局大小的组件</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/CBE3F5A1-98AA-4F16-AE74-C7E0A5B78579_2/lrFVAvPA6pQkDDe5E36Mcmjy6gAqiDZxQJgtDu0qeMAz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/84531613-25BA-4CE7-8413-74320CBEDBAC_2/cQheuY6XXxE9GqMyWQgGlvRvM1rbza0ta93fc4KDqGQz/Image.png\" alt=\"image\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\">//使用flutter布局组件</span><br><span class=\"line\">class FlutterLayoutPage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;FlutterLayoutPage&gt; createState() =&gt; _FlutterLayoutPage();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _FlutterLayoutPage extends State&lt;FlutterLayoutPage&gt; &#123;</span><br><span class=\"line\">  int _currentIndex = 0;//初始化当前选中页面 默认为0</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &#x27;Stateful基础组件&#x27;,</span><br><span class=\"line\">      theme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.blue,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: const Text(&quot;Stateful基础组件&quot;),//标题</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        //底部导航栏</span><br><span class=\"line\">        bottomNavigationBar: BottomNavigationBar(</span><br><span class=\"line\">          currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值</span><br><span class=\"line\">          onTap: (index)&#123;//接收一个index，点击的时候会自动切换到该索引</span><br><span class=\"line\">            setState(() &#123;//使用setState改变初始化的当前索引的值</span><br><span class=\"line\">              _currentIndex = index;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          items: const [</span><br><span class=\"line\">            //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个</span><br><span class=\"line\">            BottomNavigationBarItem(//第一个item</span><br><span class=\"line\">                icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态</span><br><span class=\"line\">                activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态</span><br><span class=\"line\">                label: &#x27;首页&#x27;//第一个item的显示名称</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            BottomNavigationBarItem(//第二个item</span><br><span class=\"line\">                icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态</span><br><span class=\"line\">                activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态</span><br><span class=\"line\">                label: &#x27;列表&#x27;//第二个item的显示名称</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ],),</span><br><span class=\"line\"></span><br><span class=\"line\">        floatingActionButton: const FloatingActionButton(</span><br><span class=\"line\">          onPressed: null,</span><br><span class=\"line\">          child: Text(&#x27;点我&#x27;),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: _currentIndex==0</span><br><span class=\"line\">            ?</span><br><span class=\"line\">        RefreshIndicator(</span><br><span class=\"line\">            child:</span><br><span class=\"line\">            ListView(</span><br><span class=\"line\">              children: &lt;Widget&gt;[</span><br><span class=\"line\">                Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容</span><br><span class=\"line\">                  decoration: const BoxDecoration(color: Colors.white10),//装饰器</span><br><span class=\"line\">                  alignment: Alignment.center,//居中显示</span><br><span class=\"line\">                  child: Column(//上下排列组件</span><br><span class=\"line\">                    children: &lt;Widget&gt;[//子节点组件</span><br><span class=\"line\">                      Row(//从左到右布局</span><br><span class=\"line\">                        children: &lt;Widget&gt;[//Row的子节点</span><br><span class=\"line\">                          ClipOval(//裁剪圆形</span><br><span class=\"line\">                            child: SizedBox(//约束子节点大小</span><br><span class=\"line\">                              width: 100,//宽100</span><br><span class=\"line\">                              height: 100,//高100</span><br><span class=\"line\">                              child: Image.network(&#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;),</span><br><span class=\"line\">                              //显示网络图片</span><br><span class=\"line\">                            ),</span><br><span class=\"line\">                          ),</span><br><span class=\"line\">                          Padding(</span><br><span class=\"line\">                            padding: EdgeInsets.all(10),//设置所有边距为10</span><br><span class=\"line\">                            child: ClipRect(//裁剪成方形</span><br><span class=\"line\">                              child: Opacity(//为子节点设置透明度</span><br><span class=\"line\">                                opacity: 0.5,//50%透明度</span><br><span class=\"line\">                                child: Image.network(</span><br><span class=\"line\">                                    &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                                    width: 100,</span><br><span class=\"line\">                                    height: 100,</span><br><span class=\"line\">                                ),</span><br><span class=\"line\">                              ),</span><br><span class=\"line\">                            ),</span><br><span class=\"line\">                          ),</span><br><span class=\"line\">                        ],</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                      // Image.network(//插入网络图片</span><br><span class=\"line\">                      //   &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                      //   //设置图片url</span><br><span class=\"line\">                      //   height: 300,//高</span><br><span class=\"line\">                      //   width: 250,//宽</span><br><span class=\"line\">                      // ),//加载网络图片</span><br><span class=\"line\">                      const TextField(//文本输入框</span><br><span class=\"line\">                        decoration: InputDecoration(</span><br><span class=\"line\">                          contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0</span><br><span class=\"line\">                          hintText: &#x27;请输入&#x27;,//hintText提示文案</span><br><span class=\"line\">                          hintStyle: TextStyle(</span><br><span class=\"line\">                            fontSize: 20,</span><br><span class=\"line\">                          ),//设置提示文案的样式</span><br><span class=\"line\">                        ),//使用decoration装饰器 定义文本输入框样式</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                      //PageView页面预览的使用</span><br><span class=\"line\">                      //使用Container约束大小</span><br><span class=\"line\">                      Container(</span><br><span class=\"line\">                        height: 100,</span><br><span class=\"line\">                        margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10</span><br><span class=\"line\">                        child: PhysicalModel(//显示不同形状组件</span><br><span class=\"line\">                          color: Colors.transparent,//透明显示颜色 透明</span><br><span class=\"line\">                          borderRadius: BorderRadius.circular(20),//裁剪成圆角半径</span><br><span class=\"line\">                          clipBehavior: Clip.antiAlias,//抗锯齿</span><br><span class=\"line\">                          child: PageView(</span><br><span class=\"line\">                            children: &lt;Widget&gt;[</span><br><span class=\"line\">                              _item(&#x27;Page1&#x27;,Colors.purple),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                              _item(&#x27;Page2&#x27;,Colors.yellow),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                              _item(&#x27;Page3&#x27;,Colors.green),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                            ],</span><br><span class=\"line\">                        ),</span><br><span class=\"line\">                        ),</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                    ],</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                Column(//增加一行布局</span><br><span class=\"line\">                  children: &lt;Widget&gt;[//添加子节点</span><br><span class=\"line\">                    FractionallySizedBox(//约束水平方向-垂直方向组件</span><br><span class=\"line\">                      widthFactor: 1,//默认宽度为1</span><br><span class=\"line\">                        child: Container(//设置子节点容器</span><br><span class=\"line\">                          decoration: BoxDecoration(color: Colors.greenAccent),//设置容器背景颜色</span><br><span class=\"line\">                          child: Text(&#x27;宽度撑满&#x27;),//设置容器内子节点</span><br><span class=\"line\">                        ),</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                Stack(//实现叠加效果组件</span><br><span class=\"line\">                  children: &lt;Widget&gt;[//添加子节点</span><br><span class=\"line\">                    Image.network(</span><br><span class=\"line\">                      &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                      width: 100,</span><br><span class=\"line\">                      height: 100,</span><br><span class=\"line\">                    ),//子节点组件1</span><br><span class=\"line\">                    Positioned(//定位布局</span><br><span class=\"line\">                      right: 0,</span><br><span class=\"line\">                      bottom: 0,</span><br><span class=\"line\">                        //如上写法：Positioned设置定位在做下方</span><br><span class=\"line\">                        child: Image.network(</span><br><span class=\"line\">                          &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                          width: 100,</span><br><span class=\"line\">                          height: 100,</span><br><span class=\"line\">                        )//子节点组件2</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                Wrap(//从左到右排列 自动换行</span><br><span class=\"line\">                  spacing: 6,//水平j安居</span><br><span class=\"line\">                  runSpacing: 10,//垂直间距</span><br><span class=\"line\">                  children: &lt;Widget&gt;[</span><br><span class=\"line\">                    _chip(&#x27;flutter&#x27;),//调用_chip方法（传入label）</span><br><span class=\"line\">                    _chip(&#x27;i&#x27;),</span><br><span class=\"line\">                    _chip(&#x27;love&#x27;),</span><br><span class=\"line\">                    _chip(&#x27;you&#x27;),</span><br><span class=\"line\">                    _chip(&#x27;too much!&#x27;),</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                )</span><br><span class=\"line\">              ],</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            onRefresh: _handleRefresh)</span><br><span class=\"line\">            :</span><br><span class=\"line\">        Column(</span><br><span class=\"line\">          children: &lt;Widget&gt;[</span><br><span class=\"line\">            Text(&#x27;列表&#x27;),//第一行显示内容</span><br><span class=\"line\">            Expanded(</span><br><span class=\"line\">              child:</span><br><span class=\"line\">              Container(//设置Container的decoration装饰器</span><br><span class=\"line\">                decoration: BoxDecoration(color: Colors.greenAccent),</span><br><span class=\"line\">                //使用BoxDecoration约束背景颜色</span><br><span class=\"line\">                child: Text(&#x27;拉伸高度填满&#x27;),</span><br><span class=\"line\">                //第二行显示内容 使用Expanded后第二行延伸Y轴进行填满</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            )</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        )//_currentIndex==0?如果不等于0 显示:后面的内容</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Future&lt;Null&gt; _handleRefresh() async&#123; //asyc设置异步运行</span><br><span class=\"line\">    await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒</span><br><span class=\"line\">    return null;//返回一个空值</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">_chip(String label) &#123;//创建_chip方法，接收参数label</span><br><span class=\"line\">  return Chip(label: Text(label),//返回格式化后的label</span><br><span class=\"line\">    avatar: CircleAvatar(//添加圆角头像</span><br><span class=\"line\">      backgroundColor: Colors.blue.shade900,//设置透明度900</span><br><span class=\"line\">      child: Text (</span><br><span class=\"line\">        label.substring(0,1),//取label的第一个字符</span><br><span class=\"line\">        style: const TextStyle(fontSize: 10,),//样式：文本样式（字体大小10）</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    ),</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">_item(String title, Color color) &#123;</span><br><span class=\"line\">  return Container(//返回一个Container装饰器包裹住</span><br><span class=\"line\">    alignment: Alignment.center,//设置居中方式 居中</span><br><span class=\"line\">    decoration: BoxDecoration(</span><br><span class=\"line\">      color: color,//装饰器背景色等于传入的color参数</span><br><span class=\"line\">    ),//设置装饰器样式</span><br><span class=\"line\">    child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),),</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p><img src=\"https://tva3.sinaimg.cn/large/0072Vf1pgy1foxlnx4mk0j31hc0u07k9.jpg\"></p>","more":"<h1 id=\"flutter布局开发常用组件\"><a href=\"#flutter布局开发常用组件\" class=\"headerlink\" title=\"flutter布局开发常用组件\"></a>flutter布局开发常用组件</h1><h2 id=\"布局相关三大控件\"><a href=\"#布局相关三大控件\" class=\"headerlink\" title=\"布局相关三大控件\"></a><strong>布局相关三大控件</strong></h2><h3 id=\"Container\"><a href=\"#Container\" class=\"headerlink\" title=\"Container\"></a><strong>Container</strong></h3><p>约束子节点，居中，内边距、宽高、颜色、背景、装饰器</p>\n<h3 id=\"RenderObjectWidget\"><a href=\"#RenderObjectWidget\" class=\"headerlink\" title=\"RenderObjectWidget\"></a><strong>RenderObjectWidget</strong></h3><p><strong>分为单节点与多节点</strong></p>\n<p><strong>SingleChildRenderObjectWidget-单节点布局组件</strong></p>\n<p><strong>Opacity-透明度</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/D6AA6BB8-601D-43E8-81FC-3B509291B1E6_2/Amzmyvq5ezo5rphvTPGF3gwbzZvnDEtIVm7VqcE7h5cz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/9C1CD087-FAEB-4CEC-8A91-2873F3917585_2/ed1hyHYygq2FPd68c7tTZT2tcJaNS6ZAOSVit6t4MQEz/Image.png\" alt=\"image\"></p>\n<p><strong>ClipOval-裁剪圆形</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/5514C932-E1B8-46E4-9C62-8B888980E885_2/ATWLKkoJlDrd6hEnsHyFUe4qAPmQRuVsRRXxSir0O4wz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/1331EA4B-59FD-4E42-97D7-81DE2AD8594F_2/LjvHqNjfIDZUQimtOpwoyV7yXuxJLuYZk2vR6VQbVG4z/Image.png\" alt=\"image\"></p>\n<p><strong>ClipRect-裁剪方形</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/4BB25D51-01B4-461F-9F40-62C86E5CC50A_2/rCNdRRhLxYZ1H0X4Hx9UG7PFFqHGpkmN1Z3zm3EuAPwz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/EF7CBBCA-EB89-4422-BFDD-BB8E666C9F00_2/gBKslBux6dcxqHqDwltXvmKAmkRR9Gwry88872yvXZAz/Image.png\" alt=\"image\"></p>\n<p><strong>PhysicalModel-显示不同形状</strong></p>\n<p>使用PhysicalModel包裹需要裁剪的子节点加以修饰</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/50DFAE9F-E869-456D-A58E-927BAA6E0868_2/yxVUqshTlPFxqJp0SWBZDwGYCyysn5oPfE9uEd4qax0z/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/80F3255C-F899-42F9-873D-9146B49F8E7F_2/pXZ3xC5ILtfk6J7SoSXYB1px1rtwA4sXU15tYW4ALtcz/Image.png\" alt=\"image\"></p>\n<p><strong>Align-Center-居中</strong></p>\n<p>……</p>\n<p><strong>Padding-内边距设置</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/2C416E08-0C38-4F64-B7ED-650735A841B5_2/5GVoE36oxoSzDJ8xaZbeMrRxxVtVBxfFSdZqSRfh01sz/Image.png\" alt=\"image\"></p>\n<p><strong>SizeBox-约束布局大小</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/019C4AF6-FFD5-4F97-BB45-F6420519FB40_2/wdGTZXmFB3h4Fpjo3rH764ZVJaNew8tCaxQJSVeKVNwz/Image.png\" alt=\"image\"></p>\n<p><strong>FractionallySizeBox-约束水平方向-垂直方向</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/FAF6FC41-2EB5-4D06-BD30-ED5D41BDAC39_2/JfIeIUXdExN8Jfk1EqJrefjez3ywqjP5vxuFx1J6UsAz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/5877A110-BF29-4764-B910-2CD8FE3C25DE_2/OelyCOCi6E9WgMhRgGQU7Q9xvsfcy7BiVZW1KUmxJywz/Image.png\" alt=\"image\"></p>\n<p><strong>MuitiChildRenderObjectWidget-多节点布局组件</strong></p>\n<p><strong>Stack-层叠布局组件</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/FCCCBAEA-9EAA-4B0A-A1EF-1BC8174B7501_2/eaPfqGZPr1TcRR4FPhkqlSLIpuXyILxjPq6ko2hTfqIz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/D70F9D35-706B-41CB-8490-D5A0FD383B35_2/IlN5ayq3sLO482z6YJYxquAOZM0gmXyUnxXETnQ6yBoz/Image.png\" alt=\"image\"></p>\n<p><strong>Flex 布局组件</strong></p>\n<pre><code>Column-从上到下X轴\n\nRow-从左向右Y轴\n</code></pre>\n<p><strong>Warp-从左到右（会自动换行）</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/1BDAD04E-452C-4C7E-8579-A636D0E2C533_2/hqFS9tvhPHKUyAcF1xvMszmA0xHutCksEMlwGgmOzfYz/Image.png\" alt=\"image\"></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/75E1F882-44D9-433D-B4F6-01D5C3FBB82A_2/fl9Mr0P5VEAWJWNX5NO7vB3OJT60baUmu2gm2Hk4yWAz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/363097B3-CACC-418C-9146-0ACEFB61AB07_2/FUYvwPG6b62T8Hr3DTJFFjqTrjveSwwmxIjMVc7GNxEz/Image.png\" alt=\"image\"></p>\n<p><strong>Flow-很少用</strong></p>\n<h3 id=\"ParentDataWidget\"><a href=\"#ParentDataWidget\" class=\"headerlink\" title=\"ParentDataWidget\"></a><strong>ParentDataWidget</strong></h3><p><strong>Positioned绝对定位布局</strong></p>\n<p>固定view位置通常与stack搭配使用</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/345BE87A-CF30-42A8-8D48-AB996A007151_2/qfGvIyeZxoQHjDIcDbbxyMh7tGcnLKtep83fWH6yq6sz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/738E1056-54A5-4644-975D-5342458392BC_2/pmx9yPGUubFE87CU8g5dKPP34vU5SmMYNJgG1J3vRJYz/Image.png\" alt=\"image\"></p>\n<p><strong>Flexible-Expanded 流式布局</strong><br>可以展开布局大小的组件</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/CBE3F5A1-98AA-4F16-AE74-C7E0A5B78579_2/lrFVAvPA6pQkDDe5E36Mcmjy6gAqiDZxQJgtDu0qeMAz/Image.png\" alt=\"image\"></p>\n<p>实现效果</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/02658190-76D6-47BC-816A-A1F90B973A65/84531613-25BA-4CE7-8413-74320CBEDBAC_2/cQheuY6XXxE9GqMyWQgGlvRvM1rbza0ta93fc4KDqGQz/Image.png\" alt=\"image\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\">//使用flutter布局组件</span><br><span class=\"line\">class FlutterLayoutPage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;FlutterLayoutPage&gt; createState() =&gt; _FlutterLayoutPage();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _FlutterLayoutPage extends State&lt;FlutterLayoutPage&gt; &#123;</span><br><span class=\"line\">  int _currentIndex = 0;//初始化当前选中页面 默认为0</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &#x27;Stateful基础组件&#x27;,</span><br><span class=\"line\">      theme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.blue,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: const Text(&quot;Stateful基础组件&quot;),//标题</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        //底部导航栏</span><br><span class=\"line\">        bottomNavigationBar: BottomNavigationBar(</span><br><span class=\"line\">          currentIndex: _currentIndex,//当前选中页面 默认选中初始化的值</span><br><span class=\"line\">          onTap: (index)&#123;//接收一个index，点击的时候会自动切换到该索引</span><br><span class=\"line\">            setState(() &#123;//使用setState改变初始化的当前索引的值</span><br><span class=\"line\">              _currentIndex = index;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          items: const [</span><br><span class=\"line\">            //items参数列表，有多少个BottomNavigationBarItem就会有多少个按钮，最少需要设置两个</span><br><span class=\"line\">            BottomNavigationBarItem(//第一个item</span><br><span class=\"line\">                icon: Icon(Icons.home,color: Colors.grey,),//第一个item的图标默认状态</span><br><span class=\"line\">                activeIcon: Icon(Icons.home,color: Colors.green,),//第二个item的图标激活状态</span><br><span class=\"line\">                label: &#x27;首页&#x27;//第一个item的显示名称</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            BottomNavigationBarItem(//第二个item</span><br><span class=\"line\">                icon: Icon(Icons.list,color: Colors.grey,),//第二个item的图标默认状态</span><br><span class=\"line\">                activeIcon: Icon(Icons.list,color: Colors.green,),//第二个item的图标激活状态</span><br><span class=\"line\">                label: &#x27;列表&#x27;//第二个item的显示名称</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ],),</span><br><span class=\"line\"></span><br><span class=\"line\">        floatingActionButton: const FloatingActionButton(</span><br><span class=\"line\">          onPressed: null,</span><br><span class=\"line\">          child: Text(&#x27;点我&#x27;),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: _currentIndex==0</span><br><span class=\"line\">            ?</span><br><span class=\"line\">        RefreshIndicator(</span><br><span class=\"line\">            child:</span><br><span class=\"line\">            ListView(</span><br><span class=\"line\">              children: &lt;Widget&gt;[</span><br><span class=\"line\">                Container(//容器组件 //_currentIndex==0?如果等于0则显示Container内容</span><br><span class=\"line\">                  decoration: const BoxDecoration(color: Colors.white10),//装饰器</span><br><span class=\"line\">                  alignment: Alignment.center,//居中显示</span><br><span class=\"line\">                  child: Column(//上下排列组件</span><br><span class=\"line\">                    children: &lt;Widget&gt;[//子节点组件</span><br><span class=\"line\">                      Row(//从左到右布局</span><br><span class=\"line\">                        children: &lt;Widget&gt;[//Row的子节点</span><br><span class=\"line\">                          ClipOval(//裁剪圆形</span><br><span class=\"line\">                            child: SizedBox(//约束子节点大小</span><br><span class=\"line\">                              width: 100,//宽100</span><br><span class=\"line\">                              height: 100,//高100</span><br><span class=\"line\">                              child: Image.network(&#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;),</span><br><span class=\"line\">                              //显示网络图片</span><br><span class=\"line\">                            ),</span><br><span class=\"line\">                          ),</span><br><span class=\"line\">                          Padding(</span><br><span class=\"line\">                            padding: EdgeInsets.all(10),//设置所有边距为10</span><br><span class=\"line\">                            child: ClipRect(//裁剪成方形</span><br><span class=\"line\">                              child: Opacity(//为子节点设置透明度</span><br><span class=\"line\">                                opacity: 0.5,//50%透明度</span><br><span class=\"line\">                                child: Image.network(</span><br><span class=\"line\">                                    &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                                    width: 100,</span><br><span class=\"line\">                                    height: 100,</span><br><span class=\"line\">                                ),</span><br><span class=\"line\">                              ),</span><br><span class=\"line\">                            ),</span><br><span class=\"line\">                          ),</span><br><span class=\"line\">                        ],</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                      // Image.network(//插入网络图片</span><br><span class=\"line\">                      //   &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                      //   //设置图片url</span><br><span class=\"line\">                      //   height: 300,//高</span><br><span class=\"line\">                      //   width: 250,//宽</span><br><span class=\"line\">                      // ),//加载网络图片</span><br><span class=\"line\">                      const TextField(//文本输入框</span><br><span class=\"line\">                        decoration: InputDecoration(</span><br><span class=\"line\">                          contentPadding: EdgeInsets.fromLTRB(5, 0, 0, 0),//边距：左5上0右0下0</span><br><span class=\"line\">                          hintText: &#x27;请输入&#x27;,//hintText提示文案</span><br><span class=\"line\">                          hintStyle: TextStyle(</span><br><span class=\"line\">                            fontSize: 20,</span><br><span class=\"line\">                          ),//设置提示文案的样式</span><br><span class=\"line\">                        ),//使用decoration装饰器 定义文本输入框样式</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                      //PageView页面预览的使用</span><br><span class=\"line\">                      //使用Container约束大小</span><br><span class=\"line\">                      Container(</span><br><span class=\"line\">                        height: 100,</span><br><span class=\"line\">                        margin: EdgeInsets.only(top: 10),//使用EdgeInsets.only上边距为10</span><br><span class=\"line\">                        child: PhysicalModel(//显示不同形状组件</span><br><span class=\"line\">                          color: Colors.transparent,//透明显示颜色 透明</span><br><span class=\"line\">                          borderRadius: BorderRadius.circular(20),//裁剪成圆角半径</span><br><span class=\"line\">                          clipBehavior: Clip.antiAlias,//抗锯齿</span><br><span class=\"line\">                          child: PageView(</span><br><span class=\"line\">                            children: &lt;Widget&gt;[</span><br><span class=\"line\">                              _item(&#x27;Page1&#x27;,Colors.purple),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                              _item(&#x27;Page2&#x27;,Colors.yellow),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                              _item(&#x27;Page3&#x27;,Colors.green),//接收两个参数（标题，颜色）</span><br><span class=\"line\">                            ],</span><br><span class=\"line\">                        ),</span><br><span class=\"line\">                        ),</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                    ],</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                Column(//增加一行布局</span><br><span class=\"line\">                  children: &lt;Widget&gt;[//添加子节点</span><br><span class=\"line\">                    FractionallySizedBox(//约束水平方向-垂直方向组件</span><br><span class=\"line\">                      widthFactor: 1,//默认宽度为1</span><br><span class=\"line\">                        child: Container(//设置子节点容器</span><br><span class=\"line\">                          decoration: BoxDecoration(color: Colors.greenAccent),//设置容器背景颜色</span><br><span class=\"line\">                          child: Text(&#x27;宽度撑满&#x27;),//设置容器内子节点</span><br><span class=\"line\">                        ),</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                Stack(//实现叠加效果组件</span><br><span class=\"line\">                  children: &lt;Widget&gt;[//添加子节点</span><br><span class=\"line\">                    Image.network(</span><br><span class=\"line\">                      &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                      width: 100,</span><br><span class=\"line\">                      height: 100,</span><br><span class=\"line\">                    ),//子节点组件1</span><br><span class=\"line\">                    Positioned(//定位布局</span><br><span class=\"line\">                      right: 0,</span><br><span class=\"line\">                      bottom: 0,</span><br><span class=\"line\">                        //如上写法：Positioned设置定位在做下方</span><br><span class=\"line\">                        child: Image.network(</span><br><span class=\"line\">                          &#x27;https://blog.suflive.com/2022/04/21/Typora%E6%B5%81%E7%A8%8B%E5%9B%BE%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B/hello.jpeg&#x27;,</span><br><span class=\"line\">                          width: 100,</span><br><span class=\"line\">                          height: 100,</span><br><span class=\"line\">                        )//子节点组件2</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                Wrap(//从左到右排列 自动换行</span><br><span class=\"line\">                  spacing: 6,//水平j安居</span><br><span class=\"line\">                  runSpacing: 10,//垂直间距</span><br><span class=\"line\">                  children: &lt;Widget&gt;[</span><br><span class=\"line\">                    _chip(&#x27;flutter&#x27;),//调用_chip方法（传入label）</span><br><span class=\"line\">                    _chip(&#x27;i&#x27;),</span><br><span class=\"line\">                    _chip(&#x27;love&#x27;),</span><br><span class=\"line\">                    _chip(&#x27;you&#x27;),</span><br><span class=\"line\">                    _chip(&#x27;too much!&#x27;),</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                )</span><br><span class=\"line\">              ],</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            onRefresh: _handleRefresh)</span><br><span class=\"line\">            :</span><br><span class=\"line\">        Column(</span><br><span class=\"line\">          children: &lt;Widget&gt;[</span><br><span class=\"line\">            Text(&#x27;列表&#x27;),//第一行显示内容</span><br><span class=\"line\">            Expanded(</span><br><span class=\"line\">              child:</span><br><span class=\"line\">              Container(//设置Container的decoration装饰器</span><br><span class=\"line\">                decoration: BoxDecoration(color: Colors.greenAccent),</span><br><span class=\"line\">                //使用BoxDecoration约束背景颜色</span><br><span class=\"line\">                child: Text(&#x27;拉伸高度填满&#x27;),</span><br><span class=\"line\">                //第二行显示内容 使用Expanded后第二行延伸Y轴进行填满</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            )</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        )//_currentIndex==0?如果不等于0 显示:后面的内容</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Future&lt;Null&gt; _handleRefresh() async&#123; //asyc设置异步运行</span><br><span class=\"line\">    await Future.delayed(Duration(milliseconds: 200));//计时器 200毫秒</span><br><span class=\"line\">    return null;//返回一个空值</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">_chip(String label) &#123;//创建_chip方法，接收参数label</span><br><span class=\"line\">  return Chip(label: Text(label),//返回格式化后的label</span><br><span class=\"line\">    avatar: CircleAvatar(//添加圆角头像</span><br><span class=\"line\">      backgroundColor: Colors.blue.shade900,//设置透明度900</span><br><span class=\"line\">      child: Text (</span><br><span class=\"line\">        label.substring(0,1),//取label的第一个字符</span><br><span class=\"line\">        style: const TextStyle(fontSize: 10,),//样式：文本样式（字体大小10）</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    ),</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">_item(String title, Color color) &#123;</span><br><span class=\"line\">  return Container(//返回一个Container装饰器包裹住</span><br><span class=\"line\">    alignment: Alignment.center,//设置居中方式 居中</span><br><span class=\"line\">    decoration: BoxDecoration(</span><br><span class=\"line\">      color: color,//装饰器背景色等于传入的color参数</span><br><span class=\"line\">    ),//设置装饰器样式</span><br><span class=\"line\">    child: Text(title, style: TextStyle(fontSize: 20,color: Colors.white),),</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"flutter study day 6 创建和使用flutter路由与导航","date":"2022-05-09T10:02:41.000Z","_content":"![flutter study day 6 创建和使用flutter路由与导航](https://tva2.sinaimg.cn/large/a15b4afegy1fnmws7fac1j21hc0u0hak.jpg)\n\n<!-- more -->\n\n示例：\n\t**在app首页添加路由**\n\n\t**在MyApp的MaterialApp内添加routes：**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/2F8CA006-52D9-4C66-B618-81E3694D20E1_2/JB4J9VfZhsgJizd8XWJKZ0uyXYOW7cFIenHiYuelnDAz/Image.png)\n\n\t别名:(BuilderContext context)=>需要指向的页面\n\n\t**创建RouteNavigator组件**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/3098E73C-3F03-4B2B-9ECF-7B82449AAAEF_2/WxcWFj7wuoUrLWSw25ey76L1DG6Bl76jIsn7ziIQv3Ez/Image.png)\n\n\t**重写_NavigatorState组件**\n\n\tbool byName = false;\n\n\t//添加一个布尔值变量byName默认值为false\n\n\treturn Container\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/B1C3D842-4CC9-4377-A9E7-088CCA1838D0_2/fcF0869cKs3xtG0JUizCfnwCIy2yKPfvyUngFCxbWeAz/Image.png)\n\n\t**_item方法**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/79DC0950-B883-492D-A763-CE2FA62C22BD_2/PwxyApeCESzGMEwdYoFD6YMxx7IyNBUIxxhY366rrkwz/Image.png)\n\n\t**实现效果**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/77551A53-2565-4985-9DC2-6408D1ACEA94_2/V2orFCOQf9atZZq2KLSI11d0Bwu0p6SJh0rS8zu18Tcz/Image.png)\n\n\t点击后跳转到对应的页面\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/F89B9423-D922-444B-B849-6953D4350C4A_2/b3Qg8WwlbCEkzXGLoyFyuY7KnxfRkBNy6JGdgRjyHkoz/Image.png)\n\n\t**左上角的返回按钮需要手动在对应页面内添加一个Navigator.pop方法（跳出指定页面）**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/0BA1F93D-5312-48B9-9D1B-CB40EB178A06_2/iAYarL8I8oyJqyP7pXswYhwLydCy1pbuNxsKGiAa08Mz/Image.png)\n\n\t每一个页面都需要添加此按钮才能参与返回上一页否则只能沿左侧右滑返回上一页\n\n\t**示例代码：**\n\n    ```other\n    import 'package:flutter/material.dart';\n    import 'package:study_project1/statfull_grooup_page.dart';\n    import './less_group_page.dart';\n    import 'flutter_layout_page.dart';\n    \n    void main() {\n      runApp(MyApp());\n    }\n    \n    class MyApp extends StatelessWidget {\n      const MyApp({Key? key}) : super(key: key);\n    \n      @override\n      Widget build(BuildContext context) {\n        return MaterialApp(\n          title: 'Flutter Demo',\n          theme: ThemeData(\n            primarySwatch: Colors.blue,\n          ),\n          home: Scaffold(//实现一个页面\n            appBar: AppBar(//顶部栏\n              title: Text('如何创建和使用路由与导航'),//标题\n            ),\n            body: RouteNavigator(),//页面：使用路由组件\n          ),\n          routes: <String,WidgetBuilder>{//创建路由：接收两个参数Stirng&WidgetBuilder\n            'less': (BuildContext context)=>LessGroupPage(),//指向LessGroupPage\n            'ful': (BuildContext context)=>StatefulGroup(),//指向StatefulGroup\n            'layout': (BuildContext context)=>FlutterLayoutPage(),//指向FlutterLayoutPage\n          }\n        );\n      }\n    }\n    \n    class RouteNavigator extends StatefulWidget {\n      @override\n      _RouteNavigatorState createState() => _RouteNavigatorState();\n    }\n    \n    class _RouteNavigatorState extends State<RouteNavigator> {\n      bool byName = false;\n      @override\n      Widget build(BuildContext context) {\n        return Container(//容器\n          child: Column(//布局\n            children: <Widget>[\n              SwitchListTile(//添加一个开关组件\n                title: Text('${byName?'':'不'}通过路由名跳转'),//显示是否通过路由名跳转\n                  value: byName,//byName控制true或false\n                  onChanged: (value){//传入byName的值\n                setState(() {\n                  byName = value;\n                });\n              }),\n              _item('StatelessWidget基础组件',LessGroupPage(),'less'),//第一个路由按钮\n              _item('StatefullWidget基础组件',StatefulGroup(),'ful'),//第二个路由按钮\n              _item('Layout基础组件',FlutterLayoutPage(),'layout'),//第三个路由按钮\n              //_item为自定义方法，接收三个参数：title，页面，路由名称\n            ],\n          )\n        );\n      }\n    \n      _item(String tittle, page, String routeName) {//自定义item方法 接收三个参数\n        return Container(//返回一个ring器\n            child: RaisedButton(//点击按钮\n              onPressed: (){\n                if(byName) {//如果包含byName\n                  Navigator.pushNamed(context, routeName);//跳转到对应的页面\n                } else {//不包含byName\n                  Navigator.push(//跳转到传入的page页面\n                      context,\n                      MaterialPageRoute(builder: (context) => page));\n                }\n              },\n            child: Text(tittle),//容器标题为传入的标题\n        ),\n        );\n      }\n    }\n    \n    ```\n\n","source":"_posts/flutter-study-day-6-创建和使用flutter路由与导航.md","raw":"---\ntitle: flutter study day 6 创建和使用flutter路由与导航\ndate: 2022-05-09 18:02:41\ntags: [flutter]\ncategories: flutter\n---\n![flutter study day 6 创建和使用flutter路由与导航](https://tva2.sinaimg.cn/large/a15b4afegy1fnmws7fac1j21hc0u0hak.jpg)\n\n<!-- more -->\n\n示例：\n\t**在app首页添加路由**\n\n\t**在MyApp的MaterialApp内添加routes：**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/2F8CA006-52D9-4C66-B618-81E3694D20E1_2/JB4J9VfZhsgJizd8XWJKZ0uyXYOW7cFIenHiYuelnDAz/Image.png)\n\n\t别名:(BuilderContext context)=>需要指向的页面\n\n\t**创建RouteNavigator组件**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/3098E73C-3F03-4B2B-9ECF-7B82449AAAEF_2/WxcWFj7wuoUrLWSw25ey76L1DG6Bl76jIsn7ziIQv3Ez/Image.png)\n\n\t**重写_NavigatorState组件**\n\n\tbool byName = false;\n\n\t//添加一个布尔值变量byName默认值为false\n\n\treturn Container\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/B1C3D842-4CC9-4377-A9E7-088CCA1838D0_2/fcF0869cKs3xtG0JUizCfnwCIy2yKPfvyUngFCxbWeAz/Image.png)\n\n\t**_item方法**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/79DC0950-B883-492D-A763-CE2FA62C22BD_2/PwxyApeCESzGMEwdYoFD6YMxx7IyNBUIxxhY366rrkwz/Image.png)\n\n\t**实现效果**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/77551A53-2565-4985-9DC2-6408D1ACEA94_2/V2orFCOQf9atZZq2KLSI11d0Bwu0p6SJh0rS8zu18Tcz/Image.png)\n\n\t点击后跳转到对应的页面\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/F89B9423-D922-444B-B849-6953D4350C4A_2/b3Qg8WwlbCEkzXGLoyFyuY7KnxfRkBNy6JGdgRjyHkoz/Image.png)\n\n\t**左上角的返回按钮需要手动在对应页面内添加一个Navigator.pop方法（跳出指定页面）**\n\n![image](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/0BA1F93D-5312-48B9-9D1B-CB40EB178A06_2/iAYarL8I8oyJqyP7pXswYhwLydCy1pbuNxsKGiAa08Mz/Image.png)\n\n\t每一个页面都需要添加此按钮才能参与返回上一页否则只能沿左侧右滑返回上一页\n\n\t**示例代码：**\n\n    ```other\n    import 'package:flutter/material.dart';\n    import 'package:study_project1/statfull_grooup_page.dart';\n    import './less_group_page.dart';\n    import 'flutter_layout_page.dart';\n    \n    void main() {\n      runApp(MyApp());\n    }\n    \n    class MyApp extends StatelessWidget {\n      const MyApp({Key? key}) : super(key: key);\n    \n      @override\n      Widget build(BuildContext context) {\n        return MaterialApp(\n          title: 'Flutter Demo',\n          theme: ThemeData(\n            primarySwatch: Colors.blue,\n          ),\n          home: Scaffold(//实现一个页面\n            appBar: AppBar(//顶部栏\n              title: Text('如何创建和使用路由与导航'),//标题\n            ),\n            body: RouteNavigator(),//页面：使用路由组件\n          ),\n          routes: <String,WidgetBuilder>{//创建路由：接收两个参数Stirng&WidgetBuilder\n            'less': (BuildContext context)=>LessGroupPage(),//指向LessGroupPage\n            'ful': (BuildContext context)=>StatefulGroup(),//指向StatefulGroup\n            'layout': (BuildContext context)=>FlutterLayoutPage(),//指向FlutterLayoutPage\n          }\n        );\n      }\n    }\n    \n    class RouteNavigator extends StatefulWidget {\n      @override\n      _RouteNavigatorState createState() => _RouteNavigatorState();\n    }\n    \n    class _RouteNavigatorState extends State<RouteNavigator> {\n      bool byName = false;\n      @override\n      Widget build(BuildContext context) {\n        return Container(//容器\n          child: Column(//布局\n            children: <Widget>[\n              SwitchListTile(//添加一个开关组件\n                title: Text('${byName?'':'不'}通过路由名跳转'),//显示是否通过路由名跳转\n                  value: byName,//byName控制true或false\n                  onChanged: (value){//传入byName的值\n                setState(() {\n                  byName = value;\n                });\n              }),\n              _item('StatelessWidget基础组件',LessGroupPage(),'less'),//第一个路由按钮\n              _item('StatefullWidget基础组件',StatefulGroup(),'ful'),//第二个路由按钮\n              _item('Layout基础组件',FlutterLayoutPage(),'layout'),//第三个路由按钮\n              //_item为自定义方法，接收三个参数：title，页面，路由名称\n            ],\n          )\n        );\n      }\n    \n      _item(String tittle, page, String routeName) {//自定义item方法 接收三个参数\n        return Container(//返回一个ring器\n            child: RaisedButton(//点击按钮\n              onPressed: (){\n                if(byName) {//如果包含byName\n                  Navigator.pushNamed(context, routeName);//跳转到对应的页面\n                } else {//不包含byName\n                  Navigator.push(//跳转到传入的page页面\n                      context,\n                      MaterialPageRoute(builder: (context) => page));\n                }\n              },\n            child: Text(tittle),//容器标题为传入的标题\n        ),\n        );\n      }\n    }\n    \n    ```\n\n","slug":"flutter-study-day-6-创建和使用flutter路由与导航","published":1,"updated":"2022-05-13T08:04:38.464Z","_id":"cl341xpvc000ebwx18a0odlz9","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://tva2.sinaimg.cn/large/a15b4afegy1fnmws7fac1j21hc0u0hak.jpg\" alt=\"flutter study day 6 创建和使用flutter路由与导航\"></p>\n<span id=\"more\"></span>\n\n<p>示例：<br>    <strong>在app首页添加路由</strong></p>\n<pre><code>**在MyApp的MaterialApp内添加routes：**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/2F8CA006-52D9-4C66-B618-81E3694D20E1_2/JB4J9VfZhsgJizd8XWJKZ0uyXYOW7cFIenHiYuelnDAz/Image.png\" alt=\"image\"></p>\n<pre><code>别名:(BuilderContext context)=&gt;需要指向的页面\n\n**创建RouteNavigator组件**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/3098E73C-3F03-4B2B-9ECF-7B82449AAAEF_2/WxcWFj7wuoUrLWSw25ey76L1DG6Bl76jIsn7ziIQv3Ez/Image.png\" alt=\"image\"></p>\n<pre><code>**重写_NavigatorState组件**\n\nbool byName = false;\n\n//添加一个布尔值变量byName默认值为false\n\nreturn Container\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/B1C3D842-4CC9-4377-A9E7-088CCA1838D0_2/fcF0869cKs3xtG0JUizCfnwCIy2yKPfvyUngFCxbWeAz/Image.png\" alt=\"image\"></p>\n<pre><code>**_item方法**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/79DC0950-B883-492D-A763-CE2FA62C22BD_2/PwxyApeCESzGMEwdYoFD6YMxx7IyNBUIxxhY366rrkwz/Image.png\" alt=\"image\"></p>\n<pre><code>**实现效果**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/77551A53-2565-4985-9DC2-6408D1ACEA94_2/V2orFCOQf9atZZq2KLSI11d0Bwu0p6SJh0rS8zu18Tcz/Image.png\" alt=\"image\"></p>\n<pre><code>点击后跳转到对应的页面\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/F89B9423-D922-444B-B849-6953D4350C4A_2/b3Qg8WwlbCEkzXGLoyFyuY7KnxfRkBNy6JGdgRjyHkoz/Image.png\" alt=\"image\"></p>\n<pre><code>**左上角的返回按钮需要手动在对应页面内添加一个Navigator.pop方法（跳出指定页面）**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/0BA1F93D-5312-48B9-9D1B-CB40EB178A06_2/iAYarL8I8oyJqyP7pXswYhwLydCy1pbuNxsKGiAa08Mz/Image.png\" alt=\"image\"></p>\n<pre><code>每一个页面都需要添加此按钮才能参与返回上一页否则只能沿左侧右滑返回上一页\n\n**示例代码：**\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\">import &#x27;package:study_project1/statfull_grooup_page.dart&#x27;;</span><br><span class=\"line\">import &#x27;./less_group_page.dart&#x27;;</span><br><span class=\"line\">import &#x27;flutter_layout_page.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">void main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class MyApp extends StatelessWidget &#123;</span><br><span class=\"line\">  const MyApp(&#123;Key? key&#125;) : super(key: key);</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &#x27;Flutter Demo&#x27;,</span><br><span class=\"line\">      theme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.blue,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(//实现一个页面</span><br><span class=\"line\">        appBar: AppBar(//顶部栏</span><br><span class=\"line\">          title: Text(&#x27;如何创建和使用路由与导航&#x27;),//标题</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: RouteNavigator(),//页面：使用路由组件</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      routes: &lt;String,WidgetBuilder&gt;&#123;//创建路由：接收两个参数Stirng&amp;WidgetBuilder</span><br><span class=\"line\">        &#x27;less&#x27;: (BuildContext context)=&gt;LessGroupPage(),//指向LessGroupPage</span><br><span class=\"line\">        &#x27;ful&#x27;: (BuildContext context)=&gt;StatefulGroup(),//指向StatefulGroup</span><br><span class=\"line\">        &#x27;layout&#x27;: (BuildContext context)=&gt;FlutterLayoutPage(),//指向FlutterLayoutPage</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class RouteNavigator extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _RouteNavigatorState createState() =&gt; _RouteNavigatorState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _RouteNavigatorState extends State&lt;RouteNavigator&gt; &#123;</span><br><span class=\"line\">  bool byName = false;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Container(//容器</span><br><span class=\"line\">      child: Column(//布局</span><br><span class=\"line\">        children: &lt;Widget&gt;[</span><br><span class=\"line\">          SwitchListTile(//添加一个开关组件</span><br><span class=\"line\">            title: Text(&#x27;$&#123;byName?&#x27;&#x27;:&#x27;不&#x27;&#125;通过路由名跳转&#x27;),//显示是否通过路由名跳转</span><br><span class=\"line\">              value: byName,//byName控制true或false</span><br><span class=\"line\">              onChanged: (value)&#123;//传入byName的值</span><br><span class=\"line\">            setState(() &#123;</span><br><span class=\"line\">              byName = value;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">          _item(&#x27;StatelessWidget基础组件&#x27;,LessGroupPage(),&#x27;less&#x27;),//第一个路由按钮</span><br><span class=\"line\">          _item(&#x27;StatefullWidget基础组件&#x27;,StatefulGroup(),&#x27;ful&#x27;),//第二个路由按钮</span><br><span class=\"line\">          _item(&#x27;Layout基础组件&#x27;,FlutterLayoutPage(),&#x27;layout&#x27;),//第三个路由按钮</span><br><span class=\"line\">          //_item为自定义方法，接收三个参数：title，页面，路由名称</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      )</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  _item(String tittle, page, String routeName) &#123;//自定义item方法 接收三个参数</span><br><span class=\"line\">    return Container(//返回一个ring器</span><br><span class=\"line\">        child: RaisedButton(//点击按钮</span><br><span class=\"line\">          onPressed: ()&#123;</span><br><span class=\"line\">            if(byName) &#123;//如果包含byName</span><br><span class=\"line\">              Navigator.pushNamed(context, routeName);//跳转到对应的页面</span><br><span class=\"line\">            &#125; else &#123;//不包含byName</span><br><span class=\"line\">              Navigator.push(//跳转到传入的page页面</span><br><span class=\"line\">                  context,</span><br><span class=\"line\">                  MaterialPageRoute(builder: (context) =&gt; page));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        child: Text(tittle),//容器标题为传入的标题</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</code></pre>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://tva2.sinaimg.cn/large/a15b4afegy1fnmws7fac1j21hc0u0hak.jpg\" alt=\"flutter study day 6 创建和使用flutter路由与导航\"></p>","more":"<p>示例：<br>    <strong>在app首页添加路由</strong></p>\n<pre><code>**在MyApp的MaterialApp内添加routes：**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/2F8CA006-52D9-4C66-B618-81E3694D20E1_2/JB4J9VfZhsgJizd8XWJKZ0uyXYOW7cFIenHiYuelnDAz/Image.png\" alt=\"image\"></p>\n<pre><code>别名:(BuilderContext context)=&gt;需要指向的页面\n\n**创建RouteNavigator组件**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/3098E73C-3F03-4B2B-9ECF-7B82449AAAEF_2/WxcWFj7wuoUrLWSw25ey76L1DG6Bl76jIsn7ziIQv3Ez/Image.png\" alt=\"image\"></p>\n<pre><code>**重写_NavigatorState组件**\n\nbool byName = false;\n\n//添加一个布尔值变量byName默认值为false\n\nreturn Container\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/B1C3D842-4CC9-4377-A9E7-088CCA1838D0_2/fcF0869cKs3xtG0JUizCfnwCIy2yKPfvyUngFCxbWeAz/Image.png\" alt=\"image\"></p>\n<pre><code>**_item方法**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/79DC0950-B883-492D-A763-CE2FA62C22BD_2/PwxyApeCESzGMEwdYoFD6YMxx7IyNBUIxxhY366rrkwz/Image.png\" alt=\"image\"></p>\n<pre><code>**实现效果**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/77551A53-2565-4985-9DC2-6408D1ACEA94_2/V2orFCOQf9atZZq2KLSI11d0Bwu0p6SJh0rS8zu18Tcz/Image.png\" alt=\"image\"></p>\n<pre><code>点击后跳转到对应的页面\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/F89B9423-D922-444B-B849-6953D4350C4A_2/b3Qg8WwlbCEkzXGLoyFyuY7KnxfRkBNy6JGdgRjyHkoz/Image.png\" alt=\"image\"></p>\n<pre><code>**左上角的返回按钮需要手动在对应页面内添加一个Navigator.pop方法（跳出指定页面）**\n</code></pre>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/AA02EC32-F038-419E-82BE-5F3525F47B99/0BA1F93D-5312-48B9-9D1B-CB40EB178A06_2/iAYarL8I8oyJqyP7pXswYhwLydCy1pbuNxsKGiAa08Mz/Image.png\" alt=\"image\"></p>\n<pre><code>每一个页面都需要添加此按钮才能参与返回上一页否则只能沿左侧右滑返回上一页\n\n**示例代码：**\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\">import &#x27;package:study_project1/statfull_grooup_page.dart&#x27;;</span><br><span class=\"line\">import &#x27;./less_group_page.dart&#x27;;</span><br><span class=\"line\">import &#x27;flutter_layout_page.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">void main() &#123;</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class MyApp extends StatelessWidget &#123;</span><br><span class=\"line\">  const MyApp(&#123;Key? key&#125;) : super(key: key);</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &#x27;Flutter Demo&#x27;,</span><br><span class=\"line\">      theme: ThemeData(</span><br><span class=\"line\">        primarySwatch: Colors.blue,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      home: Scaffold(//实现一个页面</span><br><span class=\"line\">        appBar: AppBar(//顶部栏</span><br><span class=\"line\">          title: Text(&#x27;如何创建和使用路由与导航&#x27;),//标题</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: RouteNavigator(),//页面：使用路由组件</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      routes: &lt;String,WidgetBuilder&gt;&#123;//创建路由：接收两个参数Stirng&amp;WidgetBuilder</span><br><span class=\"line\">        &#x27;less&#x27;: (BuildContext context)=&gt;LessGroupPage(),//指向LessGroupPage</span><br><span class=\"line\">        &#x27;ful&#x27;: (BuildContext context)=&gt;StatefulGroup(),//指向StatefulGroup</span><br><span class=\"line\">        &#x27;layout&#x27;: (BuildContext context)=&gt;FlutterLayoutPage(),//指向FlutterLayoutPage</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class RouteNavigator extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _RouteNavigatorState createState() =&gt; _RouteNavigatorState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _RouteNavigatorState extends State&lt;RouteNavigator&gt; &#123;</span><br><span class=\"line\">  bool byName = false;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Container(//容器</span><br><span class=\"line\">      child: Column(//布局</span><br><span class=\"line\">        children: &lt;Widget&gt;[</span><br><span class=\"line\">          SwitchListTile(//添加一个开关组件</span><br><span class=\"line\">            title: Text(&#x27;$&#123;byName?&#x27;&#x27;:&#x27;不&#x27;&#125;通过路由名跳转&#x27;),//显示是否通过路由名跳转</span><br><span class=\"line\">              value: byName,//byName控制true或false</span><br><span class=\"line\">              onChanged: (value)&#123;//传入byName的值</span><br><span class=\"line\">            setState(() &#123;</span><br><span class=\"line\">              byName = value;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">          _item(&#x27;StatelessWidget基础组件&#x27;,LessGroupPage(),&#x27;less&#x27;),//第一个路由按钮</span><br><span class=\"line\">          _item(&#x27;StatefullWidget基础组件&#x27;,StatefulGroup(),&#x27;ful&#x27;),//第二个路由按钮</span><br><span class=\"line\">          _item(&#x27;Layout基础组件&#x27;,FlutterLayoutPage(),&#x27;layout&#x27;),//第三个路由按钮</span><br><span class=\"line\">          //_item为自定义方法，接收三个参数：title，页面，路由名称</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      )</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  _item(String tittle, page, String routeName) &#123;//自定义item方法 接收三个参数</span><br><span class=\"line\">    return Container(//返回一个ring器</span><br><span class=\"line\">        child: RaisedButton(//点击按钮</span><br><span class=\"line\">          onPressed: ()&#123;</span><br><span class=\"line\">            if(byName) &#123;//如果包含byName</span><br><span class=\"line\">              Navigator.pushNamed(context, routeName);//跳转到对应的页面</span><br><span class=\"line\">            &#125; else &#123;//不包含byName</span><br><span class=\"line\">              Navigator.push(//跳转到传入的page页面</span><br><span class=\"line\">                  context,</span><br><span class=\"line\">                  MaterialPageRoute(builder: (context) =&gt; page));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        child: Text(tittle),//容器标题为传入的标题</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</code></pre>"},{"title":"flutter study day 7 导入和使用flutter资源","date":"2022-05-11T11:57:03.000Z","_content":"**导入**\n在pubspec.yaml中删除assets的注释以及填写资源文件路径已经文件名\n\n![flutter study day 7 导入和使用flutter资源](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/0656A165-2C7B-47E0-B623-EEDBD8FF4B26_2/UzgRRxtyGIJJw4KgzKVgkJdfanJRCFq5IqWYHWKZsYsz/Image.png)\n<!-- more -->\n\n\n**使用**\n\n以下为图片资源的用例\n\n通过AssetImage组件使用图片路径进行调用图片\n\n![图片资源的用例](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/7EAE9F06-A57F-470E-991F-4F9F50FC69F8_2/4KoXsuWjtEGzftd0DRXQ5HGneulAQmYElAPYra1ute4z/Image.png)\n\n\n**实现效果**\n\n![实现效果](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/76CC20E2-906E-4E86-8C1F-246AF345AFB6_2/sZT12WReuIl9qNoXKY99WN8AEWcgie8QJSLHDoDwD9sz/Image.png)\n\n代码示例：\n\n```other\nimport 'package:flutter/material.dart';\n\nclass ResPage extends StatefulWidget {\n  @override\n  State<ResPage> createState() => _Respage();\n}\n\nclass _Respage extends State<ResPage> {\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(//页面组件:包含导航 菜单 底部导航 悬浮按钮 主体内容\n      appBar: AppBar(//appbar 顶部导航\n        title: Text('如何导入和使用flutter资源文件？'),//顶部标题\n        leading: GestureDetector(//设定标题最左边的监听器\n          onTap: () {//按钮方法\n            Navigator.pop(context);//触发离开当前页面\n          },\n          child: Icon(Icons.arrow_back),//按钮图标 返回键\n        ),\n      ),\n      body: Center(//主体内容：居中布局\n        child: Column(//使用column按顺序排列组件\n          mainAxisAlignment: MainAxisAlignment.center,//居中显示\n          children: const <Widget>[\n            Image(//使用图片组件\n              width: 350,//定义宽度\n              height: 550,//高度\n              image: AssetImage('images/night.jpg'),//通过路径图片显示图片\n            )\n          ],\n        ),\n      ),\n    );\n  }\n}\n\n\n\n```\n\n\n","source":"_posts/flutter-study-day-7-导入和使用flutter资源.md","raw":"---\ntitle: flutter study day 7 导入和使用flutter资源\ndate: 2022-05-11 19:57:03\ntags: [flutter]\ncategories: flutter\n---\n**导入**\n在pubspec.yaml中删除assets的注释以及填写资源文件路径已经文件名\n\n![flutter study day 7 导入和使用flutter资源](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/0656A165-2C7B-47E0-B623-EEDBD8FF4B26_2/UzgRRxtyGIJJw4KgzKVgkJdfanJRCFq5IqWYHWKZsYsz/Image.png)\n<!-- more -->\n\n\n**使用**\n\n以下为图片资源的用例\n\n通过AssetImage组件使用图片路径进行调用图片\n\n![图片资源的用例](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/7EAE9F06-A57F-470E-991F-4F9F50FC69F8_2/4KoXsuWjtEGzftd0DRXQ5HGneulAQmYElAPYra1ute4z/Image.png)\n\n\n**实现效果**\n\n![实现效果](https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/76CC20E2-906E-4E86-8C1F-246AF345AFB6_2/sZT12WReuIl9qNoXKY99WN8AEWcgie8QJSLHDoDwD9sz/Image.png)\n\n代码示例：\n\n```other\nimport 'package:flutter/material.dart';\n\nclass ResPage extends StatefulWidget {\n  @override\n  State<ResPage> createState() => _Respage();\n}\n\nclass _Respage extends State<ResPage> {\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(//页面组件:包含导航 菜单 底部导航 悬浮按钮 主体内容\n      appBar: AppBar(//appbar 顶部导航\n        title: Text('如何导入和使用flutter资源文件？'),//顶部标题\n        leading: GestureDetector(//设定标题最左边的监听器\n          onTap: () {//按钮方法\n            Navigator.pop(context);//触发离开当前页面\n          },\n          child: Icon(Icons.arrow_back),//按钮图标 返回键\n        ),\n      ),\n      body: Center(//主体内容：居中布局\n        child: Column(//使用column按顺序排列组件\n          mainAxisAlignment: MainAxisAlignment.center,//居中显示\n          children: const <Widget>[\n            Image(//使用图片组件\n              width: 350,//定义宽度\n              height: 550,//高度\n              image: AssetImage('images/night.jpg'),//通过路径图片显示图片\n            )\n          ],\n        ),\n      ),\n    );\n  }\n}\n\n\n\n```\n\n\n","slug":"flutter-study-day-7-导入和使用flutter资源","published":1,"updated":"2022-05-13T09:20:50.942Z","_id":"cl341xpvd000fbwx137f1294r","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>导入</strong><br>在pubspec.yaml中删除assets的注释以及填写资源文件路径已经文件名</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/0656A165-2C7B-47E0-B623-EEDBD8FF4B26_2/UzgRRxtyGIJJw4KgzKVgkJdfanJRCFq5IqWYHWKZsYsz/Image.png\" alt=\"flutter study day 7 导入和使用flutter资源\"></p>\n<span id=\"more\"></span>\n\n\n<p><strong>使用</strong></p>\n<p>以下为图片资源的用例</p>\n<p>通过AssetImage组件使用图片路径进行调用图片</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/7EAE9F06-A57F-470E-991F-4F9F50FC69F8_2/4KoXsuWjtEGzftd0DRXQ5HGneulAQmYElAPYra1ute4z/Image.png\" alt=\"图片资源的用例\"></p>\n<p><strong>实现效果</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/76CC20E2-906E-4E86-8C1F-246AF345AFB6_2/sZT12WReuIl9qNoXKY99WN8AEWcgie8QJSLHDoDwD9sz/Image.png\" alt=\"实现效果\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class ResPage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;ResPage&gt; createState() =&gt; _Respage();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _Respage extends State&lt;ResPage&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Scaffold(//页面组件:包含导航 菜单 底部导航 悬浮按钮 主体内容</span><br><span class=\"line\">      appBar: AppBar(//appbar 顶部导航</span><br><span class=\"line\">        title: Text(&#x27;如何导入和使用flutter资源文件？&#x27;),//顶部标题</span><br><span class=\"line\">        leading: GestureDetector(//设定标题最左边的监听器</span><br><span class=\"line\">          onTap: () &#123;//按钮方法</span><br><span class=\"line\">            Navigator.pop(context);//触发离开当前页面</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          child: Icon(Icons.arrow_back),//按钮图标 返回键</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      body: Center(//主体内容：居中布局</span><br><span class=\"line\">        child: Column(//使用column按顺序排列组件</span><br><span class=\"line\">          mainAxisAlignment: MainAxisAlignment.center,//居中显示</span><br><span class=\"line\">          children: const &lt;Widget&gt;[</span><br><span class=\"line\">            Image(//使用图片组件</span><br><span class=\"line\">              width: 350,//定义宽度</span><br><span class=\"line\">              height: 550,//高度</span><br><span class=\"line\">              image: AssetImage(&#x27;images/night.jpg&#x27;),//通过路径图片显示图片</span><br><span class=\"line\">            )</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"<p><strong>导入</strong><br>在pubspec.yaml中删除assets的注释以及填写资源文件路径已经文件名</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/0656A165-2C7B-47E0-B623-EEDBD8FF4B26_2/UzgRRxtyGIJJw4KgzKVgkJdfanJRCFq5IqWYHWKZsYsz/Image.png\" alt=\"flutter study day 7 导入和使用flutter资源\"></p>","more":"<p><strong>使用</strong></p>\n<p>以下为图片资源的用例</p>\n<p>通过AssetImage组件使用图片路径进行调用图片</p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/7EAE9F06-A57F-470E-991F-4F9F50FC69F8_2/4KoXsuWjtEGzftd0DRXQ5HGneulAQmYElAPYra1ute4z/Image.png\" alt=\"图片资源的用例\"></p>\n<p><strong>实现效果</strong></p>\n<p><img src=\"https://res.craft.do/user/full/95b613cb-a607-3458-0fba-b0ca77de5993/doc/5BCFA878-1F9A-493A-9DAB-8CF4D50B5912/76CC20E2-906E-4E86-8C1F-246AF345AFB6_2/sZT12WReuIl9qNoXKY99WN8AEWcgie8QJSLHDoDwD9sz/Image.png\" alt=\"实现效果\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class ResPage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;ResPage&gt; createState() =&gt; _Respage();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _Respage extends State&lt;ResPage&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Scaffold(//页面组件:包含导航 菜单 底部导航 悬浮按钮 主体内容</span><br><span class=\"line\">      appBar: AppBar(//appbar 顶部导航</span><br><span class=\"line\">        title: Text(&#x27;如何导入和使用flutter资源文件？&#x27;),//顶部标题</span><br><span class=\"line\">        leading: GestureDetector(//设定标题最左边的监听器</span><br><span class=\"line\">          onTap: () &#123;//按钮方法</span><br><span class=\"line\">            Navigator.pop(context);//触发离开当前页面</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          child: Icon(Icons.arrow_back),//按钮图标 返回键</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      body: Center(//主体内容：居中布局</span><br><span class=\"line\">        child: Column(//使用column按顺序排列组件</span><br><span class=\"line\">          mainAxisAlignment: MainAxisAlignment.center,//居中显示</span><br><span class=\"line\">          children: const &lt;Widget&gt;[</span><br><span class=\"line\">            Image(//使用图片组件</span><br><span class=\"line\">              width: 350,//定义宽度</span><br><span class=\"line\">              height: 550,//高度</span><br><span class=\"line\">              image: AssetImage(&#x27;images/night.jpg&#x27;),//通过路径图片显示图片</span><br><span class=\"line\">            )</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"vsco+hexo+github创建博客","date":"2022-04-20T06:14:38.000Z","_content":"![vsco+hexo+github创建博客](https://tva2.sinaimg.cn/large/0072Vf1pgy1foxki70guwj31kw0w0qpu.jpg)\n通过Vsco+Hexo+Github创建个人博客\n=============================\n环境准备\n<!-- more -->\n\n-----\n#### 本地mac = node12 + vscode + hexo + icarus  \n#### linux服务端 = ndoe12 + npm + pm2 + crontab\n\n**github创建项目储存博客内容  \n使用GithubDesktop打开项目**\n\n### 本地环境搭建\n**node使用了pkg方式安装**\n<https://nodejs.org/download/release/v12.22.7/>\n\n**安装 hexo-cli**  \nnpm i -g hexo-cli \n执行以下命令初始化hexo\nhexo init\n\n**编辑 _config.yml**\n\n    title: Jaakko的365天 #网站标题\n    subtitle: ''\n    description: ''\n    keywords: null #搜索关键字\n    author: Jaakko #作者名称\n    language: zh-CN #显示语言\n\n执行以下命令拉起hexo  \nhexo s\n\n**安装 icarus主题**  \nnpm install hexo-theme-icarus  \nhexo config theme icarus\n\n上述环境搭建好后使用GitHubDesktop  \n将内容Push到github\n\nlinux安装好环境后使用pm2后台挂起hexo  \nrun_pm2.js  \n\n    //run\n    const { exec } = require('child_process')\n    exec('hexo server',(error, stdout, stderr) => {\n    if(error){\n    console.log('exec error: ${error}')\n    return\n    }\n    console.log('stdout: ${stdout}');\n    console.log('stderr: ${stderr}');\n    })\n\npm2 start run_pm2.js  pm2挂载hexo  \npm2 startup  开机自启动  \n\nlinux使用crontab定时git pull\n\n    nano /etc/crontab\n    */10 * * * * root /root/blog/auto_git_pull.sh >> /root/blog.log 2>&1\n    /etc/init.d/crontab restart\n\nauto_git_pull.sh\n\n    #!/bin/bash\n\n    cd /root/blog/\n    git pull\n\n**linux服务端部署完毕**\n\n**mac本地**\nhexo创建文章\nhexo new \"我的第一篇博客\"\n编写文章\npush到github\n自动同步到网站\n","source":"_posts/vsco-hexo-github创建博客.md","raw":"---\ntitle: vsco+hexo+github创建博客\ndate: 2022-04-20 14:14:38\ntags: [hexo,blog,github]\ncategories: 技术分享\n---\n![vsco+hexo+github创建博客](https://tva2.sinaimg.cn/large/0072Vf1pgy1foxki70guwj31kw0w0qpu.jpg)\n通过Vsco+Hexo+Github创建个人博客\n=============================\n环境准备\n<!-- more -->\n\n-----\n#### 本地mac = node12 + vscode + hexo + icarus  \n#### linux服务端 = ndoe12 + npm + pm2 + crontab\n\n**github创建项目储存博客内容  \n使用GithubDesktop打开项目**\n\n### 本地环境搭建\n**node使用了pkg方式安装**\n<https://nodejs.org/download/release/v12.22.7/>\n\n**安装 hexo-cli**  \nnpm i -g hexo-cli \n执行以下命令初始化hexo\nhexo init\n\n**编辑 _config.yml**\n\n    title: Jaakko的365天 #网站标题\n    subtitle: ''\n    description: ''\n    keywords: null #搜索关键字\n    author: Jaakko #作者名称\n    language: zh-CN #显示语言\n\n执行以下命令拉起hexo  \nhexo s\n\n**安装 icarus主题**  \nnpm install hexo-theme-icarus  \nhexo config theme icarus\n\n上述环境搭建好后使用GitHubDesktop  \n将内容Push到github\n\nlinux安装好环境后使用pm2后台挂起hexo  \nrun_pm2.js  \n\n    //run\n    const { exec } = require('child_process')\n    exec('hexo server',(error, stdout, stderr) => {\n    if(error){\n    console.log('exec error: ${error}')\n    return\n    }\n    console.log('stdout: ${stdout}');\n    console.log('stderr: ${stderr}');\n    })\n\npm2 start run_pm2.js  pm2挂载hexo  \npm2 startup  开机自启动  \n\nlinux使用crontab定时git pull\n\n    nano /etc/crontab\n    */10 * * * * root /root/blog/auto_git_pull.sh >> /root/blog.log 2>&1\n    /etc/init.d/crontab restart\n\nauto_git_pull.sh\n\n    #!/bin/bash\n\n    cd /root/blog/\n    git pull\n\n**linux服务端部署完毕**\n\n**mac本地**\nhexo创建文章\nhexo new \"我的第一篇博客\"\n编写文章\npush到github\n自动同步到网站\n","slug":"vsco-hexo-github创建博客","published":1,"updated":"2022-05-13T07:57:16.627Z","_id":"cl341xpve000jbwx19wgfhhuy","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://tva2.sinaimg.cn/large/0072Vf1pgy1foxki70guwj31kw0w0qpu.jpg\" alt=\"vsco+hexo+github创建博客\"><br>通过Vsco+Hexo+Github创建个人博客<br>=============================<br>环境准备</p>\n<span id=\"more\"></span>\n\n<hr>\n<h4 id=\"本地mac-node12-vscode-hexo-icarus\"><a href=\"#本地mac-node12-vscode-hexo-icarus\" class=\"headerlink\" title=\"本地mac = node12 + vscode + hexo + icarus\"></a>本地mac = node12 + vscode + hexo + icarus</h4><h4 id=\"linux服务端-ndoe12-npm-pm2-crontab\"><a href=\"#linux服务端-ndoe12-npm-pm2-crontab\" class=\"headerlink\" title=\"linux服务端 = ndoe12 + npm + pm2 + crontab\"></a>linux服务端 = ndoe12 + npm + pm2 + crontab</h4><p><strong>github创建项目储存博客内容<br>使用GithubDesktop打开项目</strong></p>\n<h3 id=\"本地环境搭建\"><a href=\"#本地环境搭建\" class=\"headerlink\" title=\"本地环境搭建\"></a>本地环境搭建</h3><p><strong>node使用了pkg方式安装</strong><br><a href=\"https://nodejs.org/download/release/v12.22.7/\">https://nodejs.org/download/release/v12.22.7/</a></p>\n<p><strong>安装 hexo-cli</strong><br>npm i -g hexo-cli<br>执行以下命令初始化hexo<br>hexo init</p>\n<p><strong>编辑 _config.yml</strong></p>\n<pre><code>title: Jaakko的365天 #网站标题\nsubtitle: &#39;&#39;\ndescription: &#39;&#39;\nkeywords: null #搜索关键字\nauthor: Jaakko #作者名称\nlanguage: zh-CN #显示语言\n</code></pre>\n<p>执行以下命令拉起hexo<br>hexo s</p>\n<p><strong>安装 icarus主题</strong><br>npm install hexo-theme-icarus<br>hexo config theme icarus</p>\n<p>上述环境搭建好后使用GitHubDesktop<br>将内容Push到github</p>\n<p>linux安装好环境后使用pm2后台挂起hexo<br>run_pm2.js  </p>\n<pre><code>//run\nconst &#123; exec &#125; = require(&#39;child_process&#39;)\nexec(&#39;hexo server&#39;,(error, stdout, stderr) =&gt; &#123;\nif(error)&#123;\nconsole.log(&#39;exec error: $&#123;error&#125;&#39;)\nreturn\n&#125;\nconsole.log(&#39;stdout: $&#123;stdout&#125;&#39;);\nconsole.log(&#39;stderr: $&#123;stderr&#125;&#39;);\n&#125;)\n</code></pre>\n<p>pm2 start run_pm2.js  pm2挂载hexo<br>pm2 startup  开机自启动  </p>\n<p>linux使用crontab定时git pull</p>\n<pre><code>nano /etc/crontab\n*/10 * * * * root /root/blog/auto_git_pull.sh &gt;&gt; /root/blog.log 2&gt;&amp;1\n/etc/init.d/crontab restart\n</code></pre>\n<p>auto_git_pull.sh</p>\n<pre><code>#!/bin/bash\n\ncd /root/blog/\ngit pull\n</code></pre>\n<p><strong>linux服务端部署完毕</strong></p>\n<p><strong>mac本地</strong><br>hexo创建文章<br>hexo new “我的第一篇博客”<br>编写文章<br>push到github<br>自动同步到网站</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://tva2.sinaimg.cn/large/0072Vf1pgy1foxki70guwj31kw0w0qpu.jpg\" alt=\"vsco+hexo+github创建博客\"><br>通过Vsco+Hexo+Github创建个人博客<br>=============================<br>环境准备</p>","more":"<hr>\n<h4 id=\"本地mac-node12-vscode-hexo-icarus\"><a href=\"#本地mac-node12-vscode-hexo-icarus\" class=\"headerlink\" title=\"本地mac = node12 + vscode + hexo + icarus\"></a>本地mac = node12 + vscode + hexo + icarus</h4><h4 id=\"linux服务端-ndoe12-npm-pm2-crontab\"><a href=\"#linux服务端-ndoe12-npm-pm2-crontab\" class=\"headerlink\" title=\"linux服务端 = ndoe12 + npm + pm2 + crontab\"></a>linux服务端 = ndoe12 + npm + pm2 + crontab</h4><p><strong>github创建项目储存博客内容<br>使用GithubDesktop打开项目</strong></p>\n<h3 id=\"本地环境搭建\"><a href=\"#本地环境搭建\" class=\"headerlink\" title=\"本地环境搭建\"></a>本地环境搭建</h3><p><strong>node使用了pkg方式安装</strong><br><a href=\"https://nodejs.org/download/release/v12.22.7/\">https://nodejs.org/download/release/v12.22.7/</a></p>\n<p><strong>安装 hexo-cli</strong><br>npm i -g hexo-cli<br>执行以下命令初始化hexo<br>hexo init</p>\n<p><strong>编辑 _config.yml</strong></p>\n<pre><code>title: Jaakko的365天 #网站标题\nsubtitle: &#39;&#39;\ndescription: &#39;&#39;\nkeywords: null #搜索关键字\nauthor: Jaakko #作者名称\nlanguage: zh-CN #显示语言\n</code></pre>\n<p>执行以下命令拉起hexo<br>hexo s</p>\n<p><strong>安装 icarus主题</strong><br>npm install hexo-theme-icarus<br>hexo config theme icarus</p>\n<p>上述环境搭建好后使用GitHubDesktop<br>将内容Push到github</p>\n<p>linux安装好环境后使用pm2后台挂起hexo<br>run_pm2.js  </p>\n<pre><code>//run\nconst &#123; exec &#125; = require(&#39;child_process&#39;)\nexec(&#39;hexo server&#39;,(error, stdout, stderr) =&gt; &#123;\nif(error)&#123;\nconsole.log(&#39;exec error: $&#123;error&#125;&#39;)\nreturn\n&#125;\nconsole.log(&#39;stdout: $&#123;stdout&#125;&#39;);\nconsole.log(&#39;stderr: $&#123;stderr&#125;&#39;);\n&#125;)\n</code></pre>\n<p>pm2 start run_pm2.js  pm2挂载hexo<br>pm2 startup  开机自启动  </p>\n<p>linux使用crontab定时git pull</p>\n<pre><code>nano /etc/crontab\n*/10 * * * * root /root/blog/auto_git_pull.sh &gt;&gt; /root/blog.log 2&gt;&amp;1\n/etc/init.d/crontab restart\n</code></pre>\n<p>auto_git_pull.sh</p>\n<pre><code>#!/bin/bash\n\ncd /root/blog/\ngit pull\n</code></pre>\n<p><strong>linux服务端部署完毕</strong></p>\n<p><strong>mac本地</strong><br>hexo创建文章<br>hexo new “我的第一篇博客”<br>编写文章<br>push到github<br>自动同步到网站</p>"},{"title":"梦里花落知多少-三毛:克里斯","date":"2022-04-27T07:40:36.000Z","_content":"![克里斯](https://im1.book.com.tw/image/getImage?i=https://www.books.com.tw/img/CN1/142/93/CN11429310.jpg&v=59779084&w=348&h=348)\n<!-- more -->\n\n克里斯\n=====\n\n不得不说 这是一篇很吸引我的文章\n\n这本《梦里花落知多少》是我想要了解三毛而看的第一本书，而在克里斯这个章节中使我更加了解到Echo。\n\n**关于克里斯的叙述：**\n\n克里斯是心理学毕业后再纳粹政府工作，在工作期间迫于研究而对一个俘虏进行了一项心理实验，实验中将俘虏关在一个隔音的小黑屋子里，没有光线、没有时间观念、没有人与他交谈、不定时送餐，最终的结果当然是被关的人疯掉了。这使得克里斯非常的愧疚，觉得这些都是自己欠下的，要用一声的清贫生活来偿还。\n**克里斯与Echo的相遇：**  \n相遇是在一家影印馆内，排队期间老板因为一件小事要暂时离开，Echo只能在原地等待并帮老板看管机器，排在Echo后面的是克里斯，克里斯先找了Echo说话，问了一些关于中国的传统，Echo对于这些却也只是听闻不曾深入了解过。奇怪的是克里斯竟然知道Echo的名字，并且向Echo介绍了自己也是一名作家，有一个关于心理学的书已50w+的销量（只是为了增加销量而刻意刻上去的，实际销量1000也没有）。\n\n**两位郭姓未婚老年人姐妹：**  \nEcho由于用眼过度导致眼睛无法专注看任何东西，克里斯写过一本《关于治疗眼睛的方法》，邀请Echo观看此书，由于Echo眼睛不便阅读便要求克里斯念给她听，但是需要配合运动治疗克里斯邀请了Echo到他的家中做客并治疗眼睛，克里斯家中有两位老人只会荷兰语印尼华侨，在治疗眼睛的时候Echo也简述了关于她个人的生平，以及了解到了克里斯家中的状况以及Echo是唯一一个到过克里斯住所的人。\n\n**克里斯肺病：**  \n克里斯在家中病倒，由于克里斯没有其他的朋友，老人打电话给Echo让她赶紧过来看看，Echo将克里斯送到医院，并为克里斯承担了昂贵的一天两百美金的住院费，也在克里斯住院期间了解到了克里斯是在一家餐馆做卸冰背冰的工作，非常辛苦，收入也是非常微薄，这也是导致了克里斯肺病的根本原因，在克里斯病好了以后Echo也只是去过几次，后面甚至是再也不去了，也许是担心交谈中谈到金钱导致各自尴尬吧。\n\n一切又回到了最初相识的时候样子，只不过是多了一分克里斯对于Echo的愧疚。\n","source":"_posts/梦里花落知多少-三毛-克里斯.md","raw":"---\ntitle: 梦里花落知多少-三毛:克里斯\ndate: 2022-04-27 15:40:36\ntags: [book, 三毛]\ncategories: 读书分享\n---\n![克里斯](https://im1.book.com.tw/image/getImage?i=https://www.books.com.tw/img/CN1/142/93/CN11429310.jpg&v=59779084&w=348&h=348)\n<!-- more -->\n\n克里斯\n=====\n\n不得不说 这是一篇很吸引我的文章\n\n这本《梦里花落知多少》是我想要了解三毛而看的第一本书，而在克里斯这个章节中使我更加了解到Echo。\n\n**关于克里斯的叙述：**\n\n克里斯是心理学毕业后再纳粹政府工作，在工作期间迫于研究而对一个俘虏进行了一项心理实验，实验中将俘虏关在一个隔音的小黑屋子里，没有光线、没有时间观念、没有人与他交谈、不定时送餐，最终的结果当然是被关的人疯掉了。这使得克里斯非常的愧疚，觉得这些都是自己欠下的，要用一声的清贫生活来偿还。\n**克里斯与Echo的相遇：**  \n相遇是在一家影印馆内，排队期间老板因为一件小事要暂时离开，Echo只能在原地等待并帮老板看管机器，排在Echo后面的是克里斯，克里斯先找了Echo说话，问了一些关于中国的传统，Echo对于这些却也只是听闻不曾深入了解过。奇怪的是克里斯竟然知道Echo的名字，并且向Echo介绍了自己也是一名作家，有一个关于心理学的书已50w+的销量（只是为了增加销量而刻意刻上去的，实际销量1000也没有）。\n\n**两位郭姓未婚老年人姐妹：**  \nEcho由于用眼过度导致眼睛无法专注看任何东西，克里斯写过一本《关于治疗眼睛的方法》，邀请Echo观看此书，由于Echo眼睛不便阅读便要求克里斯念给她听，但是需要配合运动治疗克里斯邀请了Echo到他的家中做客并治疗眼睛，克里斯家中有两位老人只会荷兰语印尼华侨，在治疗眼睛的时候Echo也简述了关于她个人的生平，以及了解到了克里斯家中的状况以及Echo是唯一一个到过克里斯住所的人。\n\n**克里斯肺病：**  \n克里斯在家中病倒，由于克里斯没有其他的朋友，老人打电话给Echo让她赶紧过来看看，Echo将克里斯送到医院，并为克里斯承担了昂贵的一天两百美金的住院费，也在克里斯住院期间了解到了克里斯是在一家餐馆做卸冰背冰的工作，非常辛苦，收入也是非常微薄，这也是导致了克里斯肺病的根本原因，在克里斯病好了以后Echo也只是去过几次，后面甚至是再也不去了，也许是担心交谈中谈到金钱导致各自尴尬吧。\n\n一切又回到了最初相识的时候样子，只不过是多了一分克里斯对于Echo的愧疚。\n","slug":"梦里花落知多少-三毛-克里斯","published":1,"updated":"2022-05-13T07:57:45.285Z","_id":"cl341xpvf000mbwx1ctzy468s","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://im1.book.com.tw/image/getImage?i=https://www.books.com.tw/img/CN1/142/93/CN11429310.jpg&v=59779084&w=348&h=348\" alt=\"克里斯\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"克里斯\"><a href=\"#克里斯\" class=\"headerlink\" title=\"克里斯\"></a>克里斯</h1><p>不得不说 这是一篇很吸引我的文章</p>\n<p>这本《梦里花落知多少》是我想要了解三毛而看的第一本书，而在克里斯这个章节中使我更加了解到Echo。</p>\n<p><strong>关于克里斯的叙述：</strong></p>\n<p>克里斯是心理学毕业后再纳粹政府工作，在工作期间迫于研究而对一个俘虏进行了一项心理实验，实验中将俘虏关在一个隔音的小黑屋子里，没有光线、没有时间观念、没有人与他交谈、不定时送餐，最终的结果当然是被关的人疯掉了。这使得克里斯非常的愧疚，觉得这些都是自己欠下的，要用一声的清贫生活来偿还。<br><strong>克里斯与Echo的相遇：</strong><br>相遇是在一家影印馆内，排队期间老板因为一件小事要暂时离开，Echo只能在原地等待并帮老板看管机器，排在Echo后面的是克里斯，克里斯先找了Echo说话，问了一些关于中国的传统，Echo对于这些却也只是听闻不曾深入了解过。奇怪的是克里斯竟然知道Echo的名字，并且向Echo介绍了自己也是一名作家，有一个关于心理学的书已50w+的销量（只是为了增加销量而刻意刻上去的，实际销量1000也没有）。</p>\n<p><strong>两位郭姓未婚老年人姐妹：</strong><br>Echo由于用眼过度导致眼睛无法专注看任何东西，克里斯写过一本《关于治疗眼睛的方法》，邀请Echo观看此书，由于Echo眼睛不便阅读便要求克里斯念给她听，但是需要配合运动治疗克里斯邀请了Echo到他的家中做客并治疗眼睛，克里斯家中有两位老人只会荷兰语印尼华侨，在治疗眼睛的时候Echo也简述了关于她个人的生平，以及了解到了克里斯家中的状况以及Echo是唯一一个到过克里斯住所的人。</p>\n<p><strong>克里斯肺病：</strong><br>克里斯在家中病倒，由于克里斯没有其他的朋友，老人打电话给Echo让她赶紧过来看看，Echo将克里斯送到医院，并为克里斯承担了昂贵的一天两百美金的住院费，也在克里斯住院期间了解到了克里斯是在一家餐馆做卸冰背冰的工作，非常辛苦，收入也是非常微薄，这也是导致了克里斯肺病的根本原因，在克里斯病好了以后Echo也只是去过几次，后面甚至是再也不去了，也许是担心交谈中谈到金钱导致各自尴尬吧。</p>\n<p>一切又回到了最初相识的时候样子，只不过是多了一分克里斯对于Echo的愧疚。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://im1.book.com.tw/image/getImage?i=https://www.books.com.tw/img/CN1/142/93/CN11429310.jpg&v=59779084&w=348&h=348\" alt=\"克里斯\"></p>","more":"<h1 id=\"克里斯\"><a href=\"#克里斯\" class=\"headerlink\" title=\"克里斯\"></a>克里斯</h1><p>不得不说 这是一篇很吸引我的文章</p>\n<p>这本《梦里花落知多少》是我想要了解三毛而看的第一本书，而在克里斯这个章节中使我更加了解到Echo。</p>\n<p><strong>关于克里斯的叙述：</strong></p>\n<p>克里斯是心理学毕业后再纳粹政府工作，在工作期间迫于研究而对一个俘虏进行了一项心理实验，实验中将俘虏关在一个隔音的小黑屋子里，没有光线、没有时间观念、没有人与他交谈、不定时送餐，最终的结果当然是被关的人疯掉了。这使得克里斯非常的愧疚，觉得这些都是自己欠下的，要用一声的清贫生活来偿还。<br><strong>克里斯与Echo的相遇：</strong><br>相遇是在一家影印馆内，排队期间老板因为一件小事要暂时离开，Echo只能在原地等待并帮老板看管机器，排在Echo后面的是克里斯，克里斯先找了Echo说话，问了一些关于中国的传统，Echo对于这些却也只是听闻不曾深入了解过。奇怪的是克里斯竟然知道Echo的名字，并且向Echo介绍了自己也是一名作家，有一个关于心理学的书已50w+的销量（只是为了增加销量而刻意刻上去的，实际销量1000也没有）。</p>\n<p><strong>两位郭姓未婚老年人姐妹：</strong><br>Echo由于用眼过度导致眼睛无法专注看任何东西，克里斯写过一本《关于治疗眼睛的方法》，邀请Echo观看此书，由于Echo眼睛不便阅读便要求克里斯念给她听，但是需要配合运动治疗克里斯邀请了Echo到他的家中做客并治疗眼睛，克里斯家中有两位老人只会荷兰语印尼华侨，在治疗眼睛的时候Echo也简述了关于她个人的生平，以及了解到了克里斯家中的状况以及Echo是唯一一个到过克里斯住所的人。</p>\n<p><strong>克里斯肺病：</strong><br>克里斯在家中病倒，由于克里斯没有其他的朋友，老人打电话给Echo让她赶紧过来看看，Echo将克里斯送到医院，并为克里斯承担了昂贵的一天两百美金的住院费，也在克里斯住院期间了解到了克里斯是在一家餐馆做卸冰背冰的工作，非常辛苦，收入也是非常微薄，这也是导致了克里斯肺病的根本原因，在克里斯病好了以后Echo也只是去过几次，后面甚至是再也不去了，也许是担心交谈中谈到金钱导致各自尴尬吧。</p>\n<p>一切又回到了最初相识的时候样子，只不过是多了一分克里斯对于Echo的愧疚。</p>"},{"title":"梦里花落知多少-三毛:荒山之夜","date":"2022-04-26T11:32:36.000Z","_content":"![](https://im1.book.com.tw/image/getImage?i=https://www.books.com.tw/img/CN1/142/93/CN11429310.jpg&v=59779084&w=348&h=348)\n<!-- more -->\n\n荒山之夜\n=======\n\n**Echo的好友拉蒙爱上了一位正在念高中的女学生**\n\n**拉蒙问了一个问题，Echo回答的很好**\n\n“做木匠是低贱的工作吗？”\n\n“不，不是的”\n\n“那为什么读书人经常看不起我们这些木匠呢？”\n“那是因为他们没有把书念好，脑筋念笨了呢！”  \n\n\n\n\n**当Echo因为胃痛想要在夜里独自下山时**\n\n**拉蒙想要送她下山，却被拒绝**\n\n他说：“Echo，你是骄傲的，你一向性格温和，其实是固执而拒人千里的”\n\n\n","source":"_posts/梦里花落知多少-三毛-荒山之夜.md","raw":"---\ntitle: 梦里花落知多少-三毛:荒山之夜\ndate: 2022-04-26 19:32:36\ntags: [book, 三毛]\ncategories: 读书分享\n---\n![](https://im1.book.com.tw/image/getImage?i=https://www.books.com.tw/img/CN1/142/93/CN11429310.jpg&v=59779084&w=348&h=348)\n<!-- more -->\n\n荒山之夜\n=======\n\n**Echo的好友拉蒙爱上了一位正在念高中的女学生**\n\n**拉蒙问了一个问题，Echo回答的很好**\n\n“做木匠是低贱的工作吗？”\n\n“不，不是的”\n\n“那为什么读书人经常看不起我们这些木匠呢？”\n“那是因为他们没有把书念好，脑筋念笨了呢！”  \n\n\n\n\n**当Echo因为胃痛想要在夜里独自下山时**\n\n**拉蒙想要送她下山，却被拒绝**\n\n他说：“Echo，你是骄傲的，你一向性格温和，其实是固执而拒人千里的”\n\n\n","slug":"梦里花落知多少-三毛-荒山之夜","published":1,"updated":"2022-05-13T07:57:49.178Z","_id":"cl341xpvg000rbwx1cxr9ay7b","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://im1.book.com.tw/image/getImage?i=https://www.books.com.tw/img/CN1/142/93/CN11429310.jpg&v=59779084&w=348&h=348\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"荒山之夜\"><a href=\"#荒山之夜\" class=\"headerlink\" title=\"荒山之夜\"></a>荒山之夜</h1><p><strong>Echo的好友拉蒙爱上了一位正在念高中的女学生</strong></p>\n<p><strong>拉蒙问了一个问题，Echo回答的很好</strong></p>\n<p>“做木匠是低贱的工作吗？”</p>\n<p>“不，不是的”</p>\n<p>“那为什么读书人经常看不起我们这些木匠呢？”<br>“那是因为他们没有把书念好，脑筋念笨了呢！”  </p>\n<p><strong>当Echo因为胃痛想要在夜里独自下山时</strong></p>\n<p><strong>拉蒙想要送她下山，却被拒绝</strong></p>\n<p>他说：“Echo，你是骄傲的，你一向性格温和，其实是固执而拒人千里的”</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://im1.book.com.tw/image/getImage?i=https://www.books.com.tw/img/CN1/142/93/CN11429310.jpg&v=59779084&w=348&h=348\"></p>","more":"<h1 id=\"荒山之夜\"><a href=\"#荒山之夜\" class=\"headerlink\" title=\"荒山之夜\"></a>荒山之夜</h1><p><strong>Echo的好友拉蒙爱上了一位正在念高中的女学生</strong></p>\n<p><strong>拉蒙问了一个问题，Echo回答的很好</strong></p>\n<p>“做木匠是低贱的工作吗？”</p>\n<p>“不，不是的”</p>\n<p>“那为什么读书人经常看不起我们这些木匠呢？”<br>“那是因为他们没有把书念好，脑筋念笨了呢！”  </p>\n<p><strong>当Echo因为胃痛想要在夜里独自下山时</strong></p>\n<p><strong>拉蒙想要送她下山，却被拒绝</strong></p>\n<p>他说：“Echo，你是骄傲的，你一向性格温和，其实是固执而拒人千里的”</p>"},{"title":"申请一年野卡域名证书","date":"2022-04-22T06:24:23.000Z","_content":"![关于申请域名证书这件小事](https://tva1.sinaimg.cn/large/a15b4afegy1fmvjgbajynj21hc0u07du.jpg)\n<!-- more -->\n\n首先\n---\n由于Let'S申请的免费泛域证书有效期只有三个月  \n每三个月就要重新生成证书并替换证书文件  \n不像单域名一样可以无限renew并且不用替换证书文件\n\n然后\n---\n我在购买SSL的网站转了一圈发现 购买价格最低在40美金一年  \n平均价格在350美金 名牌商家的价格甚至超过600美金\n所以\n---\n我找到了一个低成本（30元）申请一年泛域名证书方法  \n在节礼给大家分享一下  \n流程大概是下面这样  \n+ 1.申请一个域名邮箱(admin@domain.ltd)\n+ 2.生成CSR + Private Key\n+ 3.使用Token + CSR 申请Alpha泛域\n+ 4.在邮箱内确认开通泛域信息\n+ 5.合并中间证书\n\n[域名邮箱申请](https://mail.zohu.com.cn)\n[CSR生成地址](https://api.moeclub.org/SSL/CSR)  \n[SSL申请地址](https://api.moeclub.org/SSL)  \n[Token购买地址](https://shop.moeclub.org)\n\n证书合并方式：  \n新建一个空白文档(cert.pem)  \n1. 粘贴邮件尾部的证书\n2. 粘贴Alpha中间证书  \n‘-----BEGIN CERTIFICATE-----\nMIIETTCCAzWgAwIBAgILBAAAAAABRE7wNjEwDQYJKoZIhvcNAQELBQAwVzELMAkG\nA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv\nb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw0xNDAyMjAxMDAw\nMDBaFw0yNDAyMjAxMDAwMDBaMEwxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i\nYWxTaWduIG52LXNhMSIwIAYDVQQDExlBbHBoYVNTTCBDQSAtIFNIQTI1NiAtIEcy\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2gHs5OxzYPt+j2q3xhfj\nkmQy1KwA2aIPue3ua4qGypJn2XTXXUcCPI9A1p5tFM3D2ik5pw8FCmiiZhoexLKL\ndljlq10dj0CzOYvvHoN9ItDjqQAu7FPPYhmFRChMwCfLew7sEGQAEKQFzKByvkFs\nMVtI5LHsuSPrVU3QfWJKpbSlpFmFxSWRpv6mCZ8GEG2PgQxkQF5zAJrgLmWYVBAA\ncJjI4e00X9icxw3A1iNZRfz+VXqG7pRgIvGu0eZVRvaZxRsIdF+ssGSEj4k4HKGn\nkCFPAm694GFn1PhChw8K98kEbSqpL+9Cpd/do1PbmB6B+Zpye1reTz5/olig4het\nZwIDAQABo4IBIzCCAR8wDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8C\nAQAwHQYDVR0OBBYEFPXN1TwIUPlqTzq3l9pWg+Zp0mj3MEUGA1UdIAQ+MDwwOgYE\nVR0gADAyMDAGCCsGAQUFBwIBFiRodHRwczovL3d3dy5hbHBoYXNzbC5jb20vcmVw\nb3NpdG9yeS8wMwYDVR0fBCwwKjAooCagJIYiaHR0cDovL2NybC5nbG9iYWxzaWdu\nLm5ldC9yb290LmNybDA9BggrBgEFBQcBAQQxMC8wLQYIKwYBBQUHMAGGIWh0dHA6\nLy9vY3NwLmdsb2JhbHNpZ24uY29tL3Jvb3RyMTAfBgNVHSMEGDAWgBRge2YaRQ2X\nyolQL30EzTSo//z9SzANBgkqhkiG9w0BAQsFAAOCAQEAYEBoFkfnFo3bXKFWKsv0\nXJuwHqJL9csCP/gLofKnQtS3TOvjZoDzJUN4LhsXVgdSGMvRqOzm+3M+pGKMgLTS\nxRJzo9P6Aji+Yz2EuJnB8br3n8NA0VgYU8Fi3a8YQn80TsVD1XGwMADH45CuP1eG\nl87qDBKOInDjZqdUfy4oy9RU0LMeYmcI+Sfhy+NmuCQbiWqJRGXy2UzSWByMTsCV\nodTvZy84IOgu/5ZR8LrYPZJwR2UcnnNytGAMXOLRc3bgr07i5TelRS+KIz6HxzDm\nMTh89N1SyvNTBCVXVmaU6Avu5gMUTu79bZRknl7OedSyps9AsUSoPocZXun4IRZZ\nUw==\n-----END CERTIFICATE-----’\n\n以上[1+2]合并成cert.pem  \n\n另外新建一个空白文档(cert.key)  \n粘贴在第二步生成Private Key  \n\n**将以上两个证书密钥部署到服务器即可完成证书申请到部署全部步骤**\n\n\n\n\n","source":"_posts/申请一年野卡域名证书.md","raw":"---\ntitle: 申请一年野卡域名证书\ndate: 2022-04-22 14:24:23\ntags: [SSL]\ncategories: 技术分享\n---\n![关于申请域名证书这件小事](https://tva1.sinaimg.cn/large/a15b4afegy1fmvjgbajynj21hc0u07du.jpg)\n<!-- more -->\n\n首先\n---\n由于Let'S申请的免费泛域证书有效期只有三个月  \n每三个月就要重新生成证书并替换证书文件  \n不像单域名一样可以无限renew并且不用替换证书文件\n\n然后\n---\n我在购买SSL的网站转了一圈发现 购买价格最低在40美金一年  \n平均价格在350美金 名牌商家的价格甚至超过600美金\n所以\n---\n我找到了一个低成本（30元）申请一年泛域名证书方法  \n在节礼给大家分享一下  \n流程大概是下面这样  \n+ 1.申请一个域名邮箱(admin@domain.ltd)\n+ 2.生成CSR + Private Key\n+ 3.使用Token + CSR 申请Alpha泛域\n+ 4.在邮箱内确认开通泛域信息\n+ 5.合并中间证书\n\n[域名邮箱申请](https://mail.zohu.com.cn)\n[CSR生成地址](https://api.moeclub.org/SSL/CSR)  \n[SSL申请地址](https://api.moeclub.org/SSL)  \n[Token购买地址](https://shop.moeclub.org)\n\n证书合并方式：  \n新建一个空白文档(cert.pem)  \n1. 粘贴邮件尾部的证书\n2. 粘贴Alpha中间证书  \n‘-----BEGIN CERTIFICATE-----\nMIIETTCCAzWgAwIBAgILBAAAAAABRE7wNjEwDQYJKoZIhvcNAQELBQAwVzELMAkG\nA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv\nb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw0xNDAyMjAxMDAw\nMDBaFw0yNDAyMjAxMDAwMDBaMEwxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i\nYWxTaWduIG52LXNhMSIwIAYDVQQDExlBbHBoYVNTTCBDQSAtIFNIQTI1NiAtIEcy\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2gHs5OxzYPt+j2q3xhfj\nkmQy1KwA2aIPue3ua4qGypJn2XTXXUcCPI9A1p5tFM3D2ik5pw8FCmiiZhoexLKL\ndljlq10dj0CzOYvvHoN9ItDjqQAu7FPPYhmFRChMwCfLew7sEGQAEKQFzKByvkFs\nMVtI5LHsuSPrVU3QfWJKpbSlpFmFxSWRpv6mCZ8GEG2PgQxkQF5zAJrgLmWYVBAA\ncJjI4e00X9icxw3A1iNZRfz+VXqG7pRgIvGu0eZVRvaZxRsIdF+ssGSEj4k4HKGn\nkCFPAm694GFn1PhChw8K98kEbSqpL+9Cpd/do1PbmB6B+Zpye1reTz5/olig4het\nZwIDAQABo4IBIzCCAR8wDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8C\nAQAwHQYDVR0OBBYEFPXN1TwIUPlqTzq3l9pWg+Zp0mj3MEUGA1UdIAQ+MDwwOgYE\nVR0gADAyMDAGCCsGAQUFBwIBFiRodHRwczovL3d3dy5hbHBoYXNzbC5jb20vcmVw\nb3NpdG9yeS8wMwYDVR0fBCwwKjAooCagJIYiaHR0cDovL2NybC5nbG9iYWxzaWdu\nLm5ldC9yb290LmNybDA9BggrBgEFBQcBAQQxMC8wLQYIKwYBBQUHMAGGIWh0dHA6\nLy9vY3NwLmdsb2JhbHNpZ24uY29tL3Jvb3RyMTAfBgNVHSMEGDAWgBRge2YaRQ2X\nyolQL30EzTSo//z9SzANBgkqhkiG9w0BAQsFAAOCAQEAYEBoFkfnFo3bXKFWKsv0\nXJuwHqJL9csCP/gLofKnQtS3TOvjZoDzJUN4LhsXVgdSGMvRqOzm+3M+pGKMgLTS\nxRJzo9P6Aji+Yz2EuJnB8br3n8NA0VgYU8Fi3a8YQn80TsVD1XGwMADH45CuP1eG\nl87qDBKOInDjZqdUfy4oy9RU0LMeYmcI+Sfhy+NmuCQbiWqJRGXy2UzSWByMTsCV\nodTvZy84IOgu/5ZR8LrYPZJwR2UcnnNytGAMXOLRc3bgr07i5TelRS+KIz6HxzDm\nMTh89N1SyvNTBCVXVmaU6Avu5gMUTu79bZRknl7OedSyps9AsUSoPocZXun4IRZZ\nUw==\n-----END CERTIFICATE-----’\n\n以上[1+2]合并成cert.pem  \n\n另外新建一个空白文档(cert.key)  \n粘贴在第二步生成Private Key  \n\n**将以上两个证书密钥部署到服务器即可完成证书申请到部署全部步骤**\n\n\n\n\n","slug":"申请一年野卡域名证书","published":1,"updated":"2022-05-13T07:57:41.710Z","_id":"cl341xpvo001vbwx1gwc614fq","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://tva1.sinaimg.cn/large/a15b4afegy1fmvjgbajynj21hc0u07du.jpg\" alt=\"关于申请域名证书这件小事\"></p>\n<span id=\"more\"></span>\n\n<h2 id=\"首先\"><a href=\"#首先\" class=\"headerlink\" title=\"首先\"></a>首先</h2><p>由于Let’S申请的免费泛域证书有效期只有三个月<br>每三个月就要重新生成证书并替换证书文件<br>不像单域名一样可以无限renew并且不用替换证书文件</p>\n<h2 id=\"然后\"><a href=\"#然后\" class=\"headerlink\" title=\"然后\"></a>然后</h2><p>我在购买SSL的网站转了一圈发现 购买价格最低在40美金一年<br>平均价格在350美金 名牌商家的价格甚至超过600美金<br>所以</p>\n<hr>\n<p>我找到了一个低成本（30元）申请一年泛域名证书方法<br>在节礼给大家分享一下<br>流程大概是下面这样  </p>\n<ul>\n<li>1.申请一个域名邮箱(<a href=\"mailto:&#x61;&#100;&#109;&#x69;&#110;&#x40;&#x64;&#111;&#109;&#97;&#105;&#110;&#46;&#x6c;&#116;&#100;\">&#x61;&#100;&#109;&#x69;&#110;&#x40;&#x64;&#111;&#109;&#97;&#105;&#110;&#46;&#x6c;&#116;&#100;</a>)</li>\n<li>2.生成CSR + Private Key</li>\n<li>3.使用Token + CSR 申请Alpha泛域</li>\n<li>4.在邮箱内确认开通泛域信息</li>\n<li>5.合并中间证书</li>\n</ul>\n<p><a href=\"https://mail.zohu.com.cn/\">域名邮箱申请</a><br><a href=\"https://api.moeclub.org/SSL/CSR\">CSR生成地址</a><br><a href=\"https://api.moeclub.org/SSL\">SSL申请地址</a><br><a href=\"https://shop.moeclub.org/\">Token购买地址</a></p>\n<p>证书合并方式：<br>新建一个空白文档(cert.pem)  </p>\n<ol>\n<li>粘贴邮件尾部的证书</li>\n<li>粘贴Alpha中间证书<br>‘—–BEGIN CERTIFICATE—–<br>MIIETTCCAzWgAwIBAgILBAAAAAABRE7wNjEwDQYJKoZIhvcNAQELBQAwVzELMAkG<br>A1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv<br>b3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw0xNDAyMjAxMDAw<br>MDBaFw0yNDAyMjAxMDAwMDBaMEwxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i<br>YWxTaWduIG52LXNhMSIwIAYDVQQDExlBbHBoYVNTTCBDQSAtIFNIQTI1NiAtIEcy<br>MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2gHs5OxzYPt+j2q3xhfj<br>kmQy1KwA2aIPue3ua4qGypJn2XTXXUcCPI9A1p5tFM3D2ik5pw8FCmiiZhoexLKL<br>dljlq10dj0CzOYvvHoN9ItDjqQAu7FPPYhmFRChMwCfLew7sEGQAEKQFzKByvkFs<br>MVtI5LHsuSPrVU3QfWJKpbSlpFmFxSWRpv6mCZ8GEG2PgQxkQF5zAJrgLmWYVBAA<br>cJjI4e00X9icxw3A1iNZRfz+VXqG7pRgIvGu0eZVRvaZxRsIdF+ssGSEj4k4HKGn<br>kCFPAm694GFn1PhChw8K98kEbSqpL+9Cpd/do1PbmB6B+Zpye1reTz5/olig4het<br>ZwIDAQABo4IBIzCCAR8wDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8C<br>AQAwHQYDVR0OBBYEFPXN1TwIUPlqTzq3l9pWg+Zp0mj3MEUGA1UdIAQ+MDwwOgYE<br>VR0gADAyMDAGCCsGAQUFBwIBFiRodHRwczovL3d3dy5hbHBoYXNzbC5jb20vcmVw<br>b3NpdG9yeS8wMwYDVR0fBCwwKjAooCagJIYiaHR0cDovL2NybC5nbG9iYWxzaWdu<br>Lm5ldC9yb290LmNybDA9BggrBgEFBQcBAQQxMC8wLQYIKwYBBQUHMAGGIWh0dHA6<br>Ly9vY3NwLmdsb2JhbHNpZ24uY29tL3Jvb3RyMTAfBgNVHSMEGDAWgBRge2YaRQ2X<br>yolQL30EzTSo//z9SzANBgkqhkiG9w0BAQsFAAOCAQEAYEBoFkfnFo3bXKFWKsv0<br>XJuwHqJL9csCP/gLofKnQtS3TOvjZoDzJUN4LhsXVgdSGMvRqOzm+3M+pGKMgLTS<br>xRJzo9P6Aji+Yz2EuJnB8br3n8NA0VgYU8Fi3a8YQn80TsVD1XGwMADH45CuP1eG<br>l87qDBKOInDjZqdUfy4oy9RU0LMeYmcI+Sfhy+NmuCQbiWqJRGXy2UzSWByMTsCV<br>odTvZy84IOgu/5ZR8LrYPZJwR2UcnnNytGAMXOLRc3bgr07i5TelRS+KIz6HxzDm<br>MTh89N1SyvNTBCVXVmaU6Avu5gMUTu79bZRknl7OedSyps9AsUSoPocZXun4IRZZ<br>Uw==</li>\n</ol>\n<p>—–END CERTIFICATE—–’</p>\n<p>以上[1+2]合并成cert.pem  </p>\n<p>另外新建一个空白文档(cert.key)<br>粘贴在第二步生成Private Key  </p>\n<p><strong>将以上两个证书密钥部署到服务器即可完成证书申请到部署全部步骤</strong></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://tva1.sinaimg.cn/large/a15b4afegy1fmvjgbajynj21hc0u07du.jpg\" alt=\"关于申请域名证书这件小事\"></p>","more":"<h2 id=\"首先\"><a href=\"#首先\" class=\"headerlink\" title=\"首先\"></a>首先</h2><p>由于Let’S申请的免费泛域证书有效期只有三个月<br>每三个月就要重新生成证书并替换证书文件<br>不像单域名一样可以无限renew并且不用替换证书文件</p>\n<h2 id=\"然后\"><a href=\"#然后\" class=\"headerlink\" title=\"然后\"></a>然后</h2><p>我在购买SSL的网站转了一圈发现 购买价格最低在40美金一年<br>平均价格在350美金 名牌商家的价格甚至超过600美金<br>所以</p>\n<hr>\n<p>我找到了一个低成本（30元）申请一年泛域名证书方法<br>在节礼给大家分享一下<br>流程大概是下面这样  </p>\n<ul>\n<li>1.申请一个域名邮箱(<a href=\"mailto:&#x61;&#100;&#109;&#x69;&#110;&#x40;&#x64;&#111;&#109;&#97;&#105;&#110;&#46;&#x6c;&#116;&#100;\">&#x61;&#100;&#109;&#x69;&#110;&#x40;&#x64;&#111;&#109;&#97;&#105;&#110;&#46;&#x6c;&#116;&#100;</a>)</li>\n<li>2.生成CSR + Private Key</li>\n<li>3.使用Token + CSR 申请Alpha泛域</li>\n<li>4.在邮箱内确认开通泛域信息</li>\n<li>5.合并中间证书</li>\n</ul>\n<p><a href=\"https://mail.zohu.com.cn/\">域名邮箱申请</a><br><a href=\"https://api.moeclub.org/SSL/CSR\">CSR生成地址</a><br><a href=\"https://api.moeclub.org/SSL\">SSL申请地址</a><br><a href=\"https://shop.moeclub.org/\">Token购买地址</a></p>\n<p>证书合并方式：<br>新建一个空白文档(cert.pem)  </p>\n<ol>\n<li>粘贴邮件尾部的证书</li>\n<li>粘贴Alpha中间证书<br>‘—–BEGIN CERTIFICATE—–<br>MIIETTCCAzWgAwIBAgILBAAAAAABRE7wNjEwDQYJKoZIhvcNAQELBQAwVzELMAkG<br>A1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv<br>b3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw0xNDAyMjAxMDAw<br>MDBaFw0yNDAyMjAxMDAwMDBaMEwxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i<br>YWxTaWduIG52LXNhMSIwIAYDVQQDExlBbHBoYVNTTCBDQSAtIFNIQTI1NiAtIEcy<br>MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2gHs5OxzYPt+j2q3xhfj<br>kmQy1KwA2aIPue3ua4qGypJn2XTXXUcCPI9A1p5tFM3D2ik5pw8FCmiiZhoexLKL<br>dljlq10dj0CzOYvvHoN9ItDjqQAu7FPPYhmFRChMwCfLew7sEGQAEKQFzKByvkFs<br>MVtI5LHsuSPrVU3QfWJKpbSlpFmFxSWRpv6mCZ8GEG2PgQxkQF5zAJrgLmWYVBAA<br>cJjI4e00X9icxw3A1iNZRfz+VXqG7pRgIvGu0eZVRvaZxRsIdF+ssGSEj4k4HKGn<br>kCFPAm694GFn1PhChw8K98kEbSqpL+9Cpd/do1PbmB6B+Zpye1reTz5/olig4het<br>ZwIDAQABo4IBIzCCAR8wDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8C<br>AQAwHQYDVR0OBBYEFPXN1TwIUPlqTzq3l9pWg+Zp0mj3MEUGA1UdIAQ+MDwwOgYE<br>VR0gADAyMDAGCCsGAQUFBwIBFiRodHRwczovL3d3dy5hbHBoYXNzbC5jb20vcmVw<br>b3NpdG9yeS8wMwYDVR0fBCwwKjAooCagJIYiaHR0cDovL2NybC5nbG9iYWxzaWdu<br>Lm5ldC9yb290LmNybDA9BggrBgEFBQcBAQQxMC8wLQYIKwYBBQUHMAGGIWh0dHA6<br>Ly9vY3NwLmdsb2JhbHNpZ24uY29tL3Jvb3RyMTAfBgNVHSMEGDAWgBRge2YaRQ2X<br>yolQL30EzTSo//z9SzANBgkqhkiG9w0BAQsFAAOCAQEAYEBoFkfnFo3bXKFWKsv0<br>XJuwHqJL9csCP/gLofKnQtS3TOvjZoDzJUN4LhsXVgdSGMvRqOzm+3M+pGKMgLTS<br>xRJzo9P6Aji+Yz2EuJnB8br3n8NA0VgYU8Fi3a8YQn80TsVD1XGwMADH45CuP1eG<br>l87qDBKOInDjZqdUfy4oy9RU0LMeYmcI+Sfhy+NmuCQbiWqJRGXy2UzSWByMTsCV<br>odTvZy84IOgu/5ZR8LrYPZJwR2UcnnNytGAMXOLRc3bgr07i5TelRS+KIz6HxzDm<br>MTh89N1SyvNTBCVXVmaU6Avu5gMUTu79bZRknl7OedSyps9AsUSoPocZXun4IRZZ<br>Uw==</li>\n</ol>\n<p>—–END CERTIFICATE—–’</p>\n<p>以上[1+2]合并成cert.pem  </p>\n<p>另外新建一个空白文档(cert.key)<br>粘贴在第二步生成Private Key  </p>\n<p><strong>将以上两个证书密钥部署到服务器即可完成证书申请到部署全部步骤</strong></p>"},{"title":"重庆:因为一个人 记住一座城","date":"2022-05-07T04:25:47.000Z","_content":"![因为一个人 记住一座城](重庆-因为一个人-记住一座城/tittle.jpg)\n<!-- more -->\n\n![Day1: 漾 · LiveHouse](重庆-因为一个人-记住一座城/livehouse.png)\nDay1: 漾 · LiveHouse\n------------\n\n一个偶尔会很嘈杂的地方，一个很多俊男靓女的地方，一个很多网红推荐的听歌喝酒玩游戏的地方，这里也是我们相见的地方。  \n要说实话的话，这里确实没什么好玩的，除了其中那么一两个驻唱的唱功还可以，氛围一般。\n\nSlowly\n--------\n当天我们预约的位置需要在九点半之前到，否则位置就要被取消，所以我们赶在九点钟就到了现场，一开始等人齐还没有喝酒，正式开始喝的话应该是要从十点钟算起，喝了一个小时，还没看到你人来，我开始担心了：她该不会放我们鸽子了吧？所幸大概是十一点半左右，你终于来了，我着急的心终于放了下来，虽然你的长相很普通，但是你的笑容很甜，当时的我还没有这么想，现在想起来也只能回味了。\n\nIntro\n------------\n或许是因为只有我坐在你旁边，而且酒吧的音响很大声，所以你只能找我说话，你向我把周围所有人都稍微打听了一遍，然后向每个人都敬了一杯酒。我感到意外，这就是重庆人打招呼的方式吗。  \n你问我多大，我说我00的，你说你也是，但我一眼就看出来了你不是，后面你也坦诚了其实你是99的。  \n在玩游戏的时候通过交流中我也简单的了解到虽然你的外表娇小，但是你性格的另一面是个内心强大的人，有着面对一切的勇气。\n\nDay1:End\n--------\n到了晚上大概是一点多，大家都喝的差不多了，也就各自打车回家了。\n\nDay2:Begin\n----------\n回到酒店后，我知道第二天我们还会出来见面，或许这就是心灵感应吧，第二天你真的出现了。跟我们一起吃了晚饭后逛了一会决定去重庆长江大桥的桥底下，也就是洪崖洞的对岸拍一些照片。在等待她们拍照的时候重庆的特色一个是在景点内一些小贩会过来喊一圈她们想要像你出售的特色小吃。然后你突然问我你想吃冰棍吗，我说不吃。我就猜到其实你想吃随即就问道：你想吃吗?你说出了内心的想法，其实你不想一个人吃，那我作为一个男子汉当然是要满足身边女性的所有诉求的，好在小贩子还没有走远，追过去还来得及。我立即跑过去要了两根老冰棍，真的很冰，随即我想到的是你穿的这么少，会不会冷，所幸我带了一件薄外套，冷的话你也可以随时找我借。在桥底往上看是重庆的长江大桥，往对岸看就是著名的风貌街道的洪崖洞，洪崖洞背后的就是一栋一栋的高楼，去过的应该都不由得感叹一声重庆的夜景真的很美，不过重要的不是夜景有多美，而是一起看夜景的人是谁吧。\n\n![Night](重庆-因为一个人-记住一座城/night.jpg)\nNight\n----------\n在桥底上来之后打了两辆车到了一条路边有几家摆摊的地方，本意是想要到一家特色烧烤的连锁店吃串串的，但是好像大家都不是很想吃串串，就点了一人一碗在重庆吃的最多的东西”冰汤圆”。然后找了一家看起来应该很好吃的烧烤档坐下喝酒吃烧烤。也是在这间烧烤档你给我留下了最深的影像，不知道是不是因为坐在你对面的是我，所以你总是看着我，看着我时也总是带着你那很愉悦的看起来很甜美的微笑，你的笑容大概就是我这次旅行的最大收获了，谢谢你，陈小姐。酒后当然也就各自散去了，虽然第二天还要赶早上八点的飞机，但也还是喝的差点就不省人事了。\n\n![sunraise](重庆-因为一个人-记住一座城/sunraise.jpg)\nTraval:END\n----------\n因为要赶早上八点的飞机，所以在凌晨五点半就要起床洗漱收拾东西，起床后我感到很空虚，心里好像少了什么东西，像是失恋了一样，每当重要的人要离开的时候这种感觉就会涌上心头，所幸在坐出租车到机场的路上正是太阳升起的时候，稍微治愈了我。  \n下午一点回到了住所，感情愈发强烈，陈小姐在不知不觉中就成为了我心里的那个重要的人，但是我们终究也只能是擦肩而过的成为彼此的路人了，我相信这个世界上是存在心灵感应的，当我内心中的感情涌上心头的时候，你那边应该也是吧。从重庆回来之后我发现时间过得很慢，慢到我能自我意识到我失去了你，慢到我没法专注于眼前的工作，慢到每时每刻我都会想起你那甜美的笑容，慢到我想马上坐上飞机回到重庆去见你。这篇文章也是趁着感情还没有完全消失之前，虽然没法把她永远留下来，但我可以将这美好的景色留下来，每当看到的时候都能想起她。  \n\n![end](重庆-因为一个人-记住一座城/end.jpg)\n`热情相拥的相识过后竟是落寞的悲欢离合，谁又会只满足于当下的快乐呢？`\n\n","source":"_posts/重庆-因为一个人-记住一座城.md","raw":"---\ntitle: 重庆:因为一个人 记住一座城\ndate: 2022-05-07 12:25:47\ntags: [旅行, 重庆]\ncategories: 旅行日记\n---\n![因为一个人 记住一座城](重庆-因为一个人-记住一座城/tittle.jpg)\n<!-- more -->\n\n![Day1: 漾 · LiveHouse](重庆-因为一个人-记住一座城/livehouse.png)\nDay1: 漾 · LiveHouse\n------------\n\n一个偶尔会很嘈杂的地方，一个很多俊男靓女的地方，一个很多网红推荐的听歌喝酒玩游戏的地方，这里也是我们相见的地方。  \n要说实话的话，这里确实没什么好玩的，除了其中那么一两个驻唱的唱功还可以，氛围一般。\n\nSlowly\n--------\n当天我们预约的位置需要在九点半之前到，否则位置就要被取消，所以我们赶在九点钟就到了现场，一开始等人齐还没有喝酒，正式开始喝的话应该是要从十点钟算起，喝了一个小时，还没看到你人来，我开始担心了：她该不会放我们鸽子了吧？所幸大概是十一点半左右，你终于来了，我着急的心终于放了下来，虽然你的长相很普通，但是你的笑容很甜，当时的我还没有这么想，现在想起来也只能回味了。\n\nIntro\n------------\n或许是因为只有我坐在你旁边，而且酒吧的音响很大声，所以你只能找我说话，你向我把周围所有人都稍微打听了一遍，然后向每个人都敬了一杯酒。我感到意外，这就是重庆人打招呼的方式吗。  \n你问我多大，我说我00的，你说你也是，但我一眼就看出来了你不是，后面你也坦诚了其实你是99的。  \n在玩游戏的时候通过交流中我也简单的了解到虽然你的外表娇小，但是你性格的另一面是个内心强大的人，有着面对一切的勇气。\n\nDay1:End\n--------\n到了晚上大概是一点多，大家都喝的差不多了，也就各自打车回家了。\n\nDay2:Begin\n----------\n回到酒店后，我知道第二天我们还会出来见面，或许这就是心灵感应吧，第二天你真的出现了。跟我们一起吃了晚饭后逛了一会决定去重庆长江大桥的桥底下，也就是洪崖洞的对岸拍一些照片。在等待她们拍照的时候重庆的特色一个是在景点内一些小贩会过来喊一圈她们想要像你出售的特色小吃。然后你突然问我你想吃冰棍吗，我说不吃。我就猜到其实你想吃随即就问道：你想吃吗?你说出了内心的想法，其实你不想一个人吃，那我作为一个男子汉当然是要满足身边女性的所有诉求的，好在小贩子还没有走远，追过去还来得及。我立即跑过去要了两根老冰棍，真的很冰，随即我想到的是你穿的这么少，会不会冷，所幸我带了一件薄外套，冷的话你也可以随时找我借。在桥底往上看是重庆的长江大桥，往对岸看就是著名的风貌街道的洪崖洞，洪崖洞背后的就是一栋一栋的高楼，去过的应该都不由得感叹一声重庆的夜景真的很美，不过重要的不是夜景有多美，而是一起看夜景的人是谁吧。\n\n![Night](重庆-因为一个人-记住一座城/night.jpg)\nNight\n----------\n在桥底上来之后打了两辆车到了一条路边有几家摆摊的地方，本意是想要到一家特色烧烤的连锁店吃串串的，但是好像大家都不是很想吃串串，就点了一人一碗在重庆吃的最多的东西”冰汤圆”。然后找了一家看起来应该很好吃的烧烤档坐下喝酒吃烧烤。也是在这间烧烤档你给我留下了最深的影像，不知道是不是因为坐在你对面的是我，所以你总是看着我，看着我时也总是带着你那很愉悦的看起来很甜美的微笑，你的笑容大概就是我这次旅行的最大收获了，谢谢你，陈小姐。酒后当然也就各自散去了，虽然第二天还要赶早上八点的飞机，但也还是喝的差点就不省人事了。\n\n![sunraise](重庆-因为一个人-记住一座城/sunraise.jpg)\nTraval:END\n----------\n因为要赶早上八点的飞机，所以在凌晨五点半就要起床洗漱收拾东西，起床后我感到很空虚，心里好像少了什么东西，像是失恋了一样，每当重要的人要离开的时候这种感觉就会涌上心头，所幸在坐出租车到机场的路上正是太阳升起的时候，稍微治愈了我。  \n下午一点回到了住所，感情愈发强烈，陈小姐在不知不觉中就成为了我心里的那个重要的人，但是我们终究也只能是擦肩而过的成为彼此的路人了，我相信这个世界上是存在心灵感应的，当我内心中的感情涌上心头的时候，你那边应该也是吧。从重庆回来之后我发现时间过得很慢，慢到我能自我意识到我失去了你，慢到我没法专注于眼前的工作，慢到每时每刻我都会想起你那甜美的笑容，慢到我想马上坐上飞机回到重庆去见你。这篇文章也是趁着感情还没有完全消失之前，虽然没法把她永远留下来，但我可以将这美好的景色留下来，每当看到的时候都能想起她。  \n\n![end](重庆-因为一个人-记住一座城/end.jpg)\n`热情相拥的相识过后竟是落寞的悲欢离合，谁又会只满足于当下的快乐呢？`\n\n","slug":"重庆-因为一个人-记住一座城","published":1,"updated":"2022-05-13T07:58:03.743Z","_id":"cl341xpvo001wbwx1cind5r9z","comments":1,"layout":"post","photos":[],"link":"","content":"<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/tittle.jpg\" class=\"\" title=\"因为一个人 记住一座城\">\n<span id=\"more\"></span>\n\n<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/livehouse.png\" class=\"\" title=\"Day1: 漾 · LiveHouse\">\n<h2 id=\"Day1-漾-·-LiveHouse\"><a href=\"#Day1-漾-·-LiveHouse\" class=\"headerlink\" title=\"Day1: 漾 · LiveHouse\"></a>Day1: 漾 · LiveHouse</h2><p>一个偶尔会很嘈杂的地方，一个很多俊男靓女的地方，一个很多网红推荐的听歌喝酒玩游戏的地方，这里也是我们相见的地方。<br>要说实话的话，这里确实没什么好玩的，除了其中那么一两个驻唱的唱功还可以，氛围一般。</p>\n<h2 id=\"Slowly\"><a href=\"#Slowly\" class=\"headerlink\" title=\"Slowly\"></a>Slowly</h2><p>当天我们预约的位置需要在九点半之前到，否则位置就要被取消，所以我们赶在九点钟就到了现场，一开始等人齐还没有喝酒，正式开始喝的话应该是要从十点钟算起，喝了一个小时，还没看到你人来，我开始担心了：她该不会放我们鸽子了吧？所幸大概是十一点半左右，你终于来了，我着急的心终于放了下来，虽然你的长相很普通，但是你的笑容很甜，当时的我还没有这么想，现在想起来也只能回味了。</p>\n<h2 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro\"></a>Intro</h2><p>或许是因为只有我坐在你旁边，而且酒吧的音响很大声，所以你只能找我说话，你向我把周围所有人都稍微打听了一遍，然后向每个人都敬了一杯酒。我感到意外，这就是重庆人打招呼的方式吗。<br>你问我多大，我说我00的，你说你也是，但我一眼就看出来了你不是，后面你也坦诚了其实你是99的。<br>在玩游戏的时候通过交流中我也简单的了解到虽然你的外表娇小，但是你性格的另一面是个内心强大的人，有着面对一切的勇气。</p>\n<h2 id=\"Day1-End\"><a href=\"#Day1-End\" class=\"headerlink\" title=\"Day1:End\"></a>Day1:End</h2><p>到了晚上大概是一点多，大家都喝的差不多了，也就各自打车回家了。</p>\n<h2 id=\"Day2-Begin\"><a href=\"#Day2-Begin\" class=\"headerlink\" title=\"Day2:Begin\"></a>Day2:Begin</h2><p>回到酒店后，我知道第二天我们还会出来见面，或许这就是心灵感应吧，第二天你真的出现了。跟我们一起吃了晚饭后逛了一会决定去重庆长江大桥的桥底下，也就是洪崖洞的对岸拍一些照片。在等待她们拍照的时候重庆的特色一个是在景点内一些小贩会过来喊一圈她们想要像你出售的特色小吃。然后你突然问我你想吃冰棍吗，我说不吃。我就猜到其实你想吃随即就问道：你想吃吗?你说出了内心的想法，其实你不想一个人吃，那我作为一个男子汉当然是要满足身边女性的所有诉求的，好在小贩子还没有走远，追过去还来得及。我立即跑过去要了两根老冰棍，真的很冰，随即我想到的是你穿的这么少，会不会冷，所幸我带了一件薄外套，冷的话你也可以随时找我借。在桥底往上看是重庆的长江大桥，往对岸看就是著名的风貌街道的洪崖洞，洪崖洞背后的就是一栋一栋的高楼，去过的应该都不由得感叹一声重庆的夜景真的很美，不过重要的不是夜景有多美，而是一起看夜景的人是谁吧。</p>\n<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/night.jpg\" class=\"\" title=\"Night\">\n<h2 id=\"Night\"><a href=\"#Night\" class=\"headerlink\" title=\"Night\"></a>Night</h2><p>在桥底上来之后打了两辆车到了一条路边有几家摆摊的地方，本意是想要到一家特色烧烤的连锁店吃串串的，但是好像大家都不是很想吃串串，就点了一人一碗在重庆吃的最多的东西”冰汤圆”。然后找了一家看起来应该很好吃的烧烤档坐下喝酒吃烧烤。也是在这间烧烤档你给我留下了最深的影像，不知道是不是因为坐在你对面的是我，所以你总是看着我，看着我时也总是带着你那很愉悦的看起来很甜美的微笑，你的笑容大概就是我这次旅行的最大收获了，谢谢你，陈小姐。酒后当然也就各自散去了，虽然第二天还要赶早上八点的飞机，但也还是喝的差点就不省人事了。</p>\n<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/sunraise.jpg\" class=\"\" title=\"sunraise\">\n<h2 id=\"Traval-END\"><a href=\"#Traval-END\" class=\"headerlink\" title=\"Traval:END\"></a>Traval:END</h2><p>因为要赶早上八点的飞机，所以在凌晨五点半就要起床洗漱收拾东西，起床后我感到很空虚，心里好像少了什么东西，像是失恋了一样，每当重要的人要离开的时候这种感觉就会涌上心头，所幸在坐出租车到机场的路上正是太阳升起的时候，稍微治愈了我。<br>下午一点回到了住所，感情愈发强烈，陈小姐在不知不觉中就成为了我心里的那个重要的人，但是我们终究也只能是擦肩而过的成为彼此的路人了，我相信这个世界上是存在心灵感应的，当我内心中的感情涌上心头的时候，你那边应该也是吧。从重庆回来之后我发现时间过得很慢，慢到我能自我意识到我失去了你，慢到我没法专注于眼前的工作，慢到每时每刻我都会想起你那甜美的笑容，慢到我想马上坐上飞机回到重庆去见你。这篇文章也是趁着感情还没有完全消失之前，虽然没法把她永远留下来，但我可以将这美好的景色留下来，每当看到的时候都能想起她。  </p>\n<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/end.jpg\" class=\"\" title=\"end\">\n<p><code>热情相拥的相识过后竟是落寞的悲欢离合，谁又会只满足于当下的快乐呢？</code></p>\n","site":{"data":{}},"excerpt":"<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/tittle.jpg\" class=\"\" title=\"因为一个人 记住一座城\">","more":"<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/livehouse.png\" class=\"\" title=\"Day1: 漾 · LiveHouse\">\n<h2 id=\"Day1-漾-·-LiveHouse\"><a href=\"#Day1-漾-·-LiveHouse\" class=\"headerlink\" title=\"Day1: 漾 · LiveHouse\"></a>Day1: 漾 · LiveHouse</h2><p>一个偶尔会很嘈杂的地方，一个很多俊男靓女的地方，一个很多网红推荐的听歌喝酒玩游戏的地方，这里也是我们相见的地方。<br>要说实话的话，这里确实没什么好玩的，除了其中那么一两个驻唱的唱功还可以，氛围一般。</p>\n<h2 id=\"Slowly\"><a href=\"#Slowly\" class=\"headerlink\" title=\"Slowly\"></a>Slowly</h2><p>当天我们预约的位置需要在九点半之前到，否则位置就要被取消，所以我们赶在九点钟就到了现场，一开始等人齐还没有喝酒，正式开始喝的话应该是要从十点钟算起，喝了一个小时，还没看到你人来，我开始担心了：她该不会放我们鸽子了吧？所幸大概是十一点半左右，你终于来了，我着急的心终于放了下来，虽然你的长相很普通，但是你的笑容很甜，当时的我还没有这么想，现在想起来也只能回味了。</p>\n<h2 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro\"></a>Intro</h2><p>或许是因为只有我坐在你旁边，而且酒吧的音响很大声，所以你只能找我说话，你向我把周围所有人都稍微打听了一遍，然后向每个人都敬了一杯酒。我感到意外，这就是重庆人打招呼的方式吗。<br>你问我多大，我说我00的，你说你也是，但我一眼就看出来了你不是，后面你也坦诚了其实你是99的。<br>在玩游戏的时候通过交流中我也简单的了解到虽然你的外表娇小，但是你性格的另一面是个内心强大的人，有着面对一切的勇气。</p>\n<h2 id=\"Day1-End\"><a href=\"#Day1-End\" class=\"headerlink\" title=\"Day1:End\"></a>Day1:End</h2><p>到了晚上大概是一点多，大家都喝的差不多了，也就各自打车回家了。</p>\n<h2 id=\"Day2-Begin\"><a href=\"#Day2-Begin\" class=\"headerlink\" title=\"Day2:Begin\"></a>Day2:Begin</h2><p>回到酒店后，我知道第二天我们还会出来见面，或许这就是心灵感应吧，第二天你真的出现了。跟我们一起吃了晚饭后逛了一会决定去重庆长江大桥的桥底下，也就是洪崖洞的对岸拍一些照片。在等待她们拍照的时候重庆的特色一个是在景点内一些小贩会过来喊一圈她们想要像你出售的特色小吃。然后你突然问我你想吃冰棍吗，我说不吃。我就猜到其实你想吃随即就问道：你想吃吗?你说出了内心的想法，其实你不想一个人吃，那我作为一个男子汉当然是要满足身边女性的所有诉求的，好在小贩子还没有走远，追过去还来得及。我立即跑过去要了两根老冰棍，真的很冰，随即我想到的是你穿的这么少，会不会冷，所幸我带了一件薄外套，冷的话你也可以随时找我借。在桥底往上看是重庆的长江大桥，往对岸看就是著名的风貌街道的洪崖洞，洪崖洞背后的就是一栋一栋的高楼，去过的应该都不由得感叹一声重庆的夜景真的很美，不过重要的不是夜景有多美，而是一起看夜景的人是谁吧。</p>\n<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/night.jpg\" class=\"\" title=\"Night\">\n<h2 id=\"Night\"><a href=\"#Night\" class=\"headerlink\" title=\"Night\"></a>Night</h2><p>在桥底上来之后打了两辆车到了一条路边有几家摆摊的地方，本意是想要到一家特色烧烤的连锁店吃串串的，但是好像大家都不是很想吃串串，就点了一人一碗在重庆吃的最多的东西”冰汤圆”。然后找了一家看起来应该很好吃的烧烤档坐下喝酒吃烧烤。也是在这间烧烤档你给我留下了最深的影像，不知道是不是因为坐在你对面的是我，所以你总是看着我，看着我时也总是带着你那很愉悦的看起来很甜美的微笑，你的笑容大概就是我这次旅行的最大收获了，谢谢你，陈小姐。酒后当然也就各自散去了，虽然第二天还要赶早上八点的飞机，但也还是喝的差点就不省人事了。</p>\n<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/sunraise.jpg\" class=\"\" title=\"sunraise\">\n<h2 id=\"Traval-END\"><a href=\"#Traval-END\" class=\"headerlink\" title=\"Traval:END\"></a>Traval:END</h2><p>因为要赶早上八点的飞机，所以在凌晨五点半就要起床洗漱收拾东西，起床后我感到很空虚，心里好像少了什么东西，像是失恋了一样，每当重要的人要离开的时候这种感觉就会涌上心头，所幸在坐出租车到机场的路上正是太阳升起的时候，稍微治愈了我。<br>下午一点回到了住所，感情愈发强烈，陈小姐在不知不觉中就成为了我心里的那个重要的人，但是我们终究也只能是擦肩而过的成为彼此的路人了，我相信这个世界上是存在心灵感应的，当我内心中的感情涌上心头的时候，你那边应该也是吧。从重庆回来之后我发现时间过得很慢，慢到我能自我意识到我失去了你，慢到我没法专注于眼前的工作，慢到每时每刻我都会想起你那甜美的笑容，慢到我想马上坐上飞机回到重庆去见你。这篇文章也是趁着感情还没有完全消失之前，虽然没法把她永远留下来，但我可以将这美好的景色留下来，每当看到的时候都能想起她。  </p>\n<img src=\"/2022/05/07/%E9%87%8D%E5%BA%86-%E5%9B%A0%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BA%BA-%E8%AE%B0%E4%BD%8F%E4%B8%80%E5%BA%A7%E5%9F%8E/end.jpg\" class=\"\" title=\"end\">\n<p><code>热情相拥的相识过后竟是落寞的悲欢离合，谁又会只满足于当下的快乐呢？</code></p>"},{"title":"解决hexo图片插入不显示问题","date":"2022-04-25T08:46:33.000Z","_content":"![](https://tva2.sinaimg.cn/large/0072Vf1pgy1foxln98mdaj31hc0u018i.jpg)\n<!-- more -->\n\n说明：\n---\n  **在这之前使用hexo写东西上传照片总是不太方便，所以今天查了一下hexo图片上传以及显示的解决方案。**\n\n1. 在hexo目录执行  \n\n        npm install hexo-asset-img --save\n2. 修改_config.yml  \n将post_asset_folder: false 修改为true  \n\n        post_asset_folder: true\n3. 通过hexo n \"文档文章\"新建文章  \n会在source的post下自动生成一个 文章.md 以及一个文章同名目录  \n那么文章同名目录下就可以存放我们需要引用的图片了  \n调用方法：\n\n        ![](文章目录/your_img.jpg)\n经测试：通过以上方式插入图片，在VSCODE的Preview能够正常显示图片  \n在网站的文章内会自动转换成：{% asset_img img.jpg %}格式  \n这样即不影响我们编辑文章也不影响文章图片正常显示  \n我们需要的做的就只是正常生成文章  \n将需要的图片上传到目录中\n正常插入图片\n\n如果使用typora只需要设置文章根目录，上传图片可以直接拖拽或者粘贴会更加便捷。\n\n今天的技术分享到此结束！！\n","source":"_posts/解决hexo图片插入不显示问题.md","raw":"---\ntitle: 解决hexo图片插入不显示问题\ndate: 2022-04-25 16:46:33\ntags: [hexo, icarus]\ncategories: 技术分享\n---\n![](https://tva2.sinaimg.cn/large/0072Vf1pgy1foxln98mdaj31hc0u018i.jpg)\n<!-- more -->\n\n说明：\n---\n  **在这之前使用hexo写东西上传照片总是不太方便，所以今天查了一下hexo图片上传以及显示的解决方案。**\n\n1. 在hexo目录执行  \n\n        npm install hexo-asset-img --save\n2. 修改_config.yml  \n将post_asset_folder: false 修改为true  \n\n        post_asset_folder: true\n3. 通过hexo n \"文档文章\"新建文章  \n会在source的post下自动生成一个 文章.md 以及一个文章同名目录  \n那么文章同名目录下就可以存放我们需要引用的图片了  \n调用方法：\n\n        ![](文章目录/your_img.jpg)\n经测试：通过以上方式插入图片，在VSCODE的Preview能够正常显示图片  \n在网站的文章内会自动转换成：{% asset_img img.jpg %}格式  \n这样即不影响我们编辑文章也不影响文章图片正常显示  \n我们需要的做的就只是正常生成文章  \n将需要的图片上传到目录中\n正常插入图片\n\n如果使用typora只需要设置文章根目录，上传图片可以直接拖拽或者粘贴会更加便捷。\n\n今天的技术分享到此结束！！\n","slug":"解决hexo图片插入不显示问题","published":1,"updated":"2022-05-13T07:57:53.119Z","_id":"cl341xpvp001ybwx160xc5l1e","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://tva2.sinaimg.cn/large/0072Vf1pgy1foxln98mdaj31hc0u018i.jpg\"></p>\n<span id=\"more\"></span>\n\n<h2 id=\"说明：\"><a href=\"#说明：\" class=\"headerlink\" title=\"说明：\"></a>说明：</h2><p>  <strong>在这之前使用hexo写东西上传照片总是不太方便，所以今天查了一下hexo图片上传以及显示的解决方案。</strong></p>\n<ol>\n<li><p>在hexo目录执行  </p>\n<pre><code> npm install hexo-asset-img --save\n</code></pre>\n</li>\n<li><p>修改_config.yml<br>将post_asset_folder: false 修改为true  </p>\n<pre><code> post_asset_folder: true\n</code></pre>\n</li>\n<li><p>通过hexo n “文档文章”新建文章<br>会在source的post下自动生成一个 文章.md 以及一个文章同名目录<br>那么文章同名目录下就可以存放我们需要引用的图片了<br>调用方法：</p>\n<pre><code> ![](文章目录/your_img.jpg)\n</code></pre>\n<p>经测试：通过以上方式插入图片，在VSCODE的Preview能够正常显示图片<br>在网站的文章内会自动转换成：格式<br>这样即不影响我们编辑文章也不影响文章图片正常显示<br>我们需要的做的就只是正常生成文章<br>将需要的图片上传到目录中<br>正常插入图片</p>\n</li>\n</ol>\n<p>如果使用typora只需要设置文章根目录，上传图片可以直接拖拽或者粘贴会更加便捷。</p>\n<p>今天的技术分享到此结束！！</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://tva2.sinaimg.cn/large/0072Vf1pgy1foxln98mdaj31hc0u018i.jpg\"></p>","more":"<h2 id=\"说明：\"><a href=\"#说明：\" class=\"headerlink\" title=\"说明：\"></a>说明：</h2><p>  <strong>在这之前使用hexo写东西上传照片总是不太方便，所以今天查了一下hexo图片上传以及显示的解决方案。</strong></p>\n<ol>\n<li><p>在hexo目录执行  </p>\n<pre><code> npm install hexo-asset-img --save\n</code></pre>\n</li>\n<li><p>修改_config.yml<br>将post_asset_folder: false 修改为true  </p>\n<pre><code> post_asset_folder: true\n</code></pre>\n</li>\n<li><p>通过hexo n “文档文章”新建文章<br>会在source的post下自动生成一个 文章.md 以及一个文章同名目录<br>那么文章同名目录下就可以存放我们需要引用的图片了<br>调用方法：</p>\n<pre><code> ![](文章目录/your_img.jpg)\n</code></pre>\n<p>经测试：通过以上方式插入图片，在VSCODE的Preview能够正常显示图片<br>在网站的文章内会自动转换成：格式<br>这样即不影响我们编辑文章也不影响文章图片正常显示<br>我们需要的做的就只是正常生成文章<br>将需要的图片上传到目录中<br>正常插入图片</p>\n</li>\n</ol>\n<p>如果使用typora只需要设置文章根目录，上传图片可以直接拖拽或者粘贴会更加便捷。</p>\n<p>今天的技术分享到此结束！！</p>"}],"PostAsset":[{"_id":"source/_posts/Typora流程图代码实例/hello.jpeg","slug":"hello.jpeg","post":"cl341xpus0000bwx14x18fqlw","modified":0,"renderable":0},{"_id":"source/_posts/Typora流程图代码实例/test.png","slug":"test.png","post":"cl341xpus0000bwx14x18fqlw","modified":0,"renderable":0},{"_id":"source/_posts/重庆-因为一个人-记住一座城/end.jpg","slug":"end.jpg","post":"cl341xpvo001wbwx1cind5r9z","modified":0,"renderable":0},{"_id":"source/_posts/重庆-因为一个人-记住一座城/livehouse.png","slug":"livehouse.png","post":"cl341xpvo001wbwx1cind5r9z","modified":0,"renderable":0},{"_id":"source/_posts/重庆-因为一个人-记住一座城/night.jpg","slug":"night.jpg","post":"cl341xpvo001wbwx1cind5r9z","modified":0,"renderable":0},{"_id":"source/_posts/重庆-因为一个人-记住一座城/sunraise.jpg","slug":"sunraise.jpg","post":"cl341xpvo001wbwx1cind5r9z","modified":0,"renderable":0},{"_id":"source/_posts/重庆-因为一个人-记住一座城/tittle.jpg","slug":"tittle.jpg","post":"cl341xpvo001wbwx1cind5r9z","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl341xpus0000bwx14x18fqlw","category_id":"cl341xpv50002bwx1h1511zrb","_id":"cl341xpva000bbwx13ij14i7w"},{"post_id":"cl341xpv90009bwx17xkc7jk4","category_id":"cl341xpv90007bwx1guv5g9w0","_id":"cl341xpve000gbwx1goath8zw"},{"post_id":"cl341xpv00001bwx19ki1ft4y","category_id":"cl341xpv90007bwx1guv5g9w0","_id":"cl341xpvf000kbwx1be0o7ygf"},{"post_id":"cl341xpva000abwx1hy29ec43","category_id":"cl341xpv90007bwx1guv5g9w0","_id":"cl341xpvg000nbwx1bcd880ze"},{"post_id":"cl341xpvc000ebwx18a0odlz9","category_id":"cl341xpv90007bwx1guv5g9w0","_id":"cl341xpvh000sbwx16qlr26p2"},{"post_id":"cl341xpv70004bwx11k2w26np","category_id":"cl341xpv90007bwx1guv5g9w0","_id":"cl341xpvh000ubwx1fxvlaknj"},{"post_id":"cl341xpvd000fbwx137f1294r","category_id":"cl341xpv90007bwx1guv5g9w0","_id":"cl341xpvi000ybwx17jnsb22z"},{"post_id":"cl341xpve000jbwx19wgfhhuy","category_id":"cl341xpv50002bwx1h1511zrb","_id":"cl341xpvi0010bwx15fx519b9"},{"post_id":"cl341xpv80005bwx1aeoz1m0r","category_id":"cl341xpv90007bwx1guv5g9w0","_id":"cl341xpvi0013bwx1coxvcyvi"},{"post_id":"cl341xpv80006bwx1duba1zh6","category_id":"cl341xpv90007bwx1guv5g9w0","_id":"cl341xpvj0015bwx1e3i6hkvz"},{"post_id":"cl341xpvf000mbwx1ctzy468s","category_id":"cl341xpvh000vbwx15mhk89ym","_id":"cl341xpvj0017bwx1e09r4t46"},{"post_id":"cl341xpvg000rbwx1cxr9ay7b","category_id":"cl341xpvh000vbwx15mhk89ym","_id":"cl341xpvj0019bwx174p32c6h"},{"post_id":"cl341xpvo001vbwx1gwc614fq","category_id":"cl341xpv50002bwx1h1511zrb","_id":"cl341xpvq0020bwx1d3kt16h7"},{"post_id":"cl341xpvp001ybwx160xc5l1e","category_id":"cl341xpv50002bwx1h1511zrb","_id":"cl341xpvq0023bwx1fi6mbfkt"},{"post_id":"cl341xpvo001wbwx1cind5r9z","category_id":"cl341xpvq001zbwx15u1p5g20","_id":"cl341xpvq0025bwx1gaw4etzi"}],"PostTag":[{"post_id":"cl341xpus0000bwx14x18fqlw","tag_id":"cl341xpv60003bwx1alln8no7","_id":"cl341xpvf000lbwx13u1b86l5"},{"post_id":"cl341xpus0000bwx14x18fqlw","tag_id":"cl341xpv90008bwx17wk89kit","_id":"cl341xpvg000pbwx1h1kjcloz"},{"post_id":"cl341xpus0000bwx14x18fqlw","tag_id":"cl341xpva000dbwx13zl07oeu","_id":"cl341xpvh000tbwx1dakv54gh"},{"post_id":"cl341xpv00001bwx19ki1ft4y","tag_id":"cl341xpve000ibwx17atl6lym","_id":"cl341xpvi000wbwx13mdmhgsj"},{"post_id":"cl341xpv70004bwx11k2w26np","tag_id":"cl341xpve000ibwx17atl6lym","_id":"cl341xpvi000zbwx1dswp9pv5"},{"post_id":"cl341xpv80005bwx1aeoz1m0r","tag_id":"cl341xpve000ibwx17atl6lym","_id":"cl341xpvj0014bwx19esh21im"},{"post_id":"cl341xpv80006bwx1duba1zh6","tag_id":"cl341xpve000ibwx17atl6lym","_id":"cl341xpvj0018bwx1a1m659mb"},{"post_id":"cl341xpv90009bwx17xkc7jk4","tag_id":"cl341xpve000ibwx17atl6lym","_id":"cl341xpvj001bbwx1fy3q3f97"},{"post_id":"cl341xpva000abwx1hy29ec43","tag_id":"cl341xpve000ibwx17atl6lym","_id":"cl341xpvk001dbwx12x236nxf"},{"post_id":"cl341xpvc000ebwx18a0odlz9","tag_id":"cl341xpve000ibwx17atl6lym","_id":"cl341xpvk001fbwx1dh1ffqyf"},{"post_id":"cl341xpvd000fbwx137f1294r","tag_id":"cl341xpve000ibwx17atl6lym","_id":"cl341xpvk001hbwx1b2wn4fzb"},{"post_id":"cl341xpve000jbwx19wgfhhuy","tag_id":"cl341xpvk001gbwx1e8f24f13","_id":"cl341xpvl001lbwx10zqq45jz"},{"post_id":"cl341xpve000jbwx19wgfhhuy","tag_id":"cl341xpvk001ibwx11urg2z6b","_id":"cl341xpvl001mbwx15s9v73nt"},{"post_id":"cl341xpve000jbwx19wgfhhuy","tag_id":"cl341xpvl001jbwx1hrj5718n","_id":"cl341xpvl001obwx14mcf1l2y"},{"post_id":"cl341xpvf000mbwx1ctzy468s","tag_id":"cl341xpvl001kbwx1cib5c8z9","_id":"cl341xpvm001qbwx147p35ebq"},{"post_id":"cl341xpvf000mbwx1ctzy468s","tag_id":"cl341xpvl001nbwx1en3hf42n","_id":"cl341xpvm001rbwx187wf5f47"},{"post_id":"cl341xpvg000rbwx1cxr9ay7b","tag_id":"cl341xpvl001kbwx1cib5c8z9","_id":"cl341xpvm001tbwx1hcn69wsv"},{"post_id":"cl341xpvg000rbwx1cxr9ay7b","tag_id":"cl341xpvl001nbwx1en3hf42n","_id":"cl341xpvm001ubwx1805qg63z"},{"post_id":"cl341xpvo001vbwx1gwc614fq","tag_id":"cl341xpvp001xbwx14dg9dlos","_id":"cl341xpvq0022bwx1fbxf2xtm"},{"post_id":"cl341xpvo001wbwx1cind5r9z","tag_id":"cl341xpvq0021bwx14oc8cvt3","_id":"cl341xpvr0027bwx19veidlyc"},{"post_id":"cl341xpvo001wbwx1cind5r9z","tag_id":"cl341xpvq0024bwx14xpz30in","_id":"cl341xpvr0028bwx12eac1mqw"},{"post_id":"cl341xpvp001ybwx160xc5l1e","tag_id":"cl341xpvk001gbwx1e8f24f13","_id":"cl341xpvr0029bwx11g03axs5"},{"post_id":"cl341xpvp001ybwx160xc5l1e","tag_id":"cl341xpvq0026bwx172il1gjj","_id":"cl341xpvr002abwx17lou5ivy"}],"Tag":[{"name":"typora","_id":"cl341xpv60003bwx1alln8no7"},{"name":"流程图","_id":"cl341xpv90008bwx17wk89kit"},{"name":"mermaid","_id":"cl341xpva000dbwx13zl07oeu"},{"name":"flutter","_id":"cl341xpve000ibwx17atl6lym"},{"name":"hexo","_id":"cl341xpvk001gbwx1e8f24f13"},{"name":"blog","_id":"cl341xpvk001ibwx11urg2z6b"},{"name":"github","_id":"cl341xpvl001jbwx1hrj5718n"},{"name":"book","_id":"cl341xpvl001kbwx1cib5c8z9"},{"name":"三毛","_id":"cl341xpvl001nbwx1en3hf42n"},{"name":"SSL","_id":"cl341xpvp001xbwx14dg9dlos"},{"name":"旅行","_id":"cl341xpvq0021bwx14oc8cvt3"},{"name":"重庆","_id":"cl341xpvq0024bwx14xpz30in"},{"name":"icarus","_id":"cl341xpvq0026bwx172il1gjj"}]}}